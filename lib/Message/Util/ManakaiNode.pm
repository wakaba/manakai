#!/usr/bin/perl 
## This file is automatically generated
## 	at 2005-09-08T16:44:40+00:00,
## 	from file "lib/Message/Util/ManakaiNode.dis",
## 	module <http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/ManakaiNode>,
## 	for <http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#Perl>.
## Don't edit by hand!
use strict;
package Message::Util::ManakaiNode;
our $VERSION = 20050908.1644;
package Message::Util::ManakaiNode::ManakaiDOMNodeObject;
our $VERSION = 20050908.1644;
push our @ISA, 'Message::Util::IF::NodeStem';
sub _import_tree ($$) {
my ($self, $node) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #39)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #37)"
unless 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #1)"
($node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #2)"
'treeID'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #3)"
} eq
        $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #4)"
'treeID'
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #5)"
}) {
  my @node = ($node);
  NODES: while (defined (my $node = shift @node)) {
    next unless UNIVERSAL::isa ($node,
                
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #6)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #7)"
);
      my @n;
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #8)"
'subnode2'
#line 8 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #9)"
}}) {
        if (ref $node->{$p} eq 'ARRAY') {
          push @n, @{$node->{$p}};
        } elsif (ref $node->{$p} eq 'HASH') {
          push @n, values %{$node->{$p}};
        }
      }
      for my $p (@n,
                 map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #10)"
'subnode'
#line 16 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #11)"
}}) {
        if (ref $p eq 'ARRAY') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #12)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 19 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #13)"
)
                            and $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #14)"
'treeID'
#line 20 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #15)"
} ne
                            $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #16)"
'treeID'
#line 21 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #17)"
}} @$p;
        } elsif (ref $p eq 'HASH') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #18)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 24 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #19)"
)
                            and $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #20)"
'treeID'
#line 25 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #21)"
} ne
                            $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #22)"
'treeID'
#line 26 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #23)"
}}
                      values %$p;
        }
      }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #24)"
'origin'
#line 30 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #25)"
}},
           @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #26)"
'subnode0'
#line 31 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #27)"
}}) {
      push @node, $node->{$p}
        if defined $node->{$p} and
           $node->{$p}->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #28)"
'treeID'
#line 34 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #29)"
} ne
           $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #30)"
'treeID'
#line 35 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #31)"
};
    }
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #32)"
'treeID'
#line 37 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #33)"
} = $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #34)"
'treeID'
#line 37 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #35)"
};
  }
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #36)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #38)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #40)"
}
}
sub _orphanate ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #53)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #51)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #41)"
($self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #42)"
_is_externally_referred
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #43)"
) {
  $self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #44)"
_change_tree_id
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #45)"

               (
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #46)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #47)"
);
} else {
  $self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #48)"
_destroy
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #49)"
;
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #50)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #52)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #54)"
}
}
sub _is_externally_referred ($) {
my ($self) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #81)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #79)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #55)"
($self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #56)"
'rc'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #57)"
}) {
  $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #58)"
1
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #59)"
;
} else {
  my @node = ($self);
  my %checked;
  NODES: while (defined (my $node = shift @node)) {
    next unless UNIVERSAL::isa ($node,
                
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #60)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 8 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #61)"
);
    if ($node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #62)"
'rc'
#line 9 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #63)"
}) {
      $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #64)"
1
#line 10 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #65)"
;
      last NODES;
    } elsif ($checked{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #66)"
'nodeID'
#line 12 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #67)"
}}) {
      next NODES;
    }
    my @n;
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #68)"
'subnode2'
#line 16 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #69)"
}}) {
      if (ref $node->{$p} eq 'ARRAY') {
        push @n, @{$node->{$p}};
      } elsif (ref $node->{$p} eq 'HASH') {
        push @n, values %{$node->{$p}};
      }
    }
    for my $p (@n,
               map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #70)"
'subnode'
#line 24 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #71)"
}}) {
      if (ref $p eq 'ARRAY') {
        push @node, @$p;
      } elsif (ref $p eq 'HASH') {
        push @node, values %$p;
      }
    }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #72)"
'origin'
#line 31 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #73)"
}}) {
      unshift @node, $node->{$p} if $node->{$p};
      ## NOTE: Puts the top of the list,
      ##       since upper-level nodes are expected to be referred
      ##       more than lower-levels.
    }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #74)"
'subnode0'
#line 37 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #75)"
}}) {
      push @node, $node->{$p} if $node->{$p};
    }
    $checked{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #76)"
'nodeID'
#line 40 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #77)"
}} = 1;
  }
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #78)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #80)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #82)"
}
$r}
sub _destroy ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #105)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #103)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #83)"
@node = ($self);
NODES: while (defined (my $node = shift @node)) {
      my @n;
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #84)"
'subnode2'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #85)"
}}) {
        if (ref $node->{$p} eq 'ARRAY') {
          push @n, @{$node->{$p}};
        } elsif (ref $node->{$p} eq 'HASH') {
          push @n, values %{$node->{$p}};
        }
      }
      for my $p (@n,
                 map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #86)"
'subnode'
#line 12 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #87)"
}}) {
        if (ref $p eq 'ARRAY') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #88)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 15 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #89)"
)
                            and defined $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #90)"
'nodeID'
#line 16 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #91)"
}} @$p;
        } elsif (ref $p eq 'HASH') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #92)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 19 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #93)"
)
                            and defined $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #94)"
'nodeID'
#line 20 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #95)"
}}
                       values %$p;
        }
      }
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #96)"
'origin'
#line 24 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #97)"
}},
             @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #98)"
'subnode0'
#line 25 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #99)"
}}) {
        push @node, $node->{$p}
          if defined $node->{$p} and
             defined $node->{$p}->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #100)"
'nodeID'
#line 28 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #101)"
};
      }
  %$node = ();
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #102)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #104)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #106)"
}
}
sub _change_tree_id ($$) {
my ($self, $treeID) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #135)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #133)"
unless 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #107)"
($self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #108)"
'treeID'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #109)"
} eq $treeID) {
  my @node = ($self);
  NODES: while (defined (my $node = shift @node)) {
    next unless UNIVERSAL::isa ($node,
                
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #110)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #111)"
);
      my @n;
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #112)"
'subnode2'
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #113)"
}}) {
        if (ref $node->{$p} eq 'ARRAY') {
          push @n, @{$node->{$p}};
        } elsif (ref $node->{$p} eq 'HASH') {
          push @n, values %{$node->{$p}};
        }
      }
      for my $p (@n,
                 map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #114)"
'subnode'
#line 15 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #115)"
}}) {
        if (ref $p eq 'ARRAY') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #116)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 18 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #117)"
)
                            and
                            $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #118)"
'treeID'
#line 20 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #119)"
} ne $treeID} @$p;
        } elsif (ref $p eq 'HASH') {
          push @node, grep {UNIVERSAL::isa ($_,
                            
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #120)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 23 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #121)"
)
                            and $_->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #122)"
'treeID'
#line 24 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #123)"
} ne $treeID}
                      values %$p;
        }
      }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #124)"
'origin'
#line 28 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #125)"
}},
               @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #126)"
'subnode0'
#line 29 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #127)"
}}) {
      push @node, $node->{$p}
        if defined $node->{$p} and
           $node->{$p}->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #128)"
'treeID'
#line 32 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #129)"
} ne $treeID;
    }
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #130)"
'treeID'
#line 34 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #131)"
} = $treeID;
  }
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #132)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #134)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #136)"
}
}
sub _new ($) {
my ($self) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #165)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #163)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #137)"
$r = bless {
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #138)"
'origin'
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #139)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #140)"
'subnode0'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #141)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #142)"
'subnode'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #143)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #144)"
'subnode2'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #145)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #146)"
'irefnode'
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #147)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #148)"
'anydata'
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #149)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #150)"
'anydata2'
#line 8 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #151)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #152)"
'rc'
#line 9 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #153)"
 => 0,
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #154)"
'treeID'
#line 10 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #155)"
 => 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #156)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 10 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #157)"
,
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #158)"
'nodeID'
#line 11 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #159)"
 => 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #160)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 11 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #161)"
,
}, ref $self || $self;
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #162)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #164)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #166)"
}
$r}
sub _is_same_node ($$) {
my ($self, $node) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #179)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #177)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #167)"
(ref $node and
    UNIVERSAL::isa ($node,
                    
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #168)"
'Message::Util::ManakaiNode::ManakaiDOMNodeObject'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #169)"
) and
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #170)"
'nodeID'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #171)"
} eq $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #172)"
'nodeID'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #173)"
}) {
  $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #174)"
1
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #175)"
;
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #176)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #178)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #180)"
}
$r}
sub _new_reference ($$) {
my ($self, $class) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #191)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #189)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #181)"
$r = bless {
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #182)"
'node'
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #183)"
 => $self,
}, ref $class ? ref $class : defined $class ? $class :
   
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #184)"
'Message::Util::ManakaiNode::ManakaiDOMNodeReference'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #185)"
;
$self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #186)"
'rc'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=newReference][@type=DISLang:Method]/Return[@Type=ManakaiDOM:ManakaiDOMNodeReference][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #187)"
}++;
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #188)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #190)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #192)"
}
$r}
use overload bool => sub () {1}, 'eq', '_is_same_node', fallback => 1;
$Message::DOM::ClassFeature{q<Message::Util::ManakaiNode::ManakaiDOMNodeObject>} = {};
$Message::DOM::ClassPoint{q<Message::Util::ManakaiNode::ManakaiDOMNodeObject>} = 0;
package Message::Util::ManakaiNode::ManakaiNodeStem;
our $VERSION = 20050908.1644;
push our @ISA, 'Message::Util::IF::NodeStem';
sub _import_tree ($$) {
my ($self, $node) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #213)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #211)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #193)"
@node = ($node);
NODES: while (defined (my $node = shift @node)) {
  next unless ref $node;
  next if $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #194)"
'treeID'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #195)"
} eq
          $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #196)"
'treeID'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #197)"
};
  my @n;
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #198)"
'subnode2'
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #199)"
}}) {
      if (ref $node->{$p} eq 'ARRAY') {
        push @n, @{$node->{$p}};
      } elsif (ref $node->{$p} eq 'HASH') {
        push @n, values %{$node->{$p}};
      }
    }
    for my $p (@n,
               map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #200)"
'subnode'
#line 15 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #201)"
}}) {
      if (ref $p eq 'ARRAY') {
        push @node, @$p;
      } elsif (ref $p eq 'HASH') {
        push @node, values %$p;
      }
    }
  for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #202)"
'origin'
#line 22 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #203)"
}},
           @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #204)"
'subnode0'
#line 23 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #205)"
}}) {
    push @node, $node->{$p};
  }
  $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #206)"
'treeID'
#line 26 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #207)"
} = $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #208)"
'treeID'
#line 26 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=importTree][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #209)"
};
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #210)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #212)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #214)"
}
}
sub _new ($) {
my ($self) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #243)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #241)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #215)"
$r = bless {
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #216)"
'origin'
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #217)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #218)"
'subnode0'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #219)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #220)"
'subnode'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #221)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #222)"
'subnode2'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #223)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #224)"
'irefnode'
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #225)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #226)"
'anydata'
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #227)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #228)"
'anydata2'
#line 8 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #229)"
 => [],
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #230)"
'rc'
#line 9 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #231)"
 => 0,
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #232)"
'treeID'
#line 10 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #233)"
 => 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #234)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 10 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #235)"
,
  
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #236)"
'nodeID'
#line 11 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #237)"
 => 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #238)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 11 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=new][@type=DISLang:Method]/Return[@Type=NodeStem][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #239)"
,
}, ref $self || $self;
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #240)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #242)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #244)"
}
$r}
sub _orphanate ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #257)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #255)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #245)"
($self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #246)"
_is_externally_referred
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #247)"
) {
  $self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #248)"
_change_tree_id
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #249)"

               (
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #250)"
(
  sprintf 'mid:%d.%d.%s.dom.manakai@suika.fam.cx#',
          time, $$,
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62] .
          ['A'..'Z', 'a'..'z', '0'..'9']->[rand 62]
)
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #251)"
);
} else {
  $self->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #252)"
_destroy
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=orphanate][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #253)"
;
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #254)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #256)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #258)"
}
}
sub _is_externally_referred ($) {
my ($self) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #283)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #281)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #259)"
($self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #260)"
'rc'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #261)"
}) {
  $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #262)"
1
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #263)"
;
} else {
  my @node = ($self);
  my %checked;
  NODES: while (defined (my $node = shift @node)) {
    next unless ref $node;
    if ($node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #264)"
'rc'
#line 8 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #265)"
}) {
      $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #266)"
1
#line 9 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #267)"
;
      last NODES;
    } elsif ($checked{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #268)"
'nodeID'
#line 11 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #269)"
}}) {
      next NODES;
    }
    my @n;
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #270)"
'subnode2'
#line 15 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #271)"
}}) {
      if (ref $node->{$p} eq 'ARRAY') {
        push @n, @{$node->{$p}};
      } elsif (ref $node->{$p} eq 'HASH') {
        push @n, values %{$node->{$p}};
      }
    }
    for my $p (@n,
               map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #272)"
'subnode'
#line 23 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #273)"
}}) {
      if (ref $p eq 'ARRAY') {
        push @node, @$p;
      } elsif (ref $p eq 'HASH') {
        push @node, values %$p;
      }
    }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #274)"
'origin'
#line 30 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #275)"
}}) {
      unshift @node, $node->{$p} if $node->{$p};
      ## NOTE: Puts the top of the list,
      ##       since upper-level nodes are expected to be referred
      ##       more than lower-levels.
    }
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #276)"
'subnode0'
#line 36 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #277)"
}}) {
      push @node, $node->{$p} if $node->{$p};
    }
    $checked{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #278)"
'nodeID'
#line 39 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isExternallyReferred][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #279)"
}} = 1;
  }
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #280)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #282)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #284)"
}
$r}
sub _is_same_node ($$) {
my ($self, $node) = @_;
my $r;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #297)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #295)"
if 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #285)"
(ref $node and
    UNIVERSAL::isa ($node, 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #286)"
'Message::Util::IF::NodeStem'
#line 2 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #287)"
) and
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #288)"
'nodeID'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #289)"
} eq $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #290)"
'nodeID'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #291)"
}) {
  $r = 
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #292)"
1
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=isSameNode][@type=DISLang:Method]/Return[@Type=DISPerl:Boolean::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #293)"
;
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #294)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #296)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #298)"
}
$r}
sub _destroy ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #313)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #311)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #299)"
@node = ($self);
NODES: while (defined (my $node = shift @node)) {
  next unless ref $node and defined $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #300)"
'nodeID'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #301)"
};
  my @n;
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #302)"
'subnode2'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #303)"
}}) {
        if (ref $node->{$p} eq 'ARRAY') {
          push @n, @{$node->{$p}};
        } elsif (ref $node->{$p} eq 'HASH') {
          push @n, values %{$node->{$p}};
        }
      }
      for my $p (@n,
                 map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #304)"
'subnode'
#line 13 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #305)"
}}) {
        if (ref $p eq 'ARRAY') {
          push @node, @$p;
        } elsif (ref $p eq 'HASH') {
          push @node, values %$p;
        }
      }
      for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #306)"
'origin'
#line 20 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #307)"
}},
             @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #308)"
'subnode0'
#line 21 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #309)"
}}) {
        push @node, $node->{$p};
      }
  %$node = ();
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #310)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #312)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #314)"
}
}
sub _change_tree_id ($$) {
my ($self, $treeID) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #331)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #329)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #315)"
@node = ($self);
NODES: while (defined (my $node = shift @node)) {
  next unless ref $node;
  next if $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #316)"
'treeID'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #317)"
} eq $treeID;
    my @n;
    for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #318)"
'subnode2'
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #319)"
}}) {
      if (ref $node->{$p} eq 'ARRAY') {
        push @n, @{$node->{$p}};
      } elsif (ref $node->{$p} eq 'HASH') {
        push @n, values %{$node->{$p}};
      }
    }
    for my $p (@n,
               map {$node->{$_}} @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #320)"
'subnode'
#line 14 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #321)"
}}) {
      if (ref $p eq 'ARRAY') {
        push @node, @$p;
      } elsif (ref $p eq 'HASH') {
        push @node, values %$p;
      }
    }
  for my $p (@{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #322)"
'origin'
#line 21 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #323)"
}},
               @{$node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #324)"
'subnode0'
#line 22 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #325)"
}}) {
    push @node, $node->{$p};
  }
  $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #326)"
'treeID'
#line 25 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeStem][@type=dis:MultipleResource]/IntMethod[@Name=changeTreeID][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #327)"
} = $treeID;
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #328)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #330)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #332)"
}
}
use overload bool => sub () {1}, 'eq', '_is_same_node', fallback => 1;
$Message::DOM::ClassFeature{q<Message::Util::ManakaiNode::ManakaiNodeStem>} = {};
$Message::DOM::ClassPoint{q<Message::Util::ManakaiNode::ManakaiNodeStem>} = 0;
package Message::Util::ManakaiNode::ManakaiDOMNodeReference;
our $VERSION = 20050908.1644;
push our @ISA, 'Message::Util::IF::NodeRef';
*DESTROY = \&_destroy;
sub _destroy ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #349)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #347)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #333)"
$node = $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #334)"
'node'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #335)"
};
if ($node) {
  CORE::delete $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #336)"
'node'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #337)"
};
  unless ($self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #338)"
'isWeak'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #339)"
}) {
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #340)"
'rc'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #341)"
}--;
    unless ($node->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #342)"
_is_externally_referred
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #343)"
) {
      $node->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #344)"
_destroy
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #345)"
;
    }
  }
} else {
  warn ref ($self) . q{->DESTROY: there is no associated }.
       q{node object - you have a global variable or }.
       qq{potential memory-leak detected\n};
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #346)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #348)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #350)"
}
}
$Message::DOM::ClassFeature{q<Message::Util::ManakaiNode::ManakaiDOMNodeReference>} = {};
$Message::DOM::ClassPoint{q<Message::Util::ManakaiNode::ManakaiDOMNodeReference>} = 0;
package Message::Util::ManakaiNode::ManakaiNodeRef;
our $VERSION = 20050908.1644;
push our @ISA, 'Message::Util::IF::NodeRef';
sub free ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/ResourceDef[@Name=free][@type=DISLang|Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #359)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/ResourceDef[@Name=free][@type=DISLang|Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #357)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/ResourceDef[@Name=free][@type=DISLang|Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #351)"
$self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #352)"
'node'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/ResourceDef[@Name=free][@type=DISLang|Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #353)"
}->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #354)"
_destroy
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/ResourceDef[@Name=free][@type=DISLang|Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #355)"
;
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #356)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #358)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #360)"
}
}
*DESTROY = \&_destroy;
sub _destroy ($) {
my ($self) = @_;

{
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #377)"

#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #375)"
my 
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #361)"
$node = $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #362)"
'node'
#line 1 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #363)"
};
if ($node) {
  CORE::delete $self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #364)"
'node'
#line 3 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #365)"
};
  unless ($self->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #366)"
'isWeak'
#line 4 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #367)"
}) {
    $node->{
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #368)"
'rc'
#line 5 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #369)"
}--;
    unless ($node->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #370)"
_is_externally_referred
#line 6 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #371)"
) {
      $node->
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #372)"
_destroy
#line 7 "/document (lib/Message/Util/ManakaiNode.dis)/ClassDef[@QName=NodeRef][@type=dis:MultipleResource]/IntMethod[@Name=destroy][@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #373)"
;
    }
  }
} else {
  warn ref ($self) . q{->DESTROY: there is no associated }.
       q{node object - you have a global variable or }.
       qq{potential memory-leak detected\n};
}
#line 1 "lib/Message/Util/ManakaiNode.dis [/u] (Chunk #374)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/bc] (Chunk #376)"

#line 1 "lib/Message/Util/ManakaiNode.dis [/b] (Chunk #378)"
}
}
$Message::DOM::ClassFeature{q<Message::Util::ManakaiNode::ManakaiNodeRef>} = {};
$Message::DOM::ClassPoint{q<Message::Util::ManakaiNode::ManakaiNodeRef>} = 0;
for ($Message::Util::IF::NodeRef::, $Message::Util::IF::NodeStem::){}
## License: <http://suika.fam.cx/~wakaba/archive/2004/8/18/license#Perl+MPL>
1;
