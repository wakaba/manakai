#!/usr/bin/perl 
## This file is automatically generated
## 	at 2005-05-29T23:08:08+00:00,
## 	from file "lib/Message/Util/Error/DOMException.dis",
## 	module <http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException>,
## 	for <http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#Perl>.
## Don't edit by hand!
use strict;
require Message::Util::Error;
package Message::Util::Error::DOMException;
our $VERSION = 20050529.2308;
sub NO_MODIFICATION_ALLOWED_ERR ();
sub MDOM_DEBUG_BUG ();
sub NOT_SUPPORTED_ERR ();
sub AUTOLOAD {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #1)"

        my $al = our $AUTOLOAD;
        $al =~ s/.+:://;
        if ({'NO_MODIFICATION_ALLOWED_ERR', 'Message::Util::Error::DOMException::NO_MODIFICATION_ALLOWED_ERR', 'MDOM_DEBUG_BUG', 'Message::Util::Error::DOMException::MDOM_DEBUG_BUG', 'NOT_SUPPORTED_ERR', 'Message::Util::Error::DOMException::NOT_SUPPORTED_ERR'}->{$al}) {
          no strict 'refs';
          *{$AUTOLOAD} = \&{{'NO_MODIFICATION_ALLOWED_ERR', 'Message::Util::Error::DOMException::NO_MODIFICATION_ALLOWED_ERR', 'MDOM_DEBUG_BUG', 'Message::Util::Error::DOMException::MDOM_DEBUG_BUG', 'NOT_SUPPORTED_ERR', 'Message::Util::Error::DOMException::NOT_SUPPORTED_ERR'}->{$al}};
          goto &{$AUTOLOAD};
        } else {
          require Carp;
          Carp::croak (qq<Can't locate method "$AUTOLOAD">);
        }
      
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #2)"
}
sub import {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #3)"

        my $self = shift;
        if (@_) {
          local $Exporter::ExportLevel = $Exporter::ExportLevel + 1;
          $self->SUPER::import (@_);
          for (grep {not /\W/} @_) {
            eval qq{$_};
          }
        }
      
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #4)"
}
our %EXPORT_TAG = ('CoreExceptionCode', ['NO_MODIFICATION_ALLOWED_ERR', 'MDOM_DEBUG_BUG', 'NOT_SUPPORTED_ERR']);
our @EXPORT_OK = ('NO_MODIFICATION_ALLOWED_ERR', 'MDOM_DEBUG_BUG', 'NOT_SUPPORTED_ERR');
use Exporter; push our @ISA, 'Exporter';
package Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning;
our $VERSION = 20050529.2308;
push our @ISA, 'Message::Util::Error';
sub stringify ($) {
my ($self) = @_;
my $r = '';

{
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #31)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #29)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #5)"
$r = $self->SUPER::stringify;
if (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #6)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class'
#line 2 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #7)"
}) {
  if (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #8)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method'
#line 3 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #9)"
}) {
    $r = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #10)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class'
#line 4 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #11)"
} . '->' .
         $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #12)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method'
#line 5 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #13)"
} . ': ' . $r;
  } elsif (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #14)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr'
#line 6 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #15)"
}) {
    $r = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #16)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class'
#line 7 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #17)"
} . '->' .
         $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #18)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr'
#line 8 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #19)"
} . ' (' .
         $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #20)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on'
#line 9 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #21)"
} . '): ' . $r;
  } else {
    $r = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #22)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class'
#line 11 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #23)"
} . ': ' . $r;
  }
}
if (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #24)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name'
#line 14 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #25)"
}) {
  $r = 'Parameter "' . $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #26)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name'
#line 15 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Method[@type=DISLang:Method]/Return[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #27)"
} . '": ' . $r;
}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #28)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #30)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/b] (Chunk #32)"
}
$r}
sub ___error_def () {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #33)"
{}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #34)"
}
sub text ($;$) {
if (@_ == 1) {
#line 1 "lib/Message/Util/Error/DOMException.dis [bc] (Chunk #69)"
my ($self) = @_;
my $r = '';

{
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [b] (Chunk #67)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [bc] (Chunk #65)"
my 
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #35)"
$template;
if (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #36)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype'
#line 2 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #37)"
} and
    defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #38)"
'-def'
#line 3 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #39)"
}->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #40)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype'
#line 3 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #41)"
}
         ->{$self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #42)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype'
#line 4 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #43)"
}}
         ->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #44)"
'description'
#line 5 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #45)"
}) {
  $template = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #46)"
'-def'
#line 6 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #47)"
}
         ->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #48)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype'
#line 7 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #49)"
}
         ->{$self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #50)"
'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype'
#line 8 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #51)"
}}
         ->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #52)"
'description'
#line 9 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #53)"
};
} elsif (defined $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #54)"
'-def'
#line 10 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #55)"
}
         ->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #56)"
'description'
#line 11 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #57)"
}) {
  $template = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #58)"
'-def'
#line 12 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #59)"
}
         ->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #60)"
'description'
#line 13 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #61)"
};
} else {
  $template = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #62)"
'-type'
#line 15 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=text][@type=DISLang:Attribute]/Get[@Type=DISLang:String::ManakaiDOM:all][@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #63)"
};
}
$r = $self->_FORMATTER_PACKAGE_->new
          ->replace ($template, param => $self);
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #64)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #66)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/b] (Chunk #68)"
}
$r;

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #70)"
} else {
#line 1 "lib/Message/Util/Error/DOMException.dis [bc] (Chunk #71)"
my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'text';

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #72)"
}}
sub code ($;$) {
if (@_ == 1) {
#line 1 "lib/Message/Util/Error/DOMException.dis [bc] (Chunk #83)"
my ($self) = @_;
my $r = 0;

{
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=code][@Type=DOMMain:unsigned-short::ManakaiDOM:all][@type=DISLang:Attribute]/Get[@type=DISLang:AttributeGet]/PerlDef [b] (Chunk #81)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=code][@Type=DOMMain:unsigned-short::ManakaiDOM:all][@type=DISLang:Attribute]/Get[@type=DISLang:AttributeGet]/PerlDef [bc] (Chunk #79)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=code][@Type=DOMMain:unsigned-short::ManakaiDOM:all][@type=DISLang:Attribute]/Get[@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #73)"
$r = $self->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #74)"
'-def'
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=code][@Type=DOMMain:unsigned-short::ManakaiDOM:all][@type=DISLang:Attribute]/Get[@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #75)"
}->{
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #76)"
'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code'
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDOM:ManakaiDOMExceptionOrWarning][@type=AnyExceptionClass]/Attr[@Name=code][@Type=DOMMain:unsigned-short::ManakaiDOM:all][@type=DISLang:Attribute]/Get[@type=DISLang:AttributeGet]/PerlDef [u] (Chunk #77)"
};
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #78)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #80)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/b] (Chunk #82)"
}
$r;

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #84)"
} else {
#line 1 "lib/Message/Util/Error/DOMException.dis [bc] (Chunk #85)"
my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'code';

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #86)"
}}
$Message::DOM::ClassFeature{q<Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning>} = {};
$Message::DOM::ClassPoint{q<Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning>} = 0;
package Message::Util::Error::DOMException::ManakaiDOMException;
our $VERSION = 20050529.2308;
push our @ISA, 'Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning';
sub ___error_def () {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #87)"
{}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #88)"
}
$Message::DOM::ClassFeature{q<Message::Util::Error::DOMException::ManakaiDOMException>} = {};
$Message::DOM::ClassPoint{q<Message::Util::Error::DOMException::ManakaiDOMException>} = 0;
package Message::Util::Error::DOMException::ManakaiDOMWarning;
our $VERSION = 20050529.2308;
push our @ISA, 'Message::Util::Error::DOMException::ManakaiDOMExceptionOrWarning';
sub ___error_def () {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #89)"
{}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #90)"
}
$Message::DOM::ClassFeature{q<Message::Util::Error::DOMException::ManakaiDOMWarning>} = {};
$Message::DOM::ClassPoint{q<Message::Util::Error::DOMException::ManakaiDOMWarning>} = 0;
package Message::Util::Error::DOMException::CoreException;
our $VERSION = 20050529.2308;
push our @ISA, 'Message::Util::Error::DOMException::ManakaiDOMException';
sub NO_MODIFICATION_ALLOWED_ERR () {
7}
sub MDOM_DEBUG_BUG () {
3}
sub ___error_def () {

#line 1 "lib/Message/Util/Error/DOMException.dis [u] (Chunk #91)"
{'NO_MODIFICATION_ALLOWED_ERR', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '7', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', {'description', 'Attribute "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class}, suffix => {.} );%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr});" is read-only'}}, 'description', 'An attempt is made to modify read-only object.'}, 'MDOM_DEBUG_BUG', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '3', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/dom/main#ASSERTION_ERR', {'description', 'ASSERTION ERROR: got "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/dom/main#actualValue});" while %p (name => {http://suika.fam.cx/~wakaba/archive/2004/dom/main#expectedValue}, prefix => {"}, suffix => {"});%p (name => {http://suika.fam.cx/~wakaba/archive/2004/dom/main#expectedLabel}, prefix => { (}, suffix => {)}); is expected %p ( name => {http://suika.fam.cx/~wakaba/archive/2004/dom/main#traceText});'}}, 'description', 'Unexpected case occurs. In general, this exception is not reported. If the implementation has a bug and something unexpected is occur, this exception is raised. Applications MUST NOT try to catch this exception. If this exception is raised, please report to the author of that module. {NOTE:: New assertion mechanism and subtype <X::ASSERTION_ERR> has been introduced; it should be used instead of throwing <X::MDOMX:MDOM_DEBUG_BUG> directly. }'}, 'NOT_SUPPORTED_ERR', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '9', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_METHOD_NOT_IMPLEMENTED', {'description', 'The method "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class}, suffix => {.} );%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method});" has not been implemented yet'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_ATTR_NOT_IMPLEMENTED', {'description', 'The attribute "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class}, suffix => {.} );%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr});" %p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on}, prefix => {(}, suffix => {)}); has not been implemented yet'}}, 'description', 'The implementation does not support the action.'}}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #92)"
}
sub NOT_SUPPORTED_ERR () {
9}
$Message::DOM::ClassFeature{q<Message::Util::Error::DOMException::CoreException>} = {};
$Message::DOM::ClassPoint{q<Message::Util::Error::DOMException::CoreException>} = 0;
package Message::Util::Error::DOMException::ManakaiDefaultExceptionHandler;
our $VERSION = 20050529.2308;
sub ___report_error ($$) {
my ($self, $err) = @_;

{
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDefaultExceptionHandler][@type=ManakaiDOM:Class]/ResourceDef[@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [b] (Chunk #99)"

#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDefaultExceptionHandler][@type=ManakaiDOM:Class]/ResourceDef[@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [bc] (Chunk #97)"
if 
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDefaultExceptionHandler][@type=ManakaiDOM:Class]/ResourceDef[@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #93)"
($err->isa (
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #94)"
'Message::Util::Error::DOMException::ManakaiDOMException'
#line 1 "/document (lib/Message/Util/Error/DOMException.dis)/ResourceDef[@QName=ManakaiDefaultExceptionHandler][@type=ManakaiDOM:Class]/ResourceDef[@type=DISLang:Method]/Return[@type=DISLang:MethodReturn]/PerlDef [u] (Chunk #95)"
)) {
  $err->throw;
} else {
## TODO: Implement warning reporting
  warn $err->stringify;
}
#line 1 "lib/Message/Util/Error/DOMException.dis [/u] (Chunk #96)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/bc] (Chunk #98)"

#line 1 "lib/Message/Util/Error/DOMException.dis [/b] (Chunk #100)"
}
}
$Message::DOM::ClassFeature{q<Message::Util::Error::DOMException::ManakaiDefaultExceptionHandler>} = {};
$Message::DOM::ClassPoint{q<Message::Util::Error::DOMException::ManakaiDefaultExceptionHandler>} = 0;
## License: <http://suika.fam.cx/~wakaba/archive/2004/8/18/license#Perl+MPL>
1;
