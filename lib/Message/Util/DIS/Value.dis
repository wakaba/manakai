Module:
  @QName:
    DIS:Value
  @FullName:
    @@lang: en
    @@@:
      <QUOTE::dis> Value Module
  @Namespace:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#Value/
  
  @Description:
    @@lang:en
    @@@:
      This module provides interfaces for <QUOTE::dis> data types.

  @DISCore:author: DISCore|Wakaba
  @License:
    license:Perl+MPL
  @Date:
    $Date: 2006/12/29 14:45:49 $
  
  @Require:
    @@Module:
      @@@QName: Util|DIS
      @@@WithFor: DIS|ForLatest
    @@Module:
      @@@QName: DIS|Perl
      @@@WithFor: DIS|ForLatest
    @@Module:
      @@@QName: MDOM|DOMCore
      @@@WithFor: ManakaiDOM|ManakaiDOMLatest
    @@Module:
      @@@QName: MDOM|TreeCore
      @@@WithFor: ManakaiDOM|ManakaiDOMLatest
    @@Module:
      @@@QName: MDOM|TreeStore
      @@@WithFor: ManakaiDOM|ManakaiDOMLatest

  @DefaultFor: 
    DIS:ForLatest

Namespace:
  @c:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @DIS:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#
  @dis:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis--
  @DOMMain:
    http://suika.fam.cx/~wakaba/archive/2004/dom/main#
  @domperl:
    http://suika.fam.cx/~wakaba/archive/2006/dom/perl/
  @dp:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#Perl/
  @dx:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#
  @ecore:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/
  @f:
    http://suika.fam.cx/~wakaba/archive/2004/dom/feature#
  @fe:
    http://suika.fam.cx/www/2006/feature/
  @infoset:
    http://www.w3.org/2001/04/infoset#
  @kwd:
    http://suika.fam.cx/~wakaba/archive/2005/rfc2119/
  @lang:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @ManakaiDOM:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#
  @Markup:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Markup#
  @MDOM:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#ManakaiDOM.
  @MDOMX:
    http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#
  @rdf:
    http://www.w3.org/1999/02/22-rdf-syntax-ns#
  @rdfs:
    http://www.w3.org/2000/01/rdf-schema#
  @s:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Markup#
  @swcfg21:
    http://suika.fam.cx/~wakaba/archive/2005/swcfg21#
  @tc:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/DOM/TreeCore/
  @td:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/DOM/Document/
  @te:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/DOM/Element/
  @test:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Test#
  @tst:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/DOM/TreeStore/
  @Util:
    http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/

## -- Features

ElementTypeBinding:
  @Name: FeatureDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: f|Feature
    @@For: =ManakaiDOM|all

ElementTypeBinding:
  @Name: FeatureVerDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: f|Feature

ElementTypeBinding:
  @Name: featureQName
  @ElementType:
    f:name
  @ShadowContent:
    @@ContentType: DISCore|QName

FeatureDef:
  @QName: DIS|Value
  @FeatureVerDef:
    @@QName: DIS|Value10
    @@Version: 1.0
    @@f:instanceOf: DIS|Value
    @@f:requires: DIS|CoreFeature10
    @@f:requires: tst|TSFeature30
    @@FullName:
      @@@lang:en
      @@@@:
        <QUOTE::dis> Value Module version 1.0

ElementTypeBinding:
  @Name: enDesc
  @ElementType: 
    dis:Description
  @ShadowContent: 
    @@lang:en

ElementTypeBinding:
  @Name: IFClsDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      @@@@: dis|MultipleResource
      @@@ForCheck: !ManakaiDOM|ForIF !ManakaiDOM|ForClass
    @@resourceFor: ManakaiDOM|ForIF
    @@resourceFor: ManakaiDOM|ForClass

    @@rdf:type:
      @@@@: ManakaiDOM|IF
      @@@ForCheck: ManakaiDOM|ForIF

    @@rdf:type:
      @@@@: ManakaiDOM|Class
      @@@ForCheck: ManakaiDOM|ForClass
    @@Implement:
      @@@@: ||+||ManakaiDOM|ForIF
      @@@ForCheck: ManakaiDOM|ForClass
      @@@ContentType: DISCore|TFPQNames

    @@DOMMain:implementFeature: DIS|Value10

    @@ForCheck: DIS|ForEmpty

ElementTypeBinding:
  @Name: IFDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      @@@@: dis|MultipleResource
      @@@ForCheck: !ManakaiDOM|ForIF !ManakaiDOM|ForClass
    @@resourceFor: ManakaiDOM|ForIF

    @@rdf:type:
      @@@@: ManakaiDOM|IF
      @@@ForCheck: ManakaiDOM|ForIF

    @@f:implements: DIS|Value10

    @@ForCheck: DIS|ForEmpty

ElementTypeBinding:
  @Name: ClsDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      @@@@: dis|MultipleResource
      @@@ForCheck: !ManakaiDOM|ForIF !ManakaiDOM|ForClass
    @@resourceFor: ManakaiDOM|ForClass

    @@rdf:type:
      @@@@: ManakaiDOM|Class
      @@@ForCheck: ManakaiDOM|ForClass

    @@f:implements: DIS|Value10

ElementTypeBinding:
  @Name: IFQName
  @ElementType:
    dis:QName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF

ElementTypeBinding:
  @Name: ClsQName
  @ElementType:
    dis:QName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: IFISA
  @ElementType:
    dis:ISA
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF

ElementTypeBinding:
  @Name: ClsISA
  @ElementType:
    dis:ISA
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: Method
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: DISLang|Method
    @@For: !=DIS|ForEmpty

ElementTypeBinding:
  @Name: ClsMethod
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: DISLang|Method
    @@ForCheck: !=DIS|ForEmpty ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: Return
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISLang|MethodReturn

ElementTypeBinding:
  @Name: Param
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: DISLang|MethodParameter

ElementTypeBinding:
  @Name: NamedParam
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: DISLang|MethodParameter
    @@DISPerl:isNamedParameter: 1

ElementTypeBinding:
  @Name: Attr
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISLang|Attribute
    @@For: !=DIS|ForEmpty

ElementTypeBinding:
  @Name: ClsAttr
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: DISLang|Attribute
    @@ForCheck: !=DIS|ForEmpty ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: Get
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISLang|AttributeGet

ElementTypeBinding:
  @Name: Set
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISLang|AttributeSet

ElementTypeBinding:
  @Name: Test
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@DISCore:resourceType: test|StandaloneTest
    @@ForCheck: ManakaiDOM|ForClass

## -- Implementation

IFClsDef:
  @IFQName: DISImplementationValue
  @ClsQName: ManakaiDISImplementationValue

  @domperl:implementedByObjectsOf:
    c|DOMImplementation||ManakaiDOM|ManakaiDOMLatest
  @domperl:classImplementedByObjectsOf:
    c|ManakaiDOMImplementation||ManakaiDOM|ManakaiDOMLatest

  @f:provides: DIS|Value10

  @enDesc:
    The object implementing the <IF::DISImplementationValue>
    interface <kwd:MUST> also implement the <IF::DIS|DISImplementation>
    interface.

  @Method:
    @@Name: createDVValue
    @@enDesc:
      Creates a <IF::DVValue> object.
    @@Param:
      @@@Name: dataType
      @@@Type: DISString
      @@@enDesc:
        The canonical URI of the data type of the value.
    @@Param:
      @@@Name: value
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@enDesc:
        The value of the object.  It is equivalent to
        set a value to <A::DVValue.value> attribute of the value.
      @@@nullCase:
        @@@@enDesc: 
          The initial value is <CODE::null>.
    @@NamedParam:
      @@@Name: baseType
      @@@Type: DISString
      @@@enDesc:
        A base type of <P::dataType>.
      @@@nullCase:
        @@@@enDesc: No base type.
    @@Return:
      @@@Type: DVValue
      @@@enDesc:
        The newly created value.
      @@@PerlDef:
        my $class = <ClassName::ManakaiDVValue>;
        for ($baseType, $dataType) {
          $class = {
            <Q::DISCore:QName> => <ClassName::ManakaiDVQNameValue>,
            <Q::DISCore:URI> => <ClassName::ManakaiDVURIValue>,
            <Q::lang:Perl> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:dis> => <ClassName::ManakaiDVSWCFGElement>,
            <Q::lang:muf> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:dpg> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:disdoc> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:disdocInline> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:tdterr> => <ClassName::ManakaiDVNSValue>,
            <Q::DISCore:NSString> => <ClassName::ManakaiDVNSValue>,
          }->{$_} || $class;
        }
        $r = bless \ {
        }, $class;
        __CODE{DISPerl|HashStringRef||ManakaiDOM|all::
          $result => {$$r->{type}},
          $given => {$dataType},
        }__;
        __DEEP{
          $r-><AS::DVValue.value> ($value);
        }__;

  @Method:
    @@Name: createDVValueRef
    @@enDesc:
      Creates a <IF::DVValue> object.
    @@Param:
      @@@Name: dataType
      @@@Type: DISString
      @@@enDesc:
        The canonical URI of the data type of the value.
    @@Param:
      @@@Name: valueRef
      @@@Type: DISPerl|SCALAR||ManakaiDOM|all
      @@@enDesc:
        The value of the object.  It is equivalent to
        set a value to <A::DVValue.value> attribute of the value.
      @@@nullCase:
        @@@@enDesc: 
          The initial value is <CODE::null>.
    @@NamedParam:
      @@@Name: baseType
      @@@Type: DISString
      @@@enDesc:
        A base type of <P::dataType>.
      @@@nullCase:
        @@@@enDesc: No base type.
    @@Return:
      @@@Type: DVValue
      @@@enDesc:
        The newly created value.
      @@@PerlDef:
        my $class = <ClassName::ManakaiDVValue>;
        for ($baseType, $dataType) {
          $class = {
            <Q::DISCore:QName> => <ClassName::ManakaiDVQNameValue>,
            <Q::DISCore:URI> => <ClassName::ManakaiDVURIValue>,
            <Q::lang:Perl> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:dis> => <ClassName::ManakaiDVSWCFGElement>,
            <Q::lang:muf> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:dpg> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:disdoc> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:disdocInline> => <ClassName::ManakaiDVNSValue>,
            <Q::lang:tdterr> => <ClassName::ManakaiDVNSValue>,
            <Q::DISCore:NSString> => <ClassName::ManakaiDVNSValue>,
          }->{$_} || $class;
        }
        $r = bless \ {
        }, $class;
        __CODE{DISPerl|HashStringRef||ManakaiDOM|all::
          $result => {$$r->{type}},
          $given => {$dataType},
        }__;
        __DEEP{
          $r-><AS::DVValue.valueRef> ($valueRef);
        }__;

  @Method:
    @@Name: createDVXMLValue
    @@enDesc:
      Creates a <IF::DVXMLValue> object.
    @@Param:
      @@@Name: node
      @@@Type: Node
      @@@enDesc:
        The <IF::Node> of the object.
    @@Return:
      @@@Type: DVXMLValue
      @@@enDesc:
        The newly created value.
      @@@PerlDef:
        $r = bless \ {
        }, <ClassName::ManakaiDVXMLValue>;
        __DEEP{
          $r-><M::DVXMLValue.setNode> ($node, tsimpl => $self);
        }__;

    @@Test:
      @@@QName: DVImpl.createDVXMLValue.test
      @@@PerlDef:
        my $impl = $Message::DOM::ImplementationRegistry
                     ->get_dom_implementation
                         ({<Q::DIS|Value> => '1.0',
                           <Q::fe|TreeStore> => '3.0'});

        my $node;
        my $doc;
        __CODE{tc|createElementForTest||ManakaiDOM|ManakaiDOMLatest::
          $el => $node, $doc => $doc,
        }__;
        $node-><AS::Node.textContent> ('abcdefg');

        my $v = $impl-><M::DISImplementationValue.createDVXMLValue>
                         ($node);

        $test->id ('interface.DVXMLValue');
        $test->assert_isa ($v, <IFName::DVXMLValue>);

        $test->id ('interface.DVValue');
        $test->assert_isa ($v, <IFName::DVValue>);

        $test->id ('node.textContent');
        my $node2 = $v-><M::DVXMLValue.getNode> (tsimpl => $impl);
        $test->assert_equals ($node2-><AG::Node.textContent>, 'abcdefg');

        $test->id ('node=');
        $test->assert_num_equals
                 (actual_value => $node2, expected_value => $node);

        #$test->id ('stringValue');
        #$test->assert_equals ($v->string_value, 'abcdefg');

  @Method:
    @@Name: createDVOrderedList
    @@enDesc:
      Creates a new <IF::DVOrderedList> object.
    @@Param:
      @@@Name: dataType
      @@@Type: DISString
      @@@enDesc:
        The canonical URI of the data type of the value.
      @@@nullCase:
        @@@@enDesc: Any type is allowed.
    @@NamedParam:
      @@@Name: baseType
      @@@Type: DISString
      @@@enDesc:
        A base type of <P::dataType>.
      @@@nullCase:
        @@@@enDesc: No base type.
    @@Return:
      @@@Type: DVOrderedList
      @@@enDesc: The newly created object.
      @@@PerlDef:
        my $class = <ClassName::ManakaiDVOrderedList>;
        for ($baseType, $dataType) {
          $class = {
            <Q::DISCore:QName> => <ClassName::ManakaiDVQNameOrderedList>,
            <Q::DISCore:URI> => <ClassName::ManakaiDVURIOrderedList>,
            <Q::lang:dis> => <ClassName::ManakaiDVSWCFGElementOrderedList>,
            <Q::lang:Perl> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::lang:muf> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::lang:dpg> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::lang:disdoc> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::lang:disdocInline> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::lang:tdterr> => <ClassName::ManakaiDVNSOrderedList>,
            <Q::DISCore:NSString> => <ClassName::ManakaiDVNSOrderedList>,
          }->{$_} || $class;
        }
        $r = bless \ {
          array => [],
        }, $class;

  @Method:
    @@Name: createDVUnorderedList
    @@enDesc:
      Creates a new <IF::DVUnorderedList> object.
    @@Param:
      @@@Name: dataType
      @@@Type: DISString
      @@@enDesc:
        The canonical URI of the data type of the value.
      @@@nullCase:
        @@@@enDesc: Any type is allowed.
    @@NamedParam:
      @@@Name: baseType
      @@@Type: DISString
      @@@enDesc:
        A base type of <P::dataType>.
      @@@nullCase:
        @@@@enDesc: No base type.
    @@Return:
      @@@Type: DVUnorderedList
      @@@enDesc: The newly created object.
      @@@PerlDef:
        my $class = <ClassName::ManakaiDVUnorderedList>;
        for ($baseType, $dataType) {
          $class = {
            <Q::DISCore:QName> => <ClassName::ManakaiDVQNameUnorderedList>,
            <Q::DISCore:URI> => <ClassName::ManakaiDVURIUnorderedList>,
          }->{$_} || $class;
        }
        $r = bless \ {
          hash => {},
        }, $class;

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createValue
    @@rdf:type: DISPerl|BlockCode
    @@enDesc:
      Creates a value object whose type is URI.
    @@PerlDef:
      $result = <ClassM::ManakaiDISImplementationValue.createDVValue>
                      ($type, $value, base_type => $base_type);
      __DEEP{
        $result-><AS::DVValue.name> ($name);
      }__;

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createValueRef
    @@rdf:type: DISPerl|BlockCode
    @@enDesc:
      Creates a value object whose type is URI.
    @@PerlDef:
      $result = <ClassM::ManakaiDISImplementationValue.createDVValueRef>
                      ($type, $value_ref, base_type => $base_type);
      __DEEP{
        $result-><AS::DVValue.name> ($name);
      }__

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createXMLValue
    @@DISCore:resourceType: DISPerl|BlockCode
    @@enDesc:
      Creates an XML value object.
    @@PerlDef:
      __DEEP{
        $result = $Message::DOM::ImplementationRegistry
                     ->get_dom_implementation
                         ({<Q::DIS|Value> => '1.0',
                           <Q::fe|TreeStore> => '3.0'})
                     -><M::DISImplementationValue.createDVXMLValue>
                         ($value);
        $result-><AS::DVValue.name> ($name);
      }__;

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createURI
    @@rdf:type: DISPerl|BlockCode
    @@enDesc:
      Creates a value object whose type is URI.
    @@PerlDef:
      $result = <ClassM::ManakaiDISImplementationValue.createDVValue>
                      (<Q::DISCore:URI>, $uri);
      __DEEP{
        $result-><AS::DVValue.name> ($name);
      }__;
##DISImplementationValue

## -- Any Value

RoleDef:
  @QName: ValueRole
  @enDesc:
    A class implementing the <Q::ValueRole> is compatible with
    the <Class::ManakaiDVValue> class.

ElementTypeBinding:
  @Name: RoleDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:Role
    @@ForCheck:
      =ManakaiDOM:all

IFClsDef:
  @IFQName: DVValue
  @ClsQName: ManakaiDVValue

  @ClsISA: dp|ManakaiDVValuePerl

  @Implement: GetFeature
  @ClsISA: f|ManakaiHasFeatureByGetFeature||ManakaiDOM|ManakaiDOMLatest

  @ClsISA:
    dx:ManakaiDefaultExceptionHandler::ManakaiDOM:Perl

  @enDesc:
    A <IF::DVValue> object represents a value in <QUOTE::dis> model.
    Any value in <QUOTE::dis> model <kwd:MUST> implement the
    <IF::DVValue> interface.

  @AppISA:
    @@ContentType: lang|Perl
    @@@: 
      Tie::Array
    @@ForCheck: ManakaiDOM|ForClass

  @Attr:
    @@Name: stringValue
    @@enDesc:
      A string representation of the value.  If the canonical 
      string representation is defined by the data type, 
      the attribute value <kwd:MUST> be in the canonical format.
    @@Get:
      @@@Type: DISString
      @@@enDesc:
        A string representation of the value.
      @@@nullCase: 
        @@@@enDesc:
          No string representation is defined.
          
          {NOTE:: Data types <kwd:SHOULD> define a string representation.
          }
      @@@PerlDef:
        __DEEP{
          $r = $self-><AG::DVValue.value>;
        }__;
        $r = defined $r ? ''.$r : null;

  @Attr:
    @@Name: dataType
    @@enDesc: 
      The canonical URI of the data type of the value.

      {NOTE:: It might be different from the media type
              of the value in the <QUOTE::dis> source file,
              i.e. <Q::dis:ContentType> attribute value, 
              since that attribute value defines the lexical type.
      }
    @@Get:
      @@@enDesc: The data type URI.
      @@@Type: DISString
      @@@PerlDef:
        $r = ${$$self->{type}};

  @Attr:
    @@Name: value
    @@enDesc:
      The value.  What is the attribute value varies by its data type.
    @@Type: DOMMain|any||ManakaiDOM|all
    @@Get:
      @@@nullCase:
        @@@@enDesc:
          The value is <CODE::null>.
      @@@PerlDef:
        if (defined $$self->{value}) {
          $r = ${$$self->{value}};
        } else {
          $r = null;
        }
    @@Set:
      @@@nullCase:
        @@@@enDesc:
          The new value is <CODE::null>.
      @@@PerlDef:
        if (defined $given) {
          $$self->{value} = \ $given;
        } else {
          CORE::delete $$self->{value};
        }

  @Attr:
    @@Name: valueRef
    @@enDesc:
      A reference to the value.

      {NOTE:: Applications <kwd:SHOULD-NOT> try to modify 
              the value via the reference unless it is
              known to safe.
      }
    @@Type: DISPerl|SCALAR||ManakaiDOM|all
    @@nullCase:
      @@@enDesc:
        The value is <DOM::null>.
    @@Get:
      @@@PerlDef:
        $r = $$self->{value};
    @@Set:
      @@@PerlDef:
        if (defined $given) {
          $$self->{value} = $given;
        } else {
          CORE::delete $$self->{value};
        }    

  @Attr:
    @@Name: isNull
    @@enDesc:
      Whether the value is <CODE::null> or not.
    @@Type: DOMMain|boolean||ManakaiDOM|all
    @@Get:
      @@@TrueCase:
        @@@@enDesc:
          The value is <CODE::null>.
      @@@FalseCase:
        @@@@enDesc:
          The value is <EM::not> <CODE::null>.
      @@@PerlDef:
        __DEEP{
          my $in = $self-><M::DVValue.getProperty> (<Q::dis:is-null>);
          $r = ($in and $in-><AG::DVValue.value>);
        }__;

  @Method:
    @@Name: getPerlCode
    @@enDesc:
      Returns a Perl code representation of the value.
    @@Param:
      @@@Name: factory
      @@@Type: dp|PCDocument
      @@@enDesc:
        The document to which the code belongs.
    @@Param:
      @@@Name: disResource
      @@@Type: DIS|DISAnyResource
      @@@enDesc:
        The context resource.
    @@Return:
      @@@Type: DIS|MPLCodeFragment
      @@@enDesc:
        The code.
      @@@nullCase:
        @@@@enDesc:
          If no Perl code is defined for the value.
      @@@PerlDef:
        __DEEP{
          my $type = $disResource-><AG::DIS|DISAnyResource.database>
                                 -><M::DIS|DISDatabase.getResource>
                                     ($self-><AG::DVValue.dataType>);
          $r = $type-><M::dp|DISResourcePerl.getPerlCodeFromDVValue>
                        ($factory, $self);
        }__;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@Operator:
      @@@@: @{}
      @@@ContentType: lang|Perl
    @@enDesc:
      Returns a tied array.
    @@Return:
      @@@Type: DISPerl|ARRAY||ManakaiDOM|all
      @@@enDesc: A reference to the new tied array.
      @@@PerlDef:
        tie my @list, ref $self, $self;
        $r = \@list;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@Operator:
      @@@@: TIEARRAY
      @@@ContentType:lang|Perl
    @@enDesc:
      Ties an array.
    @@ManakaiDOM:isStatic:1
    @@Param:
      @@@Name: object
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@enDesc: 
        The <IF::DVValue> object to tie.
    @@Return:
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@enDesc:
        The tied <IF::DVValue> object.
      @@@PerlDef: $r = $object;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@Operator:
      @@@@: %{}
      @@@ContentType: lang|Perl
    @@enDesc:
      Returns a tied hash.
    @@Return:
      @@@Type: DISPerl|HASH||ManakaiDOM|all
      @@@enDesc: A reference to the new tied hash.
      @@@PerlDef:
        tie my %list, ref $self, $self;
        $r = \%list;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@Operator:
      @@@@: TIEHASH
      @@@ContentType:lang|Perl
    @@enDesc:
      Ties a hash.
    @@ManakaiDOM:isStatic:1
    @@Param:
      @@@Name: object
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@enDesc: 
        The <IF::DVValue> object to tie.
    @@Return:
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@enDesc:
        The tied <IF::DVValue> object.
      @@@PerlDef: $r = $object;

  @Method:
    @@Name: item
    @@plOp: FETCH
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Return:
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@nullCase:
        @@@@enDesc:
          No <P::index>th item.
      @@@PerlDef: $r = $self;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@plOp: STORE
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Param:
      @@@Name: value
      @@@Type: DOMMain|any||ManakaiDOM|all
    @@Return:
      @@@PerlDef: \

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@plOp: FETCHSIZE
    @@Return:
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
      @@@PerlDef: $r = 1;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@plOp: STORESIZE
    @@Return:
      @@@PerlDef: \

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
    @@plOp: EXISTS
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Return:
      @@@Type: DOMMain|boolean||ManakaiDOM|all
      @@@PerlDef:
        $r = ($index == 1);

  @Method:
    @@Name: getProperty
    @@enDesc:
      Returns the value of a property.
    @@Param:
      @@@Name: propName
      @@@Type: DISString
      @@@enDesc:
        A URI that identifies the URI.  The matching is done
        as strings; aliases and subproperties are not taken into account.
    @@Return:
      @@@Type: DVValue
      @@@enDesc:
        The property value.
      @@@nullCase:
        @@@@enDesc: No value.
      @@@PerlDef:
        $r = $$self->{prop}->{$propName};

  @Method:
    @@Name: setProperty
    @@enDesc:
      Sets a property value.
    @@Param:
      @@@Name: propName
      @@@Type: DISString
      @@@enDesc:
        A URI identifying a property.
    @@Param:
      @@@Name: newValue
      @@@Type: DVValue
      @@@enDesc:
        New property value.
      @@@nullCase:
        @@@@enDesc: The property has removed.
    @@Return:
      @@@PerlDef:
        if (defined $newValue) {
          $$self->{prop}->{$propName} = $newValue;
        } else {
          CORE::delete $$self->{prop}->{$propName};
        }

  @Attr:
    @@Name: sourceNodePath
    @@Type: DISString
    @@Get:
      @@@PerlDef: $r = $$self->{nodePath};
    @@Set:
      @@@PerlDef: $$self->{nodePath} = $given;

  @Method:
    @@ForCheck: ManakaiDOM|ForClass
     @@Name:  getFeature
     @@Description:
        @@@lang:en
        @@@@:
          Returns a specialized object that implements the specialized 
          interfaces of the specified feature and version.
     @@Param:
        @@@Name:  feature
        @@@Type: DISString
        @@@actualType: f|FeatureNameString||ManakaiDOM|ManakaiDOMLatest
        @@@Description:
          @@@@lang:en
          @@@@@:
            A feature name to request.
     @@Param:
        @@@Name:  version
        @@@Type: DISString
        @@@actualType: f|FeatureVersionString||ManakaiDOM|ManakaiDOMLatest
        @@@Description:
          @@@@lang:en
          @@@@@:
            A feature version number to request.
     @@Return:
        @@@Type: 
          DOMMain:Object::ManakaiDOM:all
        @@@Description:
          @@@@lang:en
          @@@@@:
            An object that implements the specialized APIs of the 
            <P::feature> and <P::version>. 
        @@@nullCase:
          @@@@enDesc: 
            There is no object available that implements interfaces 
            associated with the <P::feature> and <P::version>. 
        @@@PerlDef:
          $feature =~ s/^\+//;
          CLASS: for my $class (grep {
            $Message::Util::DIS::Value::ManakaiDVValue::CompatClass{$_}
          } keys %Message::Util::DIS::Value::ManakaiDVValue::CompatClass) {
            if ($Message::DOM::ClassFeature{$class}->{$feature}->{$version}) {
              $r = bless {o => $self}, $class;
              last CLASS;
            }
          }

  @Attr:
    @@Name: name
    @@enDesc:
      The name of the value.
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        $r = defined $$self->{name} ? ${$$self->{name}} : null;
    @@Set:
      @@@PerlDef:
        __CODE{DISPerl|HashStringRef||ManakaiDOM|all::
          $result => {$$self->{name}},
          $given => $given,
        }__;
##DVValue

ElementTypeBinding:
  @Name: IntMethod
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:Method
    @@ManakaiDOM:isForInternal:1
    @@ForCheck: ManakaiDOM|ForClass

## -- Value with namespace context

IFClsDef:
  @IFQName: DVNSValue
  @ClsQName: ManakaiDVNSValue

  @IFISA: DVValue
  @ClsISA: ManakaiDVValue

  @IFISA: DIS|NSResolverDIS
  @ClsISA: DIS|ManakaiNSResolverDIS

  @enDesc:
    Value with namespace context.

  @Attr:
    @@Name: namespaceBindingList
    @@Type: DISPerl|HASH||ManakaiDOM|all
    @@enDesc:
      The <QUOTE::live> hash reference of namespace bindings.
    @@Get:
      @@@PerlDef: $r = $$self->{ns};
    @@Set:
      @@@PerlDef: $$self->{ns} = $given;

  @Method:
    @@Name: lookupNamespaceURI
    @@Param:
      @@@Name: prefix
      @@@Type: DISString
      @@@nullCase:
        @@@@enDesc:
          The default namespace.
    @@Return:
      @@@Type: DISString
      @@@nullCase:
        @@@@enDesc: No namespace.
      @@@PerlDef:
        if (defined $prefix) {
          $r = $$self->{ns}->{$prefix};
          if (not defined $prefix and $$self->{ns}->{'###db'}) {
            my $db = $$self->{ns}->{'###db'};
            FIND: for my $mod_uri (keys %{$db->{modDef}}) {
              my $mod = $db-><M::DIS|DISDatabase.getModule> ($mod_uri);
              if ($mod-><AG::DIS|DISAnyResource.localName> eq $prefix) {
                $r = $mod-><M::DIS|DISResourceProp.getPropertyText>
                                                   (<Q::dis:Namespace>, null);
                last FIND;
              }
            }
          }
        } else {
          $r = ${$$self->{defaultNS}};
        }

  @Method:
    @@Name: prefixToURI
    @@Param:
      @@@Name: prefix
      @@@Type: DISString
      @@@nullCase:
        @@@@enDesc:
          The default namespace.
    @@NodeParam:
    @@Return:
      @@@Type: DISString
      @@@Description:
        @@@@lang:en
        @@@@@: The URI references associated. 
      @@@UndeclaredPrefixException:
      @@@PerlDef:
        __DEEP{
          $r = $self-><M::DVNSValue.lookupNamespaceURI> ($prefix);
        }__;
        unless (defined $r) {
          __EXCEPTION{DIS|UNDECLARED_NS_PREFIX_ERR::
            infoset:prefix => {$prefix},
            DIS:sourceNode => {$node},
            MDOMX:param-name => 'prefix',
          }__;
        }

  @Attr:
    @@Name: defaultNamespaceURI
    @@Type: DISString
    @@nullCase:
      @@@enDesc: No namespace.
    @@Get:
      @@@PerlDef: $r = ${$$self->{defaultNS}};
    @@Set:
      @@@PerlDef: $$self->{defaultNS} = \$given;

  @Attr:
    @@Name: defaultNamespaceURIRef
    @@Type: DISPerl|SCALAR||ManakaiDOM|all
    @@Get:
      @@@PerlDef: $r = $$self->{defaultNS};
    @@Set:
      @@@PerlDef: $$self->{defaultNS} = $given;
##DVNSValue

ElementTypeBinding:
  @Name: NodeParam
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:MethodParameter
    @@DISPerl:isNamedParameter:1
    @@Name: node
    @@Type: DIS|DISNode
    @@Description:
      @@@lang:en
      @@@@:
        The node in which the name has occurred.  It is intended 
        to be reported when an exception had been raised. 
    @@ResourceDef:
      @@@rdf:type:
        ManakaiDOM:InCase
      @@@Value:
        @@@@is-null:1
      @@@Description:
        @@@@lang:en
        @@@@@:
          The source of the name is not a node. 

ElementTypeBinding:
  @Name: UndeclaredPrefixException
  @ElementType:
    ManakaiDOM:raises
  @ShadowContent:
    @@@: DIS|UNDECLARED_NS_PREFIX_ERR
    @@Description:
      @@@lang:en
      @@@@:
        The implementation has encounted an undeclared namespace prefix. 

IFClsDef:
  @IFQName: DVXMLValue
  @ClsQName: ManakaiDVXMLValue

  @IFISA: DVValue
  @ClsISA: ManakaiDVValue

  @enDesc:
    A <IF::DVXMLValue> object is a <IF::DVValue> containing
    a <IF::Node>.

    {TODO::
      Define <A::DVValue.value> and <A::DVValue.stringValue>.
    }

    {TODO::
       Define what <A::DVValue.dataType> is.
    }

  @Method:
    @@Name: getNode
    @@enDesc:
      Returns the <IF::Node> object contained as the value
      of the <IF::DVXMLValue>.

      {TODO::
         Define if <P::tsimpl> and <P::od> is missing.
      }
    @@NamedParam:
      @@@Name: tsimpl
      @@@Type: TSImpl
      @@@enDesc:
        The <IF::TSImpl> object used to extract <IF::Node>.
      @@@nullCase:
        @@@@enDesc:
          An implementation object to which the <P::od> object
          belongs or a newly created implementation object
          is used.
    @@NamedParam:
      @@@Name: od
      @@@Type: Document
      @@@enDesc:
        The <IF::Document> object to which the <IF::Node> belongs.
      @@@nullCase:
        @@@@enDesc:
          Either <P::tsimpl> object or a newly created implementation
          object is used to create a new <IF::Document> object
          that is used in place of <P::od>.
    @@Return:
      @@@Type: Node
      @@@enDesc:
        The <IF::Node> object.
      @@@PerlDef:
        __DEEP{
          unless (defined $tsimpl) {
            if (defined $od) {
              $tsimpl = $od-><AG::Document.implementation>
                           -><M::GetFeature.getFeature>
                               (<Q::fe|TreeStore> => '3.0');
            } else {
              $tsimpl = $Message::DOM::ImplementationRegistry
                          ->get_dom_implementation ({<Q::fe|TreeStore> => '3.0'});
            }
          }
          $r = $tsimpl->create_node_from_storable_object
                          (${$$self->{value}}, $od);
        }__;

  @Method:
    @@Name: setNode
    @@enDesc:
      Sets a <IF::Node> object as a value contained by the <IF::DVXMLValue>.
    @@Param:
      @@@Name: newNode
      @@@Type: Node
      @@@enDesc:
        The new <IF::Node> object set as the value.
    @@NamedParam:
      @@@Name: tsimpl
      @@@Type: TSImpl
      @@@enDesc:
        The <IF::TSImpl> object used to obtain storable object.
      @@@nullCase:
        @@@@enDesc:
          {P:: Use the <IF::TSImpl> object obtained by the following
               procedure:

            = <VAR::od> <lt>- <A::Node.ownerDocument> of <P::newNode>.

            = <VAR::impl> <lt>- <A::Document.implementation> of <P::od>.

            = <VAR::tsimpl> <lt>- <M::GetFeature.getFeature> on <P::impl>
                                  with parameters set to
                                  <Feature::fe|TreeStoer> and <FeatureVer::3.0>.

          }
    @@Return:
      @@@PerlDef:
        __DEEP{
          unless (defined $tsimpl) {
            $tsimpl = $newNode-><AG::Node.ownerDocument>
                              -><AG::Document.implementation>
                              -><M::GetFeature.getFeature>
                                  (<Q::fe|TreeStore> => '3.0');
          }
          $$self->{value} = \ ($tsimpl->create_storable_object_from_node
                                          ($newNode));
        }__;

  @ClsAttr:
    @@Name: dataType
    @@Get:
      @@@enDesc: The data type URI.
      @@@Type: DISString
      @@@PerlDef:
        $r = q<data:,temporary--xml-node>;

  @Test:
    @@QName: DVXMLValue.value.test
    @@PerlDef:
      my $node;
      my $doc;
      __CODE{tc|createElementForTest||ManakaiDOM|ManakaiDOMLatest::
        $el => $node, $doc => $doc,
      }__;
      $node->text_content ('abcdefg');

      my $v;
      __CODE{createXMLValue::
        $result => $v,
        $name => 'name',
        $value => $node,
      }__;

      $test->id ('getNode');
      $test->assert_num_equals
               (actual_value => $v->get_node, expected_value => $node);

      #$test->id ('stringValue');
      #$test->assert_equals ($v->string_value, 'abcdefg');
##DVXMLValue

ResourceDef:
  @QName: Node
  @AliasFor: tc|Node||ManakaiDOM|ManakaiDOMLatest

ResourceDef:
  @QName: Document
  @AliasFor: td|Document||ManakaiDOM|ManakaiDOMLatest

ResourceDef:
  @QName: GetFeature
  @AliasFor: f|GetFeature||ManakaiDOM|ManakaiDOMLatest

ResourceDef:
  @QName: TSImpl
  @AliasFor: tst|DOMImplementationTreeStore||ManakaiDOM|ManakaiDOMLatest

IFClsDef:
  @IFQName: DVList
  @ClsQName: ManakaiDVList

  @IFISA: DVValue
  @ClsISA: ManakaiDVValue

  @Attr:
    @@Name: length
    @@enDesc:
      The number of the items in the list.
    @@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Get:

  @Method:
    @@Name: addItem
    @@enDesc:
      Adds an item.
    @@Param:
      @@@Name: newItem
      @@@Type: DVValue
      @@@enDesc:
        An item.
    @@Return:

  @ClsMethod:
    @@Name: getProperty
    @@enDesc:
      Returns the value of a property.
    @@Param:
      @@@Name: propName
      @@@Type: DISString
      @@@enDesc:
        A URI that identifies the URI.  The matching is done
        as strings; aliases and subproperties are not taken into account.
    @@Return:
      @@@Type: DVValue
      @@@enDesc:
        The property value.
      @@@nullCase:
        @@@@enDesc: No value.
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $r = $v-><M::DVValue.getProperty> ($propName)
            if $v;
        }__;

  @Method:
    @@Name: setProperty
    @@enDesc:
      Sets a property value.
    @@Param:
      @@@Name: propName
      @@@Type: DISString
      @@@enDesc:
        A URI identifying a property.
    @@Param:
      @@@Name: newValue
      @@@Type: DVValue
      @@@enDesc:
        New property value.
      @@@nullCase:
        @@@@enDesc: The property has removed.
    @@Return:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $v-><M::DVValue.setProperty> ($propName => $newValue)
            if $v;
        }__;

  @Attr:
    @@Name: name
    @@enDesc:
      The name of the first item.
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $r = $v-><AG::DVValue.name> if $v;
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $v-><AS::DVValue.name> if $v;
        }__;
##DVList

IFClsDef:
  @IFQName: DVOrderedList
  @ClsQName: ManakaiDVOrderedList

  @IFISA: DVList
  @ClsISA: ManakaiDVList

  @Attr:
    @@Name: length
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The number of the items in the list.
    @@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Get:
      @@@PerlDef:
        $r = @{$$self->{array}};
  
  @Attr:
    @@Name: dataType
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc: The data type of the value.
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        $r = <Q::DVOrderedList>;

  @ClsMethod:
    @@plOp: @{}
    @@Return:
      @@@Type: DISPerl|ARRAY||ManakaiDOM|all
      @@@PerlDef:
        $r = $$self->{array};

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createOrderedList
    @@rdf:type: DISPerl|BlockCode
    @@enDesc:
      Creates a value object which is an ordered list.
    @@PerlDef:
      $result = <ClassM::ManakaiDISImplementationValue.createDVOrderedList>
        ($type, base_type => $base_type);

  @Attr:
    @@Name: stringValue
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The string representation of the value.  For an ordered list, 
      it is the string value of the first item, if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The string value of the value.
    @@Get:
      @@@PerlDef:
        if ($$self->{array}->[0]) {
          $r = $$self->{array}->[0]-><AG::DVValue.stringValue>;
        } else {
          $r = null;
        }

  @Attr:
    @@Name: value
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The value.  For an ordered list, 
      it is the value of the first item, if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The value is <DOM::null>.
    @@Get:
      @@@PerlDef:
        if ($$self->{array}->[0]) {
          $r = $$self->{array}->[0]-><AG::DVValue.value>;
        } else {
          $r = null;
        }

  @Attr:
    @@Name: valueRef
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The value.  For an ordered list, 
      it is the value of the first item, if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The value is <DOM::null>.
    @@Get:
      @@@PerlDef:
        if ($$self->{array}->[0]) {
          $r = $$self->{array}->[0]-><AG::DVValue.valueRef>;
        } else {
          $r = null;
        }

  @Method:
    @@Name: item
    @@ForCheck: ManakaiDOM|ForClass
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Return:
      @@@Type: DVValue
      @@@nullCase:
        @@@@enDesc: 
          No <P::index>th item.
      @@@PerlDef:
        $r = $$self->{array}->[$index];

  @Method:
    @@Name: addItem
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      Adds an item.  The new item is appended to the last of the list.
    @@Param:
      @@@Name: newItem
      @@@Type: DVValue
      @@@enDesc:
        An item.
    @@Return:
      @@@PerlDef:
        push @{$$self->{array}}, $newItem;
##DVOrderedList

IFClsDef:
  @IFQName: DVUnorderedList
  @ClsQName: ManakaiDVUnorderedList

  @IFISA: DVList
  @ClsISA: ManakaiDVList

  @Attr:
    @@Name: length
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The number of the items in the list.
    @@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@plOp: FETCHSIZE
    @@Get:
      @@@PerlDef:
        $r = keys %{$$self->{hash}};
  
  @Attr:
    @@Name: dataType
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc: The data type of the value.
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        $r = <Q::DVUnorderedList>;

  @Method:
    @@plOp: %{}
    @@ForCheck: ManakaiDOM|ForClass
    @@Return:
      @@@Type: DISPerl|HASH||ManakaiDOM|all
      @@@PerlDef:
        $r = $$self->{hash};

  @ResourceDef:
    @@ForCheck: ManakaiDOM|ForClass
    @@QName: createUnorderedList
    @@rdf:type: DISPerl|BlockCode
    @@enDesc:
      Creates a value object which is an unordered list.
    @@PerlDef:
      $result = <ClassM::ManakaiDISImplementationValue.createDVUnorderedList>
        ($type, base_type => $base_type);

  @Attr:
    @@Name: stringValue
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The string representation of the value.  For an unordered list, 
      it is the string value of an item (which is randomly selected),
      if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The string value of the value.
    @@Get:
      @@@PerlDef:
        if (keys %{$$self->{hash}}) {
          $r = $$self->{hash}->{[keys %{$$self->{hash}}]->[0]}
                     -><AG::DVValue.stringValue>;
        } else {
          $r = null;
        }

  @Attr:
    @@Name: value
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The value.  For an unordered list, 
      it is the value of a randomly selected item, if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The value is <DOM::null>.
    @@Get:
      @@@PerlDef:
        if (keys %{$$self->{hash}}) {
          $r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[0]}
                     -><AG::DVValue.value>;
        } else {
          $r = null;
        }

  @Attr:
    @@Name: valueRef
    @@ForCheck: ManakaiDOM|ForClass
    @@enDesc:
      The value.  For an unordered list, 
      it is the value of a randomly selected item, if any, or <DOM::null>.
    @@Type: DISString
    @@nullCase:
      @@@enDesc:
        The value is <DOM::null>.
    @@Get:
      @@@PerlDef:
        if (keys %{$$self->{hash}}) {
          $r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[0]}
                     -><AG::DVValue.valueRef>;
        } else {
          $r = null;
        }

  @Method:
    @@Name: addItem
    @@enDesc:
      Adds an item.
    @@Param:
      @@@Name: newItem
      @@@Type: DVValue
      @@@enDesc:
        An item.
    @@Return:
      @@@PerlDef:
        __DEEP{
          $$self->{hash}->{$newItem-><AG::DVValue.value>} = $newItem;
        }__;

  @Method:
    @@Name: item
    @@plOp: FETCH
    @@ForCheck: ManakaiDOM|ForClass
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Return:
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@actualType: DVValue
      @@@nullCase:
        @@@@enDesc:
          No item for the <P::index> or the value is <DOM::null>.
      @@@PerlDef:
        $r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[$index]};

  @Method:
    @@plOp: STORE
    @@ForCheck: ManakaiDOM|ForClass
    @@Param:
      @@@Name: index
      @@@Type: DOMMain|unsigned-long||ManakaiDOM|all
    @@Param:
      @@@Name: newValue
      @@@Type: DOMMain|any||ManakaiDOM|all
      @@@nullCase:
        @@@@enDesc: 
          The new value is <DOM::null>.
    @@Return:
      @@@PerlDef:
        CORE::delete $$self->{hash}->{[sort keys %{$$self->{hash}}]->[$index]};
        __DEEP{
          $$self->{hash}->{$newValue-><AG::DVValue.value>} = $newValue;
        }__;
##DVUnorderedList

IFClsDef:
  @IFQName: DVURIValue
  @ClsQName: ManakaiDVURIValue

  @IFISA: DVValue
  @ClsISA: ManakaiDVValue

  @Method:
    @@Name: getResource
    @@enDesc:
      Returns a resource whose URI matches to the value.
    @@Param:
      @@@Name: database
      @@@Type: DIS|DISDatabase
      @@@enDesc:
        A database from which a resource should be retrieved.
    @@Return:
      @@@Type: DIS|DISAnyResource
      @@@enDesc:
        The resource whose URI equals to the value.
      @@@ImplNote:
        @@@@lang:en
        @@@@@:
          {ISSUE:: Modules and <QUOTE::for>s should also be found?
          }
      @@@nullCase:
        @@@@enDesc:
          The value is not a URI.
      @@@PerlDef:
        __DEEP{
          my $uri = $self-><AG::DVURIValue.uri>;
          $r = $database-><M::DIS|DISDatabase.getAnyResource> ($uri);
        }__;
  
  @Attr:
    @@Name: uri
    @@enDesc:
      The URI representation of the value.
    @@Type: DISString
    @@Get:
      @@@nullCase:
        @@@@enDesc:
          No URI representation is defined for the current value.
      @@@PerlDef: 
        __DEEP{
          $r = $self-><AG::DVValue.value>;
        }__;
    @@Set:
      @@@nullCase:
        @@@@enDesc:
          If the current <A::DVURIValue.uri> is <DOM::null>,
          setting <DOM::null> has no effect.  Otherwise,
          the current value is cleared and <A::DVValue.isNull>
          attribute is set to <DOM::true>.
      @@@PerlDef:
        if (defined $given) {
          __DEEP{
            $self-><AS::DVValue.value> ($given);
          }__;
        } else {
          __DEEP{
            if (defined $self-><AG::DVValue.value>) {
              $self-><AG::DVValue.value> (null);
            }
          }__;
        }

  @Attr:
    @@Name: revision
    @@Type: DIS|RevisionNumber
    @@enDesc:
      The revision number of the referenced resource.
    @@Get:
      @@@PerlDef:
        $r = defined $$self->{<H::DIS|revision>} 
               ? $$self->{<H::DIS|revision>}
               : 0;
    @@Set:
      @@@PerlDef:
        $$self->{<H::DIS|revision>} = $given;
##DVURIValue

ClsDef:
  @ClsQName: ManakaiDVSWCFGElementOrderedList

  @ClsISA: ManakaiDVOrderedList

  @ClsISA: ManakaiDVSWCFGElement
##DVSWCFGElementOrderedList

ClsDef:
  @ClsQName: ManakaiDVURIOrderedList

  @ClsISA: ManakaiDVOrderedList

  @ClsISA: ManakaiDVURIValue
##DVURIOrderedList

ClsDef:
  @ClsQName: ManakaiDVQNameOrderedList

  @ClsISA: ManakaiDVOrderedList

  @ClsISA: ManakaiDVQNameValue
##DVQNameOrderedList

ClsDef:
  @ClsQName: ManakaiDVURIUnorderedList

  @ClsISA: ManakaiDVUnorderedList

  @ClsISA: ManakaiDVURIValue
##DVURIUnorderedList

ClsDef:
  @ClsQName: ManakaiDVNSOrderedList

  @ClsISA: ManakaiDVOrderedList
 
  @ClsISA: ManakaiDVNSValue

  @Attr:
    @@Name: namespaceBindingList
    @@Type: DISPerl|HASH||ManakaiDOM|all
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $r = $v-><AG::DVNSValue.namespaceBindingList>
            if $v;
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $v-><AS::DVNSValue.namespaceBindingList> ($given)
            if $v;
        }__;

  @Attr:
    @@Name: defaultNamespaceURI
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $r = $v-><AG::DVNSValue.defaultNamespaceURI>
            if $v;
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $v = $self->[0];
          $v-><AS::DVNSValue.defaultNamespaceURI> ($given)
            if $v;
        }__;
##DVNSOrderedList

IFClsDef:
  @IFQName: DVQNameValue
  @ClsQName: ManakaiDVQNameValue

  @IFISA: DVURIValue
  @ClsISA: ManakaiDVURIValue

  @Attr:
    @@Name: prefix
    @@enDesc:
      The namespace prefix of the value.
    @@Type: DISString
    @@nullCase: No prefix.
    @@Get:
      @@@PerlDef:
        $r = $$self->{prefix};
    @@Set:
      @@@PerlDef:
        if (defined $given) {
          $$self->{prefix} = $given;
        } else {
          CORE::delete $$self->{prefix};
        }
  
  @Attr:
    @@Name: localName
    @@enDesc:
      The local name.
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        $r = $$self->{value};
    @@Set:
      @@@PerlDef:
        $$self->{value} = $given;

  @Attr:
    @@Name: namespaceURI
    @@enDesc: The namespace URI
    @@Type: DISString
    @@nullCase:
      @@@@enDesc: The value has no namespace.
    @@Get:
      @@@PerlDef:
        $r = $$self->{namespaceURI};
    @@Set:
      @@@PerlDef:
        if (defined $given) {
          $$self->{namespaceURI} = $given;
        } else {
          CORE::delete $$self->{namespaceURI};
        }

  @Attr:
    @@ForCheck: ManakaiDOM|ForClass
    @@Name: value
    @@Type: DISString
    @@enDesc:
      The expanded URI of the value.
    @@Get:
      @@@PerlDef:
        $r = defined $$self->{namespaceURI}
           ? $$self->{namespaceURI} . $$self->{value}
           : $$self->{value};
    @@Set:
      @@@PerlDef:
        $$self->{namespaceURI} = $given;
        $$self->{value} = '';

  @Attr:
    @@ForCheck: ManakaiDOM|ForClass
    @@Name: valueRef
    @@Type: DISString
    @@enDesc:
      The expanded URI of the value.
    @@Get:
      @@@PerlDef:
        $r = defined $$self->{namespaceURI}
           ? \ ($$self->{namespaceURI} . $$self->{value})
           : \ ($$self->{value});
    @@Set:
      @@@PerlDef:
        if (defined $given) {
          $$self->{namespaceURI} = $given;
        } else {
          CORE::delete $$self->{namespaceURI};
        }
        $$self->{value} = '';
##DVQNameValue

ClsDef:
  @ClsQName: ManakaiDVQNameUnorderedList

  @ClsISA: ManakaiDVUnorderedList

  @ClsISA: ManakaiDVQNameValue

  @Attr:
    @@Name: prefix
    @@ForCheck: ManakaiDOM|ForClass
    @@Type: DISString
    @@nullCase:
      @@@enDesc: No prefix.
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $r = $item-><AG::DVQNameValue.prefix>;
          } else {
            $r = null;
          }
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $item-><AS::DVQNameValue.prefix> ($given);
          }
        }__;

  @Attr:
    @@Name: namespaceURI
    @@ForCheck: ManakaiDOM|ForClass
    @@Type: DISString
    @@nullCase:
      @@@enDesc: No namespace.
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $r = $item-><AG::DVQNameValue.namespaceURI>;
          } else {
            $r = null;
          }
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $item-><AS::DVQNameValue.namespaceURI> ($given);
          }
        }__;

  @Attr:
    @@Name: localName
    @@ForCheck: ManakaiDOM|ForClass
    @@Type: DISString
    @@nullCase:
      @@@enDesc: No local name.
    @@Get:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $r = $item-><AG::DVQNameValue.localName>;
          } else {
            $r = null;
          }
        }__;
    @@Set:
      @@@PerlDef:
        __DEEP{
          my $item = $self-><M::DVValue.item> (0);
          if (UNIVERSAL::isa ($item, <IFName::DVQNameValue>)) {
            $item-><AS::DVQNameValue.localName> ($given);
          }
        }__;
##DVQNameUnorderedList

ClsDef:
  @ClsQName: ManakaiDVSWCFGElement
  
  @ClsISA: ManakaiDVValue

  @Attr:
    @@ForCheck: ManakaiDOM|ForClass
    @@Name: stringValue
    @@Type: DISString
    @@Get:
      @@@PerlDef:
        $r = $self-><AG::DVValue.value>
                  -><M::swcfg21:SWCFGNode||swcfg21:ForLatest.value>;
    @@Set:
      @@@PerlDef:
        $self-><AG::DVValue.value>
             -><M::swcfg21:SWCFGNode||swcfg21:ForLatest.value>
                 (new_value => $given);
##DVSWCFGElement

ElementTypeBinding:
  @Name: plOp
  @ElementType:
    dis:Operator
  @ShadowContent:
    @@ContentType: lang|Perl

ResourceDef:
  @QName: DISString
  @AliasFor: DISLang|String||ManakaiDOM|all
  @For: DIS|ForEmpty

ElementTypeBinding:
  @Name: PerlDef
  @ElementType:
    dis:Def
  @ShadowContent:
    @@ContentType:
      lang:Perl
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: InCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase

ElementTypeBinding:
  @Name: nullCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:
      @@@is-null:1

ElementTypeBinding:
  @Name: TrueCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:
      @@@@:1
      @@@ContentType: DISCore|Boolean
    @@Type:
      DOMMain:boolean::ManakaiDOM:all


ElementTypeBinding:
  @Name: FalseCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:
      @@@@:0
      @@@ContentType: DISCore|Boolean
    @@Type:
      DOMMain:boolean::ManakaiDOM:all
