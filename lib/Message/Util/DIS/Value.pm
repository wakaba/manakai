#!/usr/bin/perl 
## This file is automatically generated
## 	at 2006-01-29T13:34:10+00:00,
## 	from file "lib/Message/Util/DIS/Value.dis",
## 	module <http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#Value>,
## 	for <http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#ForLatest>.
## Don't edit by hand!
use strict;
require Message::DOM::DOMFeature;
require Message::Markup::SuikaWikiConfig21;
require Message::Util::DIS;
require Message::Util::DIS::Perl;
require Message::Util::Error::DOMException;
require Tie::Array;
package Message::Util::DIS::Value;
our $VERSION = 20060129.1334;
package Message::Util::IF::DISImplementationValue;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDISImplementationValue;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::IF::DISImplementationValue';
sub create_dv_value ($$;$%) {
my ($self, $dataType, $value, %opt) = @_;
my $r;

{

my 
$class = 
'Message::Util::DIS::Value::ManakaiDVValue'
;
for ($opt{base_type}, $dataType) {
  $class = {
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#QName'
 => 
'Message::Util::DIS::Value::ManakaiDVQNameValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#URI'
 => 
'Message::Util::DIS::Value::ManakaiDVURIValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#Perl'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis'
 => 
'Message::Util::DIS::Value::ManakaiDVSWCFGElement'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#muf'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dpg'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdoc'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdocInline'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
  }->{$_} || $class;
}
$r = bless \ {
}, $class;


{

if 
(defined $dataType) {
  if (ref $dataType eq 'SCALAR') {
    $$r->{type} = $dataType;
  } elsif (defined $Message::Util::ManakaiStringRef::Value{$dataType}) {
    $$r->{type} = $Message::Util::ManakaiStringRef::Value{$dataType};
  } else {
    require Scalar::Util;
    $$r->{type} = $Message::Util::ManakaiStringRef::Value{$dataType} = \($dataType);
    Scalar::Util::weaken ($Message::Util::ManakaiStringRef::Value{$dataType});
  }
} else {
  CORE::delete $$r->{type};
}


;}

;


{

local $Error::Depth = $Error::Depth + 1;

{



  $r->
value
 ($value);



;}


;}

;


;}
$r}
sub create_dv_value_ref ($$;$%) {
my ($self, $dataType, $valueRef, %opt) = @_;
my $r;

{

my 
$class = 
'Message::Util::DIS::Value::ManakaiDVValue'
;
for ($opt{base_type}, $dataType) {
  $class = {
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#QName'
 => 
'Message::Util::DIS::Value::ManakaiDVQNameValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#URI'
 => 
'Message::Util::DIS::Value::ManakaiDVURIValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#Perl'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis'
 => 
'Message::Util::DIS::Value::ManakaiDVSWCFGElement'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#muf'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dpg'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdoc'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdocInline'
 => 
'Message::Util::DIS::Value::ManakaiDVNSValue'
,
  }->{$_} || $class;
}
$r = bless \ {
}, $class;


{

if 
(defined $dataType) {
  if (ref $dataType eq 'SCALAR') {
    $$r->{type} = $dataType;
  } elsif (defined $Message::Util::ManakaiStringRef::Value{$dataType}) {
    $$r->{type} = $Message::Util::ManakaiStringRef::Value{$dataType};
  } else {
    require Scalar::Util;
    $$r->{type} = $Message::Util::ManakaiStringRef::Value{$dataType} = \($dataType);
    Scalar::Util::weaken ($Message::Util::ManakaiStringRef::Value{$dataType});
  }
} else {
  CORE::delete $$r->{type};
}


;}

;


{

local $Error::Depth = $Error::Depth + 1;

{



  $r->
value_ref
 ($valueRef);



;}


;}

;


;}
$r}
sub create_dv_ordered_list ($;$%) {
my ($self, $dataType, %opt) = @_;
my $r;

{

my 
$class = 
'Message::Util::DIS::Value::ManakaiDVOrderedList'
;
for ($opt{base_type}, $dataType) {
  $class = {
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#QName'
 => 
'Message::Util::DIS::Value::ManakaiDVQNameOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#URI'
 => 
'Message::Util::DIS::Value::ManakaiDVURIOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis'
 => 
'Message::Util::DIS::Value::ManakaiDVSWCFGElementOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#Perl'
 => 
'Message::Util::DIS::Value::ManakaiDVNSOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#muf'
 => 
'Message::Util::DIS::Value::ManakaiDVNSOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dpg'
 => 
'Message::Util::DIS::Value::ManakaiDVNSOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdoc'
 => 
'Message::Util::DIS::Value::ManakaiDVNSOrderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#disdocInline'
 => 
'Message::Util::DIS::Value::ManakaiDVNSOrderedList'
,
  }->{$_} || $class;
}
$r = bless \ {
  array => [],
}, $class;


;}
$r}
sub create_dv_unordered_list ($;$%) {
my ($self, $dataType, %opt) = @_;
my $r;

{

my 
$class = 
'Message::Util::DIS::Value::ManakaiDVUnorderedList'
;
for ($opt{base_type}, $dataType) {
  $class = {
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#QName'
 => 
'Message::Util::DIS::Value::ManakaiDVQNameUnorderedList'
,
    
'http://suika.fam.cx/~wakaba/archive/2004/dis/Core#URI'
 => 
'Message::Util::DIS::Value::ManakaiDVURIUnorderedList'
,
  }->{$_} || $class;
}
$r = bless \ {
  hash => {},
}, $class;


;}
$r}
$Message::DOM::ImplFeature{q<Message::Util::DIS::Value::ManakaiDISImplementationValue>}->{q<http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value>}->{q<1.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::Util::DIS::Value::ManakaiDISImplementationValue>}->{q<http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value>}->{q<>} = 1;
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDISImplementationValue>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDISImplementationValue>} = 1;
package Message::Util::IF::DVValue;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVValue;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Perl::ManakaiDVValuePerl', 'Message::DOM::DOMFeature::ManakaiHasFeatureByGetFeature', 'Message::Util::Error::DOMException::ManakaiDefaultExceptionHandler', 'Tie::Array', 'Message::DOM::IFLatest::GetFeature', 'Message::Util::IF::DVValue';
sub string_value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = $self->
value
;



;}


;}

;
$r = defined $r ? ''.$r : 
undef
;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVValue', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'string_value';
}
}
sub data_type ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = ${$$self->{type}};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVValue', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'data_type';
}
}
sub value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{

if 
(defined $$self->{value}) {
  $r = ${$$self->{value}};
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  $$self->{value} = \ $given;
} else {
  CORE::delete $$self->{value};
}


;}
}
}
sub value_ref ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $$self->{value};


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  $$self->{value} = $given;
} else {
  CORE::delete $$self->{value};
}    


;}
}
}
sub is_null ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$in = $self->
get_property
 (
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis--is-null'
);
  $r = ($in and $in->
value
);



;}


;}

;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVValue', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'is_null';
}
}
sub TIEARRAY ($$) {
my ($self, $object) = @_;
my $r;

{


$r = $object;


;}
$r}
sub TIEHASH ($$) {
my ($self, $object) = @_;
my $r;

{


$r = $object;


;}
$r}
sub FETCH ($$) {
my ($self, $index) = @_;
my $r;

{


$r = $self;


;}
$r}
*item = \&FETCH;
sub STORE ($$$) {
my ($self, $index, $value) = @_;


}
sub FETCHSIZE ($) {
my ($self) = @_;
my $r = 0;

{


$r = 1;


;}
$r}
sub STORESIZE ($) {
my ($self) = @_;


}
sub EXISTS ($$) {
my ($self, $index) = @_;
my $r = 0;

{


$r = ($index == 1);


;}
$r}
sub get_property ($$) {
my ($self, $propName) = @_;
my $r;

{


$r = $$self->{prop}->{$propName};


;}
$r}
sub set_property ($$;$) {
my ($self, $propName, $newValue) = @_;

{

if 
(defined $newValue) {
  $$self->{prop}->{$propName} = $newValue;
} else {
  CORE::delete $$self->{prop}->{$propName};
}


;}
}
sub source_node_path ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $$self->{nodePath};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{nodePath} = $given;


;}
}
}
sub get_feature ($$$) {
my ($self, $feature, $version) = @_;

{


$feature = lc $feature;


;}

{


$version = '' unless defined $version;


;}
my $r;

{


$feature =~ s/^\+//;
CLASS: for my $class (grep {
  $Message::Util::DIS::Value::ManakaiDVValue::CompatClass{$_}
} keys %Message::Util::DIS::Value::ManakaiDVValue::CompatClass) {
  if ($Message::DOM::ClassFeature{$class}->{$feature}->{$version}) {
    $r = bless {o => $self}, $class;
    last CLASS;
  }
}


;}
$r}
sub name ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = defined $$self->{name} ? ${$$self->{name}} : 
undef
;


;}
$r;
} else {my ($self, $given) = @_;

{


{

if 
(defined $given) {
  if (ref $given eq 'SCALAR') {
    $$self->{name} = $given;
  } elsif (defined $Message::Util::ManakaiStringRef::Value{$given}) {
    $$self->{name} = $Message::Util::ManakaiStringRef::Value{$given};
  } else {
    require Scalar::Util;
    $$self->{name} = $Message::Util::ManakaiStringRef::Value{$given} = \($given);
    Scalar::Util::weaken ($Message::Util::ManakaiStringRef::Value{$given});
  }
} else {
  CORE::delete $$self->{name};
}


;}

;


;}
}
}
use overload 
bool => sub () {1}, 
'@{}' => sub ($) {
my ($self) = @_;
my $r = [];

{

tie 
my @list, ref $self, $self;
$r = \@list;


;}
$r}
, 
'%{}' => sub ($) {
my ($self) = @_;
my $r = {};

{

tie 
my %list, ref $self, $self;
$r = \%list;


;}
$r}
, 
fallback => 1;
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVValue>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVValue>} = 2;
package Message::Util::IF::DVNSValue;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVNSValue;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVValue', 'Message::Util::DIS::ManakaiNSResolverDIS', 'Message::Util::IF::DVNSValue', 'Message::Util::IF::DVValue', 'Message::Util::IFLatest::NSResolverDIS';
sub namespace_binding_list ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = {};

{


$r = $$self->{ns};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{ns} = $given;


;}
}
}
sub lookup_namespace_uri ($;$) {
my ($self, $prefix) = @_;
my $r = '';

{

if 
(defined $prefix) {
  $r = $$self->{ns}->{$prefix};
  if (not defined $prefix and $$self->{ns}->{'###db'}) {
    my $db = $$self->{ns}->{'###db'};
    FIND: for my $mod_uri (keys %{$db->{modDef}}) {
      my $mod = $db->
get_module
 ($mod_uri);
      if ($mod->
local_name eq 
$prefix) {
        $r = $mod->
get_property_text

                                           (
'http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis--Namespace'
, 
undef
);
        last FIND;
      }
    }
  }
} else {
  $r = ${$$self->{defaultNS}};
}


;}
$r}
sub prefix_to_uri ($;$%) {
my ($self, $prefix, %opt) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = $self->
lookup_namespace_uri
 ($prefix);



;}


;}

;
unless (defined $r) {
  
report Message::Markup::SuikaWikiConfig21::ManakaiSWCFGException -object => $self, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#sourceNode' => $opt{node}, '-type' => 'NAMESPACE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'prefix_to_uri', 'http://www.w3.org/2001/04/infoset#prefix' => $prefix, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#UNDECLARED_NS_PREFIX_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVNSValue', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name' => 'prefix';

;
}


;}
$r}
sub default_namespace_uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = ${$$self->{defaultNS}};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{defaultNS} = \$given;


;}
}
}
sub default_namespace_uri_ref ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $$self->{defaultNS};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{defaultNS} = $given;


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVNSValue>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#core', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVNSValue>} = 3;
package Message::Util::IF::DVList;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVValue', 'Message::Util::IF::DVList', 'Message::Util::IF::DVValue';
sub length ($;$) {
if (@_ == 1) {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_ATTR_NOT_IMPLEMENTED', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
}
}
sub add_item ($$) {
my ($self, $newItem) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'add_item', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_METHOD_NOT_IMPLEMENTED', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVList';
}
sub get_property ($$) {
my ($self, $propName) = @_;
my $r;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $r = $v->
get_property
 ($propName)
    if $v;



;}


;}

;


;}
$r}
sub set_property ($$;$) {
my ($self, $propName, $newValue) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $v->
set_property
 ($propName => $newValue)
    if $v;



;}


;}

;


;}
}
sub name ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $r = $v->
name if 
$v;



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $v->
name if 
$v;



;}


;}

;


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVList>} = 2;
package Message::Util::IF::DVOrderedList;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVOrderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVList', 'Message::Util::IF::DVList', 'Message::Util::IF::DVOrderedList', 'Message::Util::IF::DVValue';
sub length ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = @{$$self->{array}};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
}
}
sub data_type ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = 
'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#Value/DVOrderedList'
;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'data_type';
}
}
sub string_value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
($$self->{array}->[0]) {
  $r = $$self->{array}->[0]->
string_value
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'string_value';
}
}
sub value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
($$self->{array}->[0]) {
  $r = $$self->{array}->[0]->
value
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'value';
}
}
sub value_ref ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
($$self->{array}->[0]) {
  $r = $$self->{array}->[0]->
value_ref
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'value_ref';
}
}
sub item ($$) {
my ($self, $index) = @_;
my $r;

{


$r = $$self->{array}->[$index];


;}
$r}
sub add_item ($$) {
my ($self, $newItem) = @_;

{

push 
@{$$self->{array}}, $newItem;


;}
}
use overload 
bool => sub () {1}, 
'@{}' => sub ($) {
my ($self) = @_;
my $r = [];

{


$r = $$self->{array};


;}
$r}
, 
fallback => 1;
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVOrderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVOrderedList>} = 2;
package Message::Util::IF::DVUnorderedList;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVUnorderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVList', 'Message::Util::IF::DVList', 'Message::Util::IF::DVUnorderedList', 'Message::Util::IF::DVValue';
sub FETCHSIZE ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = keys %{$$self->{hash}};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
}
}
*length = \&FETCHSIZE;
sub data_type ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = 
'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/DIS#Value/DVUnorderedList'
;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'data_type';
}
}
sub string_value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
(keys %{$$self->{hash}}) {
  $r = $$self->{hash}->{[keys %{$$self->{hash}}]->[0]}
             ->
string_value
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'string_value';
}
}
sub value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
(keys %{$$self->{hash}}) {
  $r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[0]}
             ->
value
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'value';
}
}
sub value_ref ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

if 
(keys %{$$self->{hash}}) {
  $r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[0]}
             ->
value_ref
;
} else {
  $r = 
undef
;
}


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'value_ref';
}
}
sub add_item ($$) {
my ($self, $newItem) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $$self->{hash}->{$newItem->
value
} = $newItem;



;}


;}

;


;}
}
sub FETCH ($$) {
my ($self, $index) = @_;
my $r;

{


$r = $$self->{hash}->{[sort keys %{$$self->{hash}}]->[$index]};


;}
$r}
*item = \&FETCH;
sub STORE ($$;$) {
my ($self, $index, $newValue) = @_;

{

CORE::delete 
$$self->{hash}->{[sort keys %{$$self->{hash}}]->[$index]};


{

local $Error::Depth = $Error::Depth + 1;

{



  $$self->{hash}->{$newValue->
value
} = $newValue;



;}


;}

;


;}
}
use overload 
bool => sub () {1}, 
'%{}' => sub ($) {
my ($self) = @_;
my $r = {};

{


$r = $$self->{hash};


;}
$r}
, 
fallback => 1;
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVUnorderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVUnorderedList>} = 2;
package Message::Util::IF::DVURIValue;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVURIValue;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVValue', 'Message::Util::IF::DVURIValue', 'Message::Util::IF::DVValue';
sub get_resource ($$) {
my ($self, $database) = @_;
my $r;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$uri = $self->
uri
;
  $r = $database->
get_any_resource
 ($uri);



;}


;}

;


;}
$r}
sub uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = $self->
value
;



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  

{

local $Error::Depth = $Error::Depth + 1;

{



    $self->
value
 ($given);
  


;}


;}

;
} else {
  

{

local $Error::Depth = $Error::Depth + 1;

{


    if 
(defined $self->
value
) {
      $self->
value
 (
undef
);
    }
  


;}


;}

;
}


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVURIValue>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVURIValue>} = 2;
package Message::Util::DIS::Value::ManakaiDVSWCFGElementOrderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'Message::Util::DIS::Value::ManakaiDVSWCFGElement';
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVSWCFGElementOrderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVSWCFGElementOrderedList>} = 2;
package Message::Util::DIS::Value::ManakaiDVURIOrderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'Message::Util::DIS::Value::ManakaiDVURIValue';
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVURIOrderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVURIOrderedList>} = 2;
package Message::Util::DIS::Value::ManakaiDVQNameOrderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'Message::Util::DIS::Value::ManakaiDVQNameValue';
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVQNameOrderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVQNameOrderedList>} = 2;
package Message::Util::DIS::Value::ManakaiDVURIUnorderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'Message::Util::DIS::Value::ManakaiDVURIValue';
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVURIUnorderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVURIUnorderedList>} = 2;
package Message::Util::DIS::Value::ManakaiDVNSOrderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVOrderedList', 'Message::Util::DIS::Value::ManakaiDVNSValue';
sub namespace_binding_list ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = {};

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $r = $v->
namespace_binding_list
    if 
$v;



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $v->
namespace_binding_list
 ($given)
    if $v;



;}


;}

;


;}
}
}
sub default_namespace_uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $r = $v->
default_namespace_uri
    if 
$v;



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$v = $self->[0];
  $v->
default_namespace_uri
 ($given)
    if $v;



;}


;}

;


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVNSOrderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#core', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVNSOrderedList>} = 3;
package Message::Util::IF::DVQNameValue;
our $VERSION = 20060129.1334;
package Message::Util::DIS::Value::ManakaiDVQNameValue;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVURIValue', 'Message::Util::IF::DVQNameValue', 'Message::Util::IF::DVURIValue', 'Message::Util::IF::DVValue';
sub prefix ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $$self->{prefix};


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  $$self->{prefix} = $given;
} else {
  CORE::delete $$self->{prefix};
}


;}
}
}
sub local_name ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $$self->{value};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{value} = $given;


;}
}
}
sub namespace_uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $$self->{namespaceURI};


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  $$self->{namespaceURI} = $given;
} else {
  CORE::delete $$self->{namespaceURI};
}


;}
}
}
sub value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = defined $$self->{namespaceURI}
   ? $$self->{namespaceURI} . $$self->{value}
   : $$self->{value};


;}
$r;
} else {my ($self, $given) = @_;

{


$$self->{namespaceURI} = $given;
$$self->{value} = '';


;}
}
}
sub value_ref ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = defined $$self->{namespaceURI}
   ? \ ($$self->{namespaceURI} . $$self->{value})
   : \ ($$self->{value});


;}
$r;
} else {my ($self, $given) = @_;

{

if 
(defined $given) {
  $$self->{namespaceURI} = $given;
} else {
  CORE::delete $$self->{namespaceURI};
}
$$self->{value} = '';


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVQNameValue>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVQNameValue>} = 2;
package Message::Util::DIS::Value::ManakaiDVQNameUnorderedList;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVUnorderedList', 'Message::Util::DIS::Value::ManakaiDVQNameValue';
sub prefix ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $r = $item->
prefix
;
  } else {
    $r = 
undef
;
  }



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $item->
prefix
 ($given);
  }



;}


;}

;


;}
}
}
sub namespace_uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $r = $item->
namespace_uri
;
  } else {
    $r = 
undef
;
  }



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $item->
namespace_uri
 ($given);
  }



;}


;}

;


;}
}
}
sub local_name ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $r = $item->
local_name
;
  } else {
    $r = 
undef
;
  }



;}


;}

;


;}
$r;
} else {my ($self, $given) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$item = $self->
item
 (0);
  if (UNIVERSAL::isa ($item, 
'Message::Util::IF::DVQNameValue'
)) {
    $item->
local_name
 ($given);
  }



;}


;}

;


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVQNameUnorderedList>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVQNameUnorderedList>} = 2;
package Message::Util::DIS::Value::ManakaiDVSWCFGElement;
our $VERSION = 20060129.1334;
push our @ISA, 'Message::Util::DIS::Value::ManakaiDVValue';
sub string_value ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $self->
value

          ->
value
;


;}
$r;
} else {my ($self, $given) = @_;

{


$self->
value

     ->
value

         (new_value => $given);


;}
}
}
$Message::DOM::ClassFeature{q<Message::Util::DIS::Value::ManakaiDVSWCFGElement>} = {'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#perl', {'', '1', '1.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2005/manakai/util/dis#value', {'', '1', '1.0', '1'}};
$Message::DOM::ClassPoint{q<Message::Util::DIS::Value::ManakaiDVSWCFGElement>} = 2;
for ($Message::DOM::IFLatest::GetFeature::, $Message::Util::IFLatest::NSResolverDIS::){}
## License: <http://suika.fam.cx/~wakaba/archive/2004/8/18/license#Perl+MPL>
1;
