Namespace:
  @DOMCore:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @ev:
    http://www.w3.org/2001/xml-events
  @lang:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @ManakaiDOMEvents:
    http://suika.fam.cx/~wakaba/archive/2004/mdom-ev#
  @TreeCore:\
Module:
  @Name:  DOMMutationEvents
  @Namespace:
     http://suika.fam.cx/~wakaba/archive/2004/dom/events#
  @BindingName:
     @@@:  events
     @@Type:
        lang:IDL-DOM
     @@prefix:  dom.w3c.org
  @FullName:
    @@lang:en
    @@@: DOM Mutation Events Module
  @Description:
    @@lang:en
    @@@:
      Notify any changes to the structure of a document, 
      including attribute or character data modifications.
    \
      {NOTE:: Many single modifications can cause 
              multiple mutation events to be dispatched. 
              The ordering of mutation events is implementation 
              dependent.
    \
      }

  @Author:
     @@FullName:  Wakaba
     @@Mail:  w@suika.fam.cx
  @License:
     license:Perl+MPL
  @Date.RCS:
     $Date: 2004/10/11 10:37:13 $

  @ConditionDef:
    @@Name:DOM2
  @ConditionDef:
    @@Name:DOM3
    @@ISA:DOM2
  @NormalCondition:DOM3

  @Feature:
    @@Name:MutationEvents
    @@Version:2.0
    @@FullName: DOM Level 2 Mutation Events
    @@ImplNote:
      @@@lang:en
      @@@@:
        The support for <Feature:Events>/<FeatureVer:2.0> is required.
    @@Condition[list]:
      DOM2
      DOM3
    @@Contrib:
      DOMCore:DOMImplementation::
  @Feature:
    @@Name:MutationEvents
    @@Version:3.0
    @@FullName: DOM Level 3 Mutation Events
    @@ImplNote:
      @@@lang:en
      @@@@:
        The support for <Feature:Events>/<FeatureVer:3.0> is required.
    @@Condition[list]:
      DOM3
    @@Contrib:
      DOMCore:DOMImplementation::


  @Require:
     @@Module:
        @@@Name:  DOMEvents
        @@@FileName:
           @@@@@:  events.idl
           @@@@For:
              lang:IDL-DOM
        @@@Namespace:
           http://suika.fam.cx/~wakaba/archive/2004/dom/events#

EventSet:
  @Event:
    @@Name:DOMSubtreeModified
    @@QName:
      ev:DOMSubtreeModified
    @@Description:
      @@@lang:en
      @@@@:
        A general event for notification of all changes to the document.
      \
        This type of event may be dispatched after a single modification 
        to the document or, at the discretion of the DOM implementation, 
        after multiple changes have occurred.
      \
        {NOTE:: The late use should generally be used to accommodate multiple 
                changes that occur either simultaneously or in rapid 
                succession.
      \
        }
      \
        This event is dispatched after any other events caused 
        by the mutation(s) that have occurred.
      \
        {NOTE:: This event can be used instead of the more specific 
                events such as:
         \
          - <EV:ev:DOMNodeInserted>
         \
          - <EV:ev:DOMNodeRemoved>
         \
          - <EV:ev:DOMNodeRemovedFromDocument>
         \
          - <EV:ev:DOMNodeInsertedIntoDocument>
         \
          - <EV:ev:DOMAttrModified>
         \
          - <EV:ev:DOMCharacterDataModified>
         \
          - <EV:ev:DOMElementNameChanged>
         \
          - <EV:ev:DOMAttributeNameChanged>
         \
         } 
    @@Type:MutationEvent
    @@IsBubbling:1
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Document>, <IF:DocumentFragment>, <IF:Element> 
          or <IF:Attr> node.
          The lowest common parent of the changes.
    @@MutationEvent.relatedNode:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          If an event is instead dispatched to a subtree 
          indicating a subnode was changed, the changed node.
    @@SpecLevel:2
  @Event:
    @@Name:DOMNodeInserted
    @@QName:
      ev:DOMNodeInserted
    @@Description:
      @@@lang:en
      @@@@:
        A node has been added as a child of another node.
    @@DefaultActionBefore:
      @@@lang:en
      @@@@:
        The insertion has take place.
    @@Type:MutationEvent
    @@IsBubbling:1
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Element>, <IF:Attr>, <IF:Text>, <IF:Comment>, 
          <IF:CDATASection>, <IF:DocumentType>, <IF:EntityReference> 
          or <IF:ProcessingInstruction> node.
          The node being inserted.
    @@MutationEvent.relatedNode:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          The parent node of the node being inserted.
    @@SpecLevel:2
  @Event:
    @@Name:DOMNodeRemoved
    @@QName:
      ev:DOMNodeRemoved
    @@Description:
      @@@lang:en
      @@@@:
        A node is being removed from its parent node.
    @@DefaultAction:
      @@@lang:en
      @@@@:
        The node is removed from the tree.
    @@Type:MutationEvent
    @@IsBubbling:1
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Element>, <IF:Attr>, <IF:Text>, <IF:Comment>, 
          <IF:CDATASection>, <IF:DocumentType>, <IF:EntityReference> 
          or <IF:ProcessingInstruction> node.
          The node being removed.
    @@MutationEvent.relatedNode:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          The parent node of the node being removed.
    @@SpecLevel:2
  @Event:
    @@QName:
      ev:DOMNodeRemovedFromDocument
    @@Name:DOMNodeRemovedFromDocument
    @@Description:
      @@@lang:en
      @@@@:
        A node is being removed from a document, either through 
        direct removal of the node or removal of a subtree 
        in which it is contained.
    @@ActionBefore:
      @@@Description:
        @@@@lang:en
        @@@@@:
          If the node is being directly removed, the event 
          <EV:ev:DOMNodeRemoved> will fire before this event.
    @@ActionAfter:
      @@@Description:
        @@@@lang:en
        @@@@@:
          The removal takes place.
    @@Type:MutationEvent
    @@IsBubbling:0
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Element>, <IF:Attr>, <IF:Text>, <IF:Comment>, 
          <IF:CDATASection>, <IF:DocumentType>, <IF:EntityReference> 
          or <IF:ProcessingInstruction> node.
          The node being removed.
    @@SpecLevel:2
  @Event:
    @@Name:DOMNodeInsertedIntoDocument
    @@QName:
      ev:DOMNodeInsertedIntoDocument
    @@Description:
      @@@lang:en
      @@@@:
        A node is being inserted into a document, either through 
        direct insertion of the node or insertion of a subtree 
        in which it is contained.
      \
        If the node is being directly inserted, the event 
        <EV:ev:DOMNodeInserted> will fire before this event.
    @@ActionBefore:
      @@@Description:
        @@@@lang:en
        @@@@@:
          The insertion has taken place.
    @@Type:MutationEvent
    @@IsBubbling:0
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Element>, <IF:Attr>, <IF:Text>, <IF:Comment>, 
          <IF:CDATASection>, <IF:DocumentType>, <IF:EntityReference> 
          or <IF:ProcessingInstruction> node.
          The node being inserted.
    @@SpecLevel:2
  @Event:
    @@Name:DOMAttrModified
    @@QName:
      ev:DOMAttrModified
    @@Description:
      @@@lang:en
      @@@@:
        An <IF:Attr> has been modified on a node.
     \
        String based replacement of an <IF:Attr> value will be 
        viewed as a modification since its identity does not change; 
        replacement of the <IF:Attr> node with a 
        different <IF:Attr> node is viewed as the 
        pair of the removal and the addition.
    @@ActionBefore:
      @@@Description:
        @@@@lang:en
        @@@@@:
          The <IF:Attr> has been modified.
    @@Type:MutationEvent
    @@IsBubbling:1
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Element
      @@@Description:
        @@@@lang:en
        @@@@@:
          The owner <IF:Element>.
    @@MutationEvent.attrName:
      @@@Type:
        DOMMain:DOMString
      @@@Description:
        @@@@lang:en
        @@@@@:
          The name of the changed <IF:Attr> node.
    @@MutationEvent.relatedNode:
      @@@Type:
        DOMCore:Attr
      @@@Description:
        @@@@lang:en
        @@@@@:
          The <IF:Attr> node.
    @@MutationEvent.attrChange:
      @@@Type:attrChangeType
      @@@Description:
        @@@@lang:en
        @@@@@:
          The type of modification occurred.
    @@MutationEvent.newValue:
      @@@Type:
        DOMMain:DOMString
      @@@Description:
        @@@@lang:en
        @@@@@:
          The new value of the <IF:Attr>.  This attribute is 
          in use when the node is either added or modified.
    @@MutationEvent.prevValue:
      @@@Type:
        DOMMain:DOMString
      @@@Description:
        @@@@lang:en
        @@@@@:
          The previous value of the <IF:Attr>.  This attribute is 
          in use when the node is either added or modified.
    @@SpecLevel:2
  @Event:
    @@Name:DOMCharacterDataModified
    @@QName:
      ev:DOMCharacterDataModified
    @@Description:
      @@@lang:en
      @@@@:
        Either <A:CharacterData.data> or <A:ProcessingInstruction.data> 
        have been modified (but the node itself has not been inserted 
        or deleted).
    @@ActionBefore:
      @@@Description:
        @@@@lang:en
        @@@@@:
          The <A:data> have been modified.
    @@Type:MutationEvent
    @@IsBubbling:1
    @@IsCancalable:0
    @@EventTarget:
      @@@Type:
        DOMCore:Node
      @@@Description:
        @@@@lang:en
        @@@@@:
          <IF:Text>, <IF:Comment>, <IF:CDATASection> or 
          <IF:ProcessingInstruction> node that has been modified.
    @@MutationEvent.newValue:
      @@@Type:
        DOMMain:DOMString
      @@@Description:
        @@@@lang:en
        @@@@@:
          The new value of the node.  This attribute is 
          in use when the node is either added or modified.
    @@MutationEvent.prevValue:
      @@@Type:
        DOMMain:DOMString
      @@@Description:
        @@@@lang:en
        @@@@@:
          The new value of the node.  This attribute is 
          in use when the node is either added or modified.
    @@SpecLevel:2
    @@ImplNote:
      @@@lang:en
      @@@@:
        In the DOM Level 2 Events Specification, some instances 
        of <ERR:DOMCharDataModified> appear in the descriotions. 
        It is error <SRC:DOM Level 2 Errata events-2>.
##ErrorSet

IF:
  @Name:  MutationEvent
  @Description:
    @@lang:en
    @@@:
      Provide specific contextual information associated with 
      mutation events.
  @Example:
    @@For:
      lang:Perl
    @@FullName:
      @@@lang:en
      @@@@:
        Create an instance of the <IF:MutationEvent>
    @@Code:
      @@@Type:
        lang:Perl
      @@@@:
        my $mev = $DocumentEvent->createEvent ('MutationEvent');

  @ISA:  
    DOMEvents:Event
  @Role:
    @@@:
      DOMEvents:Event
    @@compat:
      ManakaiDOMEvents:Events

  @Level[list]:  2
  @SpecLevel[list]:  2

  @ConstGroup:
     @@Name:  attrChangeType
     @@Type:
        DOMMain:unsigned-short
     @@Description:
       @@@lang:en
       @@@@:
         The way in which the <IF:Attr> node was changed.
     @@Const:
        @@@Name:  MODIFICATION
        @@@Type:
           DOMMain:unsigned-short
        @@@Value:  1
        @@@Description:
          @@@@lang:en
          @@@@@:
            The <IF:Attr> modified in place.
     @@Const:
        @@@Name:  ADDITION
        @@@Type:
           DOMMain:unsigned-short
        @@@Value:  2
        @@@Description:
          @@@@lang:en
          @@@@@:
            The <IF:Attr> was just added.
     @@Const:
        @@@Name:  REMOVAL
        @@@Type:
           DOMMain:unsigned-short
        @@@Value:  3
        @@@Description:
          @@@@lang:en
          @@@@@:
            The <IF:Attr> was just removed.

  @Attr:
     @@Name:  relatedNode
     @@Description:
       @@@lang:en
       @@@@:
         A secondary node related to a mutation event.
       \
         {eg::
          \
           - The parent of a node has changed:: 
               The <A:relatedNode> is the changed parent.
          \
         }
     @@Get:
        @@@Type:  
          DOMCore:Node
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMMutationEvents:relatedNode
  @Attr:
     @@Name:  prevValue
     @@Description:
       @@@lang:en
       @@@@:
         The previous value of the node.
     @@Get:
        @@@Type:  
          DOMMain:DOMString
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMMutationEvents:prevValue
  @Attr:
     @@Name:  newValue
     @@Description:
       @@@lang:en
       @@@@:
         The new value of the node.
     @@Get:
        @@@Type:  
          DOMMain:DOMString
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMMutationEvents:newValue
  @Attr:
     @@Name:  attrName
     @@Description:
       @@@lang:en
       @@@@:
         The name of the changed <IF:Attr> node.
     @@Get:
        @@@Type:  
          DOMMain:DOMString
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMMutationEvents:attrName
  @Attr:
     @@Name:  attrChange
     @@Description:
       @@@lang:en
       @@@@:
         The type of change to the <IF:Attr> node.
     @@Get:
        @@@Type: attrChangeType
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMMutationEvents:attrChange
  @Method:
     @@Name:  initMutationEvent
     @@Description:
       @@@lang:en
       @@@@:
         Initialize the value of a <IF:MutationEvent> object.  It has
         the same behavior as <M:Event.initEvent>.
     @@NSVersion:initMutationEventNS
     @@Param:
        @@@Name:  typeArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  canBubbleArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  cancelableArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  relatedNodeArg
        @@@Type:  
          DOMCore:Node
     @@Param:
        @@@Name:  prevValueArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  newValueArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  attrNameArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  attrChangeArg
        @@@Type: attrChangeType
     @@Return: 
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
                  ## Conditional
           $self->__SUPER{Event}__::initEvent
                     ($typeArg, $canBubbleArg, $cancelableArg);
           for ($self->{<Q:TreeCore:node>}) {
             $_->{<Q:DOMMutationEvents:relatedNode>} = $relatedNodeArg;
             $_->{<Q:DOMMutationEvents:prevValue>} = $prevValueArg;
             $_->{<Q:DOMMutationEvents:newValue>} = $newValueArg;
             $_->{<Q:DOMMutationEvents:attrName>} = $attrNameArg;
             $_->{<Q:DOMMutationEvents:attrChange>} = $attrChangeArg;
           }
    @@SpecLevel:2
    @@Level[list]:
      2
      3
  @Method:
     @@Name:  initMutationEventNS
     @@Description:
       @@@lang:en
       @@@@:
         Initialize the value of a <IF:MutationEvent> object.  It has
         the same behavior as <M:Event.initEventNS>.
     @@NoNSVersion:initMutationEventNS
     @@Param:
        @@@Name:  namespaceURI
        @@@Type: 
          ManakaiDOM:ManakaiDOMNamespaceURI
     @@Param:
        @@@Name:  typeArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  canBubbleArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  cancelableArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  relatedNodeArg
        @@@Type:  
          DOMCore:Node
     @@Param:
        @@@Name:  prevValueArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  newValueArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  attrNameArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  attrChangeArg
        @@@Type: attrChangeType
     @@Return:  
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
                  ## Conditional
           $self->__SUPER{Event}__::initEventNS
                     ($namespaceURI, $typeArg, $canBubbleArg, $cancelableArg);
           for ($self->{<Q:TreeCore:node>}) {
             $_->{<Q:DOMMutationEvents:relatedNode>} = $relatedNodeArg;
             $_->{<Q:DOMMutationEvents:prevValue>} = $prevValueArg;
             $_->{<Q:DOMMutationEvents:newValue>} = $newValueArg;
             $_->{<Q:DOMMutationEvents:attrName>} = $attrNameArg;
             $_->{<Q:DOMMutationEvents:attrChange>} = $attrChangeArg;
           }
     @@Level[list]:  3
     @@SpecLevel[list]:  3
##IF:MutationEvent

## DOMMutationEvents.dis ends here
