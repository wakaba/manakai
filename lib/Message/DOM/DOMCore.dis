Namespace:
  @DocTree:
    http://suika.fam.cx/~wakaba/archive/2004/9/10/dom#
  @DOMCore:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @infoset:
     http://www.w3.org/2001/04/infoset#
  @lang:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @DOM3Core:
     http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/
  @ManakaiDOMImplementationException:
     http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#
  @MDOM_EXCEPTION:
     http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#
  @TreeCore: \
Module:
  @Name:  dom
    @@Prefix:  w3c.org
  @FullName:
    @@lang:en
    @@@: DOM Core Module
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-BBACDC08
  @Namespace:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @Package:
    @@Type:
      lang:Perl
    @@@: __CLASS{DOMCore}__
  
  @Description:
    @@lang:en
    @@@:
      Fundemental DOM interfaces that must be fully implemented by
      all conforming implementations of DOM.
  
  @License:
     license:Perl
  @Date.RCS:
     $Date: 2004/09/10 10:06:13 $

  @ConditionDef:
    @@Name: DOM1
  @ConditionDef:
    @@Name: DOM2
  @ConditionDef:
    @@Name: DOM3
  
  @Feature:
    @@Name: Core
    @@Version: 2.0
    @@Condition[list]:
      DOM2
      DOM3
    @@Spec:
      @@@DOM3:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-BBACDC08
    @@Description:
      @@@lang:en
      @@@@: DOM Core module, as defined by the DOM Level 2 Core specification.
  @Feature:
    @@Name: Core
    @@Version: 3.0
    @@Condition[list]:
      DOM3
    @@Spec:
      @@@DOM3:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-BBACDC08
    @@Description:
      @@@lang:en
      @@@@: DOM Core module, as defined by the DOM Level 3 Core specification.

Exception:
  @Name:  DOMException
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-17189187
  @Attr:
     @@Name:  code
     @@Get:
       @@@Type:  unsigned-short
       @@@Description:
         @@@@lang:en
         @@@@@: The error code from the constant value group ExceptionCode.
  @ConstGroup:
     @@Name:  ExceptionCode
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-258A00AF
     @@Description:
       @@@lang:en
       @@@@: Integers indicating the type of error generated.
     @@Const:
        @@@Name:  INDEX_SIZE_ERR
        @@@Type:  unsigned-short
        @@@Value:  1
        @@@Param:
          @@@@QName:
            ManakaiDOMImplementationException:param-name
          @@@@Description:
            @@@@@lang:en
            @@@@@@: Parameter to which inappropriate value specified.
        @@@Description:
          @@@@lang:en
          @@@@@: Index or size is negative, or greater than the allowed value.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@Description:
            @@@@@lang:en
            @@@@@@: 
              Index or size specified as parameter%t (
                name => {<Q:MDOM_EXCEPTION:param-name>},
                prefix => { "}, suffix => {"}); is negative, or 
              greater than the allowed value.
     @@Const:
        @@@Name:  DOMSTRING_SIZE_ERR
        @@@Type:  unsigned-short
        @@@Value:  2
        @@@Description:
          @@@@lang:en
          @@@@@: The specified range of text does not fit into a DOMString.
     @@Const:
        @@@Name:  HIERARCHY_REQUEST_ERR
        @@@Type:  unsigned-short
        @@@Value:  3
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to insert a node somewhere it does not belong.
     @@Const:
        @@@Name:  WRONG_DOCUMENT_ERR
        @@@Type:  unsigned-short
        @@@Value:  4
        @@@Description:
          @@@@lang:en
          @@@@@:
            A node is used in a different document than the one
            that created it.
     @@Const:
        @@@Name:  INVALID_CHARACTER_ERR
        @@@Type:  unsigned-short
        @@@Value:  5
        @@@Description:
          @@@@lang:en
          @@@@@: An invalid or illegal character is specified.
     @@Const:
        @@@Name:  NO_DATA_ALLOWED_ERR
        @@@Type:  unsigned-short
        @@@Value:  6
        @@@Description:
          @@@@lang:en
          @@@@@: Data is specified for a node that does not support data.
     @@Const:
        @@@Name:  NO_MODIFICATION_ALLOWED_ERR
        @@@Type:  unsigned-short
        @@@Value:  7
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to modify an object where 
            modifications are not allowed. 
     @@Const:
        @@@Name:  NOT_FOUND_ERR
        @@@Type:  unsigned-short
        @@@Value:  8
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to refer a node in a context where 
            it does not exist.
     @@Const:
        @@@Name:  NOT_SUPPORTED_ERR
        @@@Type:  unsigned-short
        @@@Value:  9
        @@@Param:
          @@@@QName:
            MDOM_EXCEPTION:if
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The interface name.
        @@@Param:
          @@@@QName:
            MDOM_EXCEPTION:method
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The method name.
        @@@Param:
          @@@@QName:
            MDOM_EXCEPTION:attr
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The attribute name.
        @@@Param:
          @@@@QName:
            MDOM_EXCEPTION:on
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@: Type of the attribute procedure.
          @@@@InCase:
            @@@@@Value: get
            @@@@@Description:
              @@@@@@lang:en
              @@@@@@@: On getting.
          @@@@InCase:
            @@@@@Value: set
            @@@@@Description:
              @@@@@@lang:en
              @@@@@@@: On setting.
        @@@Description:
          @@@@lang:en
          @@@@@:
            The implementation does not support the type of object requested.
     @@Const:
        @@@Name:  INUSE_ATTRIBUTE_ERR
        @@@Type:  unsigned-short
        @@@Value:  10
        @@@Description:
          @@@@lang:en
          @@@@@: 
            An attempt is made to add an attribute that is already inuse 
            elsewhere.
     @@Const:
        @@@Name:  INVALID_STATE_ERR
        @@@Type:  unsigned-short
        @@@Value:  11
        @@@Level[list]:  2
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to use an object that is not (or no longer) 
            usable.
     @@Const:
        @@@Name:  SYNTAX_ERR
        @@@Type:  unsigned-short
        @@@Value:  12
        @@@Level[list]:  2
        @@@Description:
          @@@@lang:en
          @@@@@: An invalid or illegal string is specified.
     @@Const:
        @@@Name:  INVALID_MODIFICATION_ERR
        @@@Type:  unsigned-short
        @@@Value:  13
        @@@Level[list]:  2
        @@@Description:
          @@@@lang:en
          @@@@@: An attempt is made to modify the type of underlying object.
     @@Const:
        @@@Name:  NAMESPACE_ERR
        @@@Type:  unsigned-short
        @@@Value:  14
        @@@Level[list]:  2
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to create or change an object in 
            a way that is incorrect with regard to namespaces.
     @@Const:
        @@@Name:  INVALID_ACCESS_ERR
        @@@Type:  unsigned-short
        @@@Value:  15
        @@@Level[list]:  2
        @@@Description:
          @@@@lang:en
          @@@@@:
            A parameter or an operation is not supported by the 
            underlying object.
     @@Const:
        @@@Name:  VALIDATION_ERR
        @@@Type:  unsigned-short
        @@@Value:  16
        @@@Level[list]:  3
        @@@Description:
          @@@@lang:en
          @@@@@:
            An attempt is made to modify an object where the modification 
            would make the Node invalid with respect to partial validity.

     @@Const:
        @@@Name:  TYPE_MISMATCH_ERR
        @@@Type:  unsigned-short
        @@@Value:  17
        @@@Level[list]:  3
        @@@Description:
          @@@@lang:en
          @@@@@:
            The type of an object is incompatible with the expected 
            type of the parameter associated to the object.

IF:
  @Name:  DOMStringList
  @Level[list]:  3
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMStringList
  @Description:
    @@lang:en
    @@@:
      An ordered collection of "DOMString" values.
  @ImplNote:
    @@lang:en
    @@@:
      How the collection is implemented is not defined by the 
      specification.
  @Method:
     @@Name:  item
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMStringList-item
     @@Description:
       @@@lang:en
       @@@@: Return a "DOMString" in the collection.
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: Index into the collection.
        @@@InCase:
          @@@@Value: 0
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The first item.
        @@@InCase: 
          @@@@Label: "length" - 1
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The last item.
     @@Return:
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            The "DOMString" at the "index"th position in the collection.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The specified "index" is negative or greater than or equal to 
              the number of "DOMString"s in the list.
        @@@Def:
          if (not defined $index or
              $index < 0 or
              $index > $#$self) {
            $r = null;
          } else {
            __INT__;
          }
        @@@IntDef:
          $r = $self->[$index];
  @Attr:
     @@Name:  length
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMStringList-length
     @@Description:
       @@@lang:en
       @@@@: 
         The number of "DOMString"s in the list.
     @@Get:
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: The number of "DOMString"s in the list.
        @@@Def:
          $r = @$self;
  @Method:
     @@Name:  contains
     @@Spec:
       @@@DOM3: 
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMStringList-contains
     @@Description:
       @@@lang:en
       @@@@: Test if a string is part of the list.
     @@Param:
        @@@Name:  str
        @@@Type:  DOMString
        @@@Description:
          @@@@labg:en
          @@@@@: The string to look for.
     @@Return:
        @@@Type:  boolean
        @@@Description:
          @@@@lang:en
          @@@@@: Whether the string is part of the list.
        @@@InCase:
          @@@@Value: true
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The string has been found.
        @@@InCase:
          @@@@Value: false
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The string has not been found.
        @@@Def:
          CHK: {
            __DEEP{
              for (@$self) {
                if ($str eq $_) {
                  $r = true;
                  last CHK;
                }
              }
            }__;
          }

IF:
  @Name:  NameList
  @Level[list]:  3
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList
  @Description:
    @@lang:en
    @@@:
      An ordered collection of parallel pairs of name and namespace values.
  @ImplNote:
    @@lang:en
    @@@: How this collection is implemented is not defined by the specification.
  @Method:
     @@Name:  getName
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList-getName
     @@Description:
        @@@lang:en
        @@@@: Return the "index"th name item in the collection.
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: The index into the collection.
        @@@InCase:
          @@@@Value: 0
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The first item.
        @@@InCase:
          @@@@Label: "length" - 1
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The last item.
     @@Return:
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The name at the "index"th position in the "NameList".
        @@@InCase:
          @@@@Value: null
          @@@@@:
            There is no name for the specified "index" or
            the "index" is out of range.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
          if (not defined $index or
              $index < 0 or
              $index > $#$self) {
            $r = null;
          } else {
            __INT__;
          }
        @@@IntDef:
          @@@@Type:
            lang:Perl
          @@@@@:
          $r = $self->[$index]->{name};
  @Method:
     @@Name:  getNamespaceURI
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList-getNamespaceURI
     @@Description:
       @@@lang:en
       @@@@: Return the "index"th namespace URI item in the collection.
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: The index into the collection.
        @@@InCase:
          @@@@Value: 0
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The first item.
        @@@InCase:
          @@@@Label: "length" - 1
          @@@@Description: 
            @@@@@lang:en
            @@@@@@: The last item.
     @@Return:
        @@@Type:
          ManakaiDOM:ManakaiDOMNamespaceURI
        @@@Description:
          @@@@lang:en
          @@@@@: The namespace URI at the "index" position in the "NameList".
        @@@InCase:
          @@@@Value: null
          @@@@@:
            There is no namespace URI for the specified "index" or 
            if the "index" is out of range.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
          if (not defined $index or
              $index < 0 or
              $index > $#$self) {
            $r = null;
          } else {
            __INT__;
          }
        @@@IntDef:
          @@@@Type:
            lang:Perl
          @@@@@:
          $r = $self->[$index]->{nsURI};
  @Attr:
     @@Name:  length
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList-length
     @@Description:
       @@@lang:en
       @@@@: 
         The number of name and namespace URI pairs in the list.
     @@Get:
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: The number of pairs.
        @@@Def:
          $r = @$self;
  @Method:
     @@Name:  contains
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList-contains
     @@Description:
       @@@lang:en
       @@@@: Test if a name is part of the collection.
     @@Param:
        @@@Name:  str
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The name to look for.
     @@Return:
        @@@Type:  boolean
        @@@InCase:
          @@@@Value: true
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The name has been found.
        @@@InCase:
          @@@@Value: false
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The name has not been found.
        @@@Def:
          $r = false;
          CHK: {
            __DEEP{
              for (@$self) {
                if ($str eq $_->{name}) {
                  $r = true;
                  last CHK;
                }
              }
            }__;
          }
  @Method:
     @@Name:  containsNS
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#NameList-containsNS
     @@Description:
       @@@lang:en
       @@@@: 
         Test if the pair of namespace URI and name is part of the collection.
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:
          ManakaiDOM:ManakaiDOMNamespaceURI
        @@@Description:
          @@@@lang:en
          @@@@@: The namespace URI to look for.
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The name to look for.
     @@Return:
        @@@Type:  boolean
        @@@InCase:
          @@@@Value: true
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The pair has been found.
        @@@InCase:
          @@@@Value: false
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The pair has not been found.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
          $r = false;
          CHK: {
            __DEEP{
              for (@$self) {
                if ($namespaceURI eq $_->{nsURI} and
                    $name eq $_->{name}) {
                  $r = true;
                  last CHK;
                }
              }
            }__;
          }

IF:
  @Name:  DOMImplementationList
  @Level[list]:  3
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationList
  @Description:
    @@lang:en
    @@@: 
      An ordered collection of DOM implementations.
  @ImplNote:
    @@lang:en
    @@@:
      How this collection is implemented is not specified by the specification.
  @Method:
     @@Name:  item
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationList-item
     @@Description:
       @@@lang:en
       @@@@: Return the "index"th item in the collection.
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
        @@@Description:
          @@@@lang:en
          @@@@@: The index into the collection.
        @@@InCase:
          @@@@Value: 0
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The first item.
        @@@InCase:
          @@@@Label: "length" - 1
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The last item.
     @@Return:
        @@@Type:  DOMImplementation
        @@@Description:
          @@@@lang:en
          @@@@@: 
            The "DOMImplementation" at the "index"th position in 
            the collection.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              There is no "DOMImplementation" for the specified "index", 
              or the "index" is out of range.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
          if (not defined $index or
              $index < 0 or
              $index > $#$self) {
            $r = null;
          } else {
            __INT__;
          }
        @@@IntDef:
          @@@@Type:
            lang:Perl
          @@@@@:
          $r = $self->[$index];
  @Attr:
     @@Name:  length
     @@Description:
       @@@lang:en
       @@@@: The number of "DOMImplementation"s in the list.
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationList-length
     @@Get:
        @@@Type:  unsigned-long
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
            $r = @$self;
  @IntMethod:
    @@Name: new
    @@Description:
      @@@lang:en
      @@@@: Construct a new instance of the "DOMImplementationList".
    @@Return:
      @@@Type: DOMImplementationList
      @@@Description:
        @@@@lang:en
        @@@@@: The new instance constructed.
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = bless [], ref $self ? ref $self : $self;
  @IntMethod:
    @@Name: add
    @@Description:
      @@@lang: en
      @@@@: Add one or more "DOMImplementation"s to the list.
    @@Param:
      @@@Name: list
      @@@Type: DOMImplementationList
      @@@Description:
        @@@@lang:en
        @@@@@:
          A list of "DOMImplementation"s to be added.
      @@@InCase:
        @@@@Label:
          One or more "DOMImplementation"s and/or "DOMImplementationList"s
        @@@@Description:
           @@@@@lang:en
           @@@@@@:
             "DOMImplementation"s and/or lists of them to be added.
    @@Return:
      @@@Exception:
        @@@@Type:
          ManakaiDOM:ManakaiDOMImplementationException
        @@@@Name: MDOM_TYPE_MISMATCH_ERR
        @@@@Description:
          @@@@@lang:en
          @@@@@@:
            The parameter specified is neither a DOMImplementation object 
            or a DOMImplementationList object.
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@auto-argument: 0
        @@@@@:
          my $self = shift;
          for (@_) {
            if ($_->isa ("__CLASS{DOMImplementationList}__")) {
              push @$self, @$_;
            } elsif ($_->isa ("__CLASS{DOMImplementation}__")) {
              push @$self, $_;
            } elsif ($_->isa ("__IF{DOMImplementationList}__")) {
              __DEEP{
                my $len = $_->length;
                for (my $i = 0; $i < $len; $i++) {
                  push @$self, $_->item ($i);
                }
              }__;
            } elsif ($_->isa ("__IF{DOMImplementation}__")) {
              push @$self, $_;
            } else {
              __EXCEPTION{ManakaiDOMImplementationException.
                          MDOM_TYPE_MISMATCH_ERR:
                <Q:ManakaiDOMImplementationException:param-name> => 'list',
                <Q:ManakaiDOMImplementationException:class> => ref $_,
              }__;
            }
          }

IF:
  @Name:  DOMImplementationSource
  @Level[list]:  3
  @Description:
    @@lang:en
    @@@:
      This interface provides access to DOM implementations available.
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMImplementationSource
  @Method:
     @@Name:  getDOMImplementation
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-getDOMImpl
     @@Description:
        @@@lang:en
        @@@@: 
          Return the first DOM implementation that supports the specified 
          features and versions.
     @@Param:
        @@@Name:  features
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            A string that specifies which features and versions are 
            required.
     @@Return:
        @@@Type:  DOMImplementation
        @@@Description:
          @@@@lang:en
          @@@@@: 
            The first DOM implementation that support the desired 
            features and versions.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@: 
              This source has no DOM implementation that supports the 
              desired features and versions.
## TODO: Implement this.
  @Method:
     @@Name:  getDOMImplementationList
     @@Description:
       @@@lang:en
       @@@@:
         Return a list of DOM implementations that support the specified 
         features and versions.
     @@Return:
        @@@Type:  DOMImplementationList
        @@@Description:
          @@@@lang:en
          @@@@@:
            A list of DOM implementations that support the desired 
            features and versions.
## TODO: implement this
     @@Param:
        @@@Name:  features
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            A string that specifies which features and versions are required.

IF:
  @Name:  DOMImplementation
  @Spec:
    @@DOM3:
      http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-102161490
  @Description:
    @@lang:en
    @@@:
      This interface provides a number of methods for performing 
      operations that are independent of any particular instance 
      of the document object model.
  @Require:
    @@Module:
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@use:
          @@@@@@:
            Char::Class::XML
          @@@@@Import[list]:
            InXMLNameChar
            InXMLNameStartChar
            InXMLNCNameChar
            InXMLNCNameStartChar
    @@Condition[list]:
      DOM2
      DOM3
  @Method:
     @@Name:  hasFeature
     @@Spec:
       @@DOM3[list]:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-5CED94D7
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#DOMFeatures
     @@Description:
       @@@lang:en
       @@@@:
         Test if the DOM implementation implements a specific feature 
         and version.
     @@Param:
        @@@Name:  feature
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The name of the feature to test.
        @@@InCase:
          @@@@Value: HTML
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The DOM HTML feature.
              This is one of the allowed values in DOM Level 1 First Edition.
        @@@InCase:
          @@@@Value: XML
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The DOM XML feature.
              This is one of the allowed values in DOM Level 1 First Edition.
        @@@InCase:
          @@@@Label: XML 1.0 Name
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              Only an XML 1.0 Name is allowed in DOM Level 1 Second Edition 
              and DOM Level 2.
        @@@InCase:
          @@@@Label: Reversed Internet domain name
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              DOM Level 1 First Edition and DOM Level 2 specifications 
              says that the feature name defined outside the DOM specifications 
              should use the reversed Internet domain name to avoid 
              possible confliction.
            \
              This recommendation is withdrawn by the Errata of the DOM Level 2 
              Specifications.
        @@@InCase:
          @@@@Label:
            @@@@@lang:en
            @@@@@@:
              The feature name prepended by the PLUS SIGN ("+")
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The specified feature may not be directly castable
              but would be available through the method "getFeature".
     @@Param:
        @@@Name:  version
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            The version number of the feature to test.
        @@@InCase:
          @@@@Value: 1.0
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              DOM Level 1.
              This is the only allowed value in DOM Level 1 and
              one of allowed values in DOM Level 2.
        @@@InCase:
          @@@@Value: 2.0
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              DOM Level 2.
              This is one of allowed values in DOM Level 2.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              No particular version is specified.
              \
              It is implied that this value is allowed in DOM 
              Level 1 and Level 2.  DOM Level 2 Errata and DOM 
              Level 3 explicitly allow this value specified.
        @@@InCase:
          @@@@Value: \
          @@@@Type: DOMString
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              No particular version is specified.
              \
              This value is allowed in DOM Level 2 Errata and 
              DOM Level 3.
     @@Return:
        @@@Type:  boolean
        @@@Description:
          @@@@lang:en
          @@@@@: Whether the feature is implemented or not.
        @@@InCase:
          @@@@Value: true
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The feature is implemented in the specified version.
        @@@InCase:
          @@@@Value: false
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The feature is not implemented.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
## TODO: feature and version checking
            if (defined $version and $version ne '') {
              $r = $__PACKAGE{Global}__::FeatureImplemented{$feature}
                                                           ->{$version} ?
                   true : false;
            } else {
              for (keys %{$__PACKAGE{Global}__::FeatureImplemented{$feature}}) {
                if ($__PACKAGE{Global}__::FeatureImplemented{$feature}->{$_}) {
                  $r = true;
                  last;
                }
              }
            }
  @Method:
     @@Name:  createDocumentType
     @@Description:
       @@@lang:en
       @@@@:
         Create an empty "DocumentType" node.
     @@ImplNote:
       @@@lang:en
       @@@@: 
         HTML-only DOM Level 2 implementations do not need to implement 
         this method.
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The qualified name of the document type to be created.
     @@Param:
        @@@Name:  publicId
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The external subset public identifier.
     @@Param:
        @@@Name:  systemId
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The external subset system identifier.
     @@Level[list]:  2
     @@Return:
        @@@Type:  DocumentType
        @@@Description:
          @@@@lang:en
          @@@@@: A new "DocumentType" node.
        @@@ImplNote:
          @@@@lang:en
          @@@@@: The "ownerDocument" attribute is set to "null".
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: INVALID_CHARACTER_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@: 
              The "qualifiedName" is not an XML name 
              accoding to the XML 1.0 specification.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: NAMESPACE_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The "qualifiedName" is malformed.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: NOT_SUPPORTED_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The DOM implementation does not support the "XML" feature and 
              the language exposed through the "Document" does not support 
              XML Namespaces.
        @@@Exception:
          @@@@Type: ManakaiDOMImplementationException
          @@@@Name: PARAM_NULL_POINTER
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The "qualifiedName" is the "null" value.
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
            __CODE{CheckNull: s => qualifiedName}__;
            __CODE{CheckQName: qname => qualifiedName}__; # [DOM 2,3]
            ## If namespace not supported: # [DOM 3]
            #__EXCEPTION{
            #  DOMException.NOT_SUPPORTED_ERR:
            #    <Q:MDOM_EXCEPTION:subtype> 
            #       => <Q:MDOM_EXCEPTION:NS_NOT_SUPPORTED>,
            #}__;
            my ($prefix, $lname);
            if (($lname = $qualifiedName) =~ s/^([^:]+)://) {
              $prefix = $1;
            }
            $r = $self->__CLASS{DocumentType}__->__INT{new}__;
            my $node = $r->{<Q:TreeCore:node>};
            $node->{<Q:infoset:prefix>} = $prefix;
            $node->{<Q:infoset:localName>} = $lname;
            $node->{<Q:infoset:publicIdentifier>} = $publicId;
            $node->{<Q:infoset:systemIdentifier>} = $systemId;
  @Method:
     @@Name:  createDocument
     @@Description:
       @@@lang:en
       @@@@:
         Create a "Document" object of the specified type with its 
         document element.
     @@ImplNote:
       @@@lang:en
       @@@@: 
         HTML-only DOM Level 2 implementations do not need to implement 
         this method.
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:
          ManakaiDOM:ManakaiDOMNamespaceURI
        @@@Description:
          @@@@lang:en
          @@@@@: The namespace URI of the document element to create.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The null namespace name.
        @@@InCase:
          @@@@Value: \
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              Considered as a namespace URI in DOM Level 2 or 
              treated as the "null" value in DOM Level 3.
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@: The qualified name of the document element to create.
        @@@InCase:
          @@@@Value: null
          @@@@Description:
            @@@@@lang:en
            @@@@@@: Document element is not created.
     @@Param:
        @@@Name:  doctype
        @@@Type:  DocumentType
        @@@Description:
          @@@@lang:en
          @@@@@: The type of document to create.
        @@@InCase:
          @@@@Value: null
        @@@ImplNote:
          @@@@lang:en
          @@@@@:
            "doctype"."ownerDocument" is set to the document being 
            created unless "doctype" is "null".
     @@Level[list]:
       2
       3
     @@Return:
        @@@Type:  Document
        @@@Description:
          @@@@lang:en
          @@@@@:
            A new Document object.
          \
            Note that the object returned may be a specialized "Document" 
            object based on the "doctype" given.  For example. it might 
            implement the "HTMLDocument" interface.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: INVALID_CHARACTER_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The specified qualified name is not an XML name 
              accoding to the XML 1.0 specification.
          @@@@ImplNote:
            @@@@@lang:en
            @@@@@@:
              DOM Level 3 specification defines to rely the XML 1.0 
              specification.  DOM Level 2 specification does not 
              explicitly defines but the definition for "INVALID_CHARACTER_ERR"
              refers the XML 1.0 specification.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: NAMESPACE_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              Either the "qualifiedName" is malformed, the "qualifiedName" 
              has a prefix and the "namespaceURI" is "null", the 
              "qualifiedName" is "null" and the "namespaceURI" is 
              different from "null", the "qualifiedName" has 
              a prefix that is "xml" and the "namespaceURI" is 
              different from "http://www.w3.org/XML/1998/namespace" or
              the DOM implementation does not support the "XML" feature 
              but a non-null "namespaceURI" is provided.
            \
              In addition, if the "qualifiedName" has a prefix that is 
              "xmlns" and the "namespaceURI" is different from 
              "http://www.w3.org/2000/xmlns/", if the "namespaceURI" 
              is "http://www.w3.org/XML/1998/namespace" and the 
              "qualifiedName" has a prefix is different from "xml" or 
              if the "namespaceURI" is "http://www.w3.org/2000/xmlns/" 
              and the "qualifiedName" has a prefix is different from "xmlns",
              this DOM implementation raises this exception.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: WRONG_DOCUMENT_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The "doctype" has already been used with a different 
              document or was created from a different implementation.
        @@@Exception:
          @@@@Type: DOMException
          @@@@Name: NOT_SUPPORTED_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              The DOM implementation does not support the "XML" feature 
              and the language exposed through the "Document" does 
              not support XML Namespaces.
        @@@Exception:
          @@@@Type: ManakaiDOMImplementationException
          @@@@Name: MDOM_TYPE_MISMATCH_ERR
          @@@@Description:
            @@@@@lang:en
            @@@@@@: 
              The object specified to the "doctype" parameter is not a 
              "DocumentType".
        @@@Def:
          @@@@Type:
            lang:Perl
          @@@@@:
            my ($prefix, $lname);
            if (defined $qualifiedName) {     
              __CODE{CheckQName: qname => qualifiedName}__; # [DOM 2,3]
              if (($lname = $qualifiedName) =~ s/^([^:]+)://) {
                $prefix = $1;
              }
              if (defined $namespaceURI) {    # ($uri, $qname, $doctype)
                ## If namespace not supported: # [DOM 3]
                #__EXCEPTION{
                ##  DOMException.NAMESPACE_ERR:
                #  DOMException.NOT_SUPPORTED_ERR:
                #    <Q:MDOM_EXCEPTION:subtype> 
                #       => <Q:MDOM_EXCEPTION:NS_NOT_SUPPORTED>,
                #}__;
              } else {                        # (null, $qname, $doctype)
                if ($prefix) {
                  __EXCEPTION{
                    DOMException.NAMESPACE_ERR:
                      <Q:MDOM_EXCEPTION:subtype>
                         => <Q:MDOM_EXCEPTION:NS_PREFIX_WITH_NULL_URI>,
                      <Q:infoset:prefix> => $prefix,
                  }__;                        # [DOM 2,3]
                }
              }
            } elsif (defined $namespaceURI) { # ($uri, null, $doctype)
              __EXCEPTION{
                DOMException.NAMESPACE_ERR:
                  <Q:MDOM_EXCEPTION:subtype>
                     => <Q:MDOM_EXCEPTION:NS_NULL_QNAME_NON_NULL_URI>,
                  <Q:infoset:namespaceName> => $namespaceURI,
              }__;                            # [DOM 3]
            }
            if (not $prefix) {
              if ($prefix eq 'xml' and 
                  (not $namespaceURI or
                   $namespaceURI ne q<http://www.w3.org/XML/1998/namespace>)) {
                __EXCEPTION{
                  DOMException.NAMESPACE_ERR:
                    <Q:MDOM_EXCEPTION:subtype>
                       => <Q:MDOM_EXCEPTION:NS_XML_WITH_OTHER_URI>,
                    <Q:infoset:namespaceName> => $namespaceURI,
                }__;                          # [DOM 2,3]
              } elsif ($prefix eq 'xmlns' and
                  (not $namespaceURI or
                   $namespaceURI ne q<http://www.w3.org/2000/xmlns/>)) {
                __EXCEPTION{
                  DOMException.NAMESPACE_ERR:
                    <Q:MDOM_EXCEPTION:subtype>
                       => <Q:MDOM_EXCEPTION:NS_XMLNS_WITH_OTHER_URI>,
                    <Q:infoset:namespaceName> => $namespaceURI,
                }__;                          # DOM doesn't specify this
              }
            }
            if (defined $namespaceURI) {
              if ($namespaceURI eq q<http://www.w3.org/XML/1998/namespace> and
                  (not $prefix or $prefix ne 'xml')) {
                __EXCEPTION{
                  DOMException.NAMESPACE_ERR:
                    <Q:MDOM_EXCEPTION:subtype>
                       => <Q:MDOM_EXCEPTION:NS_XML_URI_WITH_OTHER_PREFIX>,
                    <Q:infoset:prefix> => $prefix,
                }__;                          # DOM doesn't specify this
              } elsif ($namespaceURI eq q<http://www.w3.org/2000/xmlns/> and
                  (not $prefix or $prefix ne 'xmlns')) {
                __EXCEPTION{
                  DOMException.NAMESPACE_ERR:
                    <Q:MDOM_EXCEPTION:subtype>
                       => <Q:MDOM_EXCEPTION:NS_XMLNS_URI_WITH_OTHER_PREFIX>,
                    <Q:infoset:prefix> => $prefix,
                }__;                          # DOM doesn't specify this
              }
            }
            $r = $self->__CLASS{Document}__::__INT{newByDocumentType}__
                                                                ($doctype);
            my $node = $r->{<Q:TreeCore:node>};
            $node->{<Q:DocTree:documentID>} = __CODE{UniqueID}__;
            if ($doctype) {
              if (not $doctype->isa ('__IF{DocumentType}__')) {
                __EXCEPTION{
                  ManakaiDOMImplementationException.MDOM_TYPE_MISMATCH_ERR:
                    <Q:MDOM_EXCEPTION:param-name> => q<doctype>,
                    <Q:MDOM_EXCEPTION:class> => ref $doctype,
                }__;
              }
              my $doctypeNode = $doctype->{<Q:TreeCore:node>};
              if ($node->{<Q:TreeCore:treeID>} ne
                  $doctypeNode->{<Q:TreeCore:treeID>} or
                  $doctypeNode->{<Q:DocTree:documentID>}) {
                __EXCEPTION{
                  DOMException.WRONG_DOCUMENT_ERR:
                }__;                          # [DOM 2,3]
              }
              $doctypeNode->{<Q:DocTree:documentID>}
                                    = $node->{<Q:TreeCore:node>};
              $doctypeNode->{<Q:DOMCore:ownerDocument>} = $node;
              $doctypeNode->{<Q:infoset:parent>} = $node;
              push @{$node->{<Q:infoset:children>}}, $doctypeNode;
            }
            if ($lname) {
              my $docEl = $r->__CLASS{Node}__::__INT{new}__;
              my $docNode = $docEl->{<Q:TreeCore:node>};
              $docNode->{<Q:DocTree:nodeType>} = <Q:infoset:Element>;
              $docNode->{<Q:infoset:prefix>} = $prefix || null;
              $docNode->{<Q:infoset:namespaceName>} = $namespaceURI;
              $docNode->{<Q:infoset:localName>} = $lname;
              $docNode->{<Q:infoset:parent>} = $node;
              push @{$node->{<Q:infoset:children>}}, $docNode;
            }
        
  @Method:
     @@Name:  getFeature
     @@Description:
        @@@lang:en
        @@@@: 
          Return a specialized object that implements the specialized 
          APIs of the specified feature and version.
     @@Param:
        @@@Name:  feature
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            The name of the feature requested.
        @@@InCase: 
          @@@@Label: 
            The feature name prepended by the PLUS SIGN ("+")
          @@@@Description:
            @@@@@lang:en
            @@@@@@: The PLUS SIGN is ignored.
     @@Param:
        @@@Name:  version
        @@@Type:  DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            The version number of the feature to test.
     @@Level[list]:  3
     @@Return:
        @@@Type:  DOMObject
        @@@Description:
          @@@@lang:en
          @@@@@:
            An object that implements the specialized APIs of the 
            specified feature and version.  That might or might not 
            implements the "DOMImplementation" interface.
        @@@InCase:
          @@@@Type: DOMImplementation
          @@@@Description:
            @@@@@lang:en
            @@@@@@:
              An object that implements both the specialized APIs 
              and the "DOMImplementation" interface.
          @@@@ImplNote:
            @@@@@lang:en
            @@@@@@:
              This kind of object must delegate to the primary core 
              "DOMImplementation" and not return results inconsistent 
              with the primary core "DOMImplementation" such as 
              "hasFeature", "getFeature", etc.
        @@@InCase:
          @@@@Value: null
          @@@@@: 
            There is no object that implements interfaces associated 
            with the feature and version.
## TODO: implement this

IF:
  @Name:  Node
  @ConstGroup:
     @@Name:  NodeType
     @@Const:
        @@@Name:  ELEMENT_NODE
        @@@Type:  unsigned-short
        @@@Value:  1
     @@Const:
        @@@Name:  ATTRIBUTE_NODE
        @@@Type:  unsigned-short
        @@@Value:  2
     @@Const:
        @@@Name:  TEXT_NODE
        @@@Type:  unsigned-short
        @@@Value:  3
     @@Const:
        @@@Name:  CDATA_SECTION_NODE
        @@@Type:  unsigned-short
        @@@Value:  4
     @@Const:
        @@@Name:  ENTITY_REFERENCE_NODE
        @@@Type:  unsigned-short
        @@@Value:  5
     @@Const:
        @@@Name:  ENTITY_NODE
        @@@Type:  unsigned-short
        @@@Value:  6
     @@Const:
        @@@Name:  PROCESSING_INSTRUCTION_NODE
        @@@Type:  unsigned-short
        @@@Value:  7
     @@Const:
        @@@Name:  COMMENT_NODE
        @@@Type:  unsigned-short
        @@@Value:  8
     @@Const:
        @@@Name:  DOCUMENT_NODE
        @@@Type:  unsigned-short
        @@@Value:  9
     @@Const:
        @@@Name:  DOCUMENT_TYPE_NODE
        @@@Type:  unsigned-short
        @@@Value:  10
     @@Const:
        @@@Name:  DOCUMENT_FRAGMENT_NODE
        @@@Type:  unsigned-short
        @@@Value:  11
     @@Const:
        @@@Name:  NOTATION_NODE
        @@@Type:  unsigned-short
        @@@Value:  12
  @Attr:
     @@Name:  nodeName
     @@Get:
        @@@Type:  DOMString
  @Attr:
     @@Name:  nodeValue
     @@Get:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
  @Attr:
     @@Name:  nodeType
     @@Get:
        @@@Type:  unsigned-short
  @Attr:
     @@Name:  parentNode
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  childNodes
     @@Get:
        @@@Type:  NodeList
  @Attr:
     @@Name:  firstChild
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  lastChild
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  previousSibling
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  nextSibling
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  attributes
     @@Get:
        @@@Type:  NamedNodeMap
  @Attr:
     @@Name:  ownerDocument
     @@Get:
        @@@Type:  Document
     @@ModifiedLevel[list]:  2
  @Method:
     @@Name:  insertBefore
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  newChild
        @@@Type:  Node
     @@Param:
        @@@Name:  refChild
        @@@Type:  Node
     @@ModifiedLevel[list]:  3
  @Method:
     @@Name:  replaceChild
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  newChild
        @@@Type:  Node
     @@Param:
        @@@Name:  oldChild
        @@@Type:  Node
     @@ModifiedLevel[list]:  3
  @Method:
     @@Name:  removeChild
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  oldChild
        @@@Type:  Node
     @@ModifiedLevel[list]:  3
  @Method:
     @@Name:  appendChild
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  newChild
        @@@Type:  Node
     @@ModifiedLevel[list]:  3
  @Method:
     @@Name:  hasChildNodes
     @@Return:
        @@@Type:  boolean
  @Method:
     @@Name:  cloneNode
     @@Return:
        @@@Type:  Node
     @@Param:
        @@@Name:  deep
        @@@Type:  boolean
  @Method:
     @@Name:  normalize
     @@Level[list]:
       1
       2
       3
  @Method:
     @@Name:  isSupported
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  feature
        @@@Type:  DOMString
     @@Param:
        @@@Name:  version
        @@@Type:  DOMString
     @@Level[list]:  2
  @Attr:
     @@Name:  namespaceURI
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  2
  @Attr:
     @@Name:  prefix
     @@Get:
        @@@Type:  DOMString
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Level[list]:  2
  @Attr:
     @@Name:  localName
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  hasAttributes
     @@Return:
        @@@Type:  boolean
     @@Level[list]:  2
  @Attr:
     @@Name:  baseURI
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  3
     @@Spec:
       @@@DOM3:
         http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#baseURIs-Considerations
  @ConstGroup:
     @@Name:  DocumentPosition
     @@Const:
        @@@Name:  DOCUMENT_POSITION_DISCONNECTED
        @@@Type:  unsigned-short
        @@@Value:  0x01
     @@Const:
        @@@Name:  DOCUMENT_POSITION_PRECEDING
        @@@Type:  unsigned-short
        @@@Value:  0x02
     @@Const:
        @@@Name:  DOCUMENT_POSITION_FOLLOWING
        @@@Type:  unsigned-short
        @@@Value:  0x04
     @@Const:
        @@@Name:  DOCUMENT_POSITION_CONTAINS
        @@@Type:  unsigned-short
        @@@Value:  0x08
     @@Const:
        @@@Name:  DOCUMENT_POSITION_CONTAINED_BY
        @@@Type:  unsigned-short
        @@@Value:  0x10
     @@Const:
        @@@Name:  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC
        @@@Type:  unsigned-short
        @@@Value:  0x20
  @Method:
     @@Name:  compareDocumentPosition
     @@Return:
        @@@Type:  unsigned-short
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  other
        @@@Type:  Node
     @@Level[list]:  3
  @Attr:
     @@Name:  textContent
     @@Get:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  @Method:
     @@Name:  isSameNode
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  other
        @@@Type:  Node
     @@Level[list]:  3
  @Method:
     @@Name:  lookupPrefix
     @@Return:
        @@@Type:  DOMString
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  isDefaultNamespace
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  lookupNamespaceURI
     @@Return:
        @@@Type:  DOMString
     @@Param:
        @@@Name:  prefix
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  isEqualNode
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  arg
        @@@Type:  Node
     @@Level[list]:  3
  @Method:
     @@Name:  getFeature
     @@Return:
        @@@Type:  DOMObject
     @@Param:
        @@@Name:  feature
        @@@Type:  DOMString
     @@Param:
        @@@Name:  version
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  setUserData
     @@Return:
        @@@Type:  DOMUserData
     @@Param:
        @@@Name:  key
        @@@Type:  DOMString
     @@Param:
        @@@Name:  data
        @@@Type:  DOMUserData
     @@Param:
        @@@Name:  handler
        @@@Type:  UserDataHandler
     @@Level[list]:  3
  @Method:
     @@Name:  getUserData
     @@Return:
        @@@Type:  DOMUserData
     @@Param:
        @@@Name:  key
        @@@Type:  DOMString
     @@Level[list]:  3
IF:
  @Name:  NodeList
  @Method:
     @@Name:  item
     @@Return:
        @@@Type:  Node
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
  @Attr:
     @@Name:  length
     @@Get:
        @@@Type:  unsigned-long
IF:
  @Name:  NamedNodeMap
  @Method:
     @@Name:  getNamedItem
     @@Return:
        @@@Type:  Node
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  setNamedItem
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  arg
        @@@Type:  Node
  @Method:
     @@Name:  removeNamedItem
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  item
     @@Return:
        @@@Type:  Node
     @@Param:
        @@@Name:  index
        @@@Type:  unsigned-long
  @Attr:
     @@Name:  length
     @@Get:
        @@@Type:  unsigned-long
  @Method:
     @@Name:  getNamedItemNS
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  setNamedItemNS
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  arg
        @@@Type:  Node
     @@Level[list]:  2
  @Method:
     @@Name:  removeNamedItemNS
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
IF:
  @Name:  CharacterData
  @ISA: Node
  @Attr:
     @@Name:  data
     @@Get:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
  @Attr:
     @@Name:  length
     @@Get:
        @@@Type:  unsigned-long
  @Method:
     @@Name:  substringData
     @@Return:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  offset
        @@@Type:  unsigned-long
     @@Param:
        @@@Name:  count
        @@@Type:  unsigned-long
  @Method:
     @@Name:  appendData
     @@Param:
        @@@Name:  arg
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  insertData
     @@Param:
        @@@Name:  offset
        @@@Type:  unsigned-long
     @@Param:
        @@@Name:  arg
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  deleteData
     @@Param:
        @@@Name:  offset
        @@@Type:  unsigned-long
     @@Param:
        @@@Name:  count
        @@@Type:  unsigned-long
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  replaceData
     @@Param:
        @@@Name:  offset
        @@@Type:  unsigned-long
     @@Param:
        @@@Name:  count
        @@@Type:  unsigned-long
     @@Param:
        @@@Name:  arg
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
IF:
  @Name:  Attr
  @ISA:  Node
  @Attr:
     @@Name:  name
     @@Get:
        @@@Type:  DOMString
  @Attr:
     @@Name:  specified
     @@Get:
        @@@Type:  boolean
  @Attr:
     @@Name:  value
     @@Get:
        @@@Type:  DOMString
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
  @Attr:
     @@Name:  ownerElement
     @@Get:
        @@@Type:  Element
     @@Level[list]:  2
  @Attr:
     @@Name:  schemaTypeInfo
     @@Get:
        @@@Type:  TypeInfo
     @@Level[list]:  3
  @Attr:
     @@Name:  isId
     @@Get:
        @@@Type:  boolean
     @@Level[list]:  3
  
  @ReAttr:
    @@Name: attributes
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-84CF096
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: NamedNodeMap
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;

IF:
  @Name:  Element
  @ISA:  Node
  @Attr:
     @@Name:  tagName
     @@Get:
        @@@Type:  DOMString
  @Method:
     @@Name:  getAttribute
     @@Return:
        @@@Type:  DOMString
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  setAttribute
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Param:
        @@@Name:  value
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  removeAttribute
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  getAttributeNode
     @@Return:
        @@@Type:  Attr
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  setAttributeNode
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  newAttr
        @@@Type:  Attr
  @Method:
     @@Name:  removeAttributeNode
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  oldAttr
        @@@Type:  Attr
  @Method:
     @@Name:  getElementsByTagName
     @@Return:
        @@@Type:  NodeList
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  getAttributeNS
     @@Return:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  setAttributeNS
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
     @@Param:
        @@@Name:  value
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
     @@Level[list]:  2
  @Method:
     @@Name:  removeAttributeNS
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Return:
        @@@Exception[list]:  DOMException
     @@Level[list]:  2
  @Method:
     @@Name:  getAttributeNodeNS
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  setAttributeNodeNS
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  newAttr
        @@@Type:  Attr
     @@Level[list]:  2
  @Method:
     @@Name:  getElementsByTagNameNS
     @@Return:
        @@@Type:  NodeList
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  hasAttribute
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  hasAttributeNS
     @@Return:
        @@@Type:  boolean
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Attr:
     @@Name:  schemaTypeInfo
     @@Get:
        @@@Type:  TypeInfo
     @@Level[list]:  3
  @Method:
     @@Name:  setIdAttribute
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Param:
        @@@Name:  isId
        @@@Type:  boolean
     @@Return:
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  @Method:
     @@Name:  setIdAttributeNS
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Param:
        @@@Name:  isId
        @@@Type:  boolean
     @@Return:
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  @Method:
     @@Name:  setIdAttributeNode
     @@Param:
        @@@Name:  idAttr
        @@@Type:  Attr
     @@Param:
        @@@Name:  isId
        @@@Type:  boolean
     @@Return:
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  
  @ReAttr:
    @@Name: nodeValue
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-F68D080
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
    @@Set:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          __WARNING{ManakaiDOMImplementationException.ATTR_SET_NO_EFFECT}__;

IF:
  @Name:  Text
  @ISA:  CharacterData
  @Method:
     @@Name:  splitText
     @@Return:
        @@@Type:  Text
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  offset
        @@@Type:  unsigned-long
  @Attr:
     @@Name:  isElementContentWhitespace
     @@Get:
        @@@Type:  boolean
     @@Level[list]:  3
  @Attr:
     @@Name:  wholeText
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  replaceWholeText
     @@Return:
        @@@Type:  Text
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  content
        @@@Type:  DOMString
     @@Level[list]:  3
  
  @ReAttr:
    @@Name: attributes
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-84CF096
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: NamedNodeMap
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
  @ReAttr:
    @@Name: nodeName
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-F68D095
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: DOMString
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = q<#text>;

IF:
  @Name:  Comment
  @ISA:  CharacterData
  
  @ReAttr:
    @@Name: attributes
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-84CF096
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: NamedNodeMap
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
  @ReAttr:
    @@Name: nodeName
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-F68D095
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: DOMString
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = q<#comment>;

IF:
  @Name:  TypeInfo
  @Level[list]:  3
  @Attr:
     @@Name:  typeName
     @@Get:
        @@@Type:  DOMString
  @Attr:
     @@Name:  typeNamespace
     @@Get:
        @@@Type:  DOMString
  @ConstGroup:
     @@Name:  DerivationMethods
     @@Const:
        @@@Name:  DERIVATION_RESTRICTION
        @@@Type:  unsigned-long
        @@@Value:  0x00000001
     @@Const:
        @@@Name:  DERIVATION_EXTENSION
        @@@Type:  unsigned-long
        @@@Value:  0x00000002
     @@Const:
        @@@Name:  DERIVATION_UNION
        @@@Type:  unsigned-long
        @@@Value:  0x00000004
     @@Const:
        @@@Name:  DERIVATION_LIST
        @@@Type:  unsigned-long
        @@@Value:  0x00000008
  @Method:
     @@Name:  isDerivedFrom
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  typeNamespaceArg
        @@@Type:  DOMString
     @@Param:
        @@@Name:  typeNameArg
        @@@Type:  DOMString
     @@Param:
        @@@Name:  derivationMethod
        @@@Type:  unsigned-long

IF:
  @Name:  UserDataHandler
  @Level[list]:  3
  @ConstGroup:
     @@Name:  OperationType
     @@Const:
        @@@Name:  NODE_CLONED
        @@@Type:  unsigned-short
        @@@Value:  1
     @@Const:
        @@@Name:  NODE_IMPORTED
        @@@Type:  unsigned-short
        @@@Value:  2
     @@Const:
        @@@Name:  NODE_DELETED
        @@@Type:  unsigned-short
        @@@Value:  3
     @@Const:
        @@@Name:  NODE_RENAMED
        @@@Type:  unsigned-short
        @@@Value:  4
     @@Const:
        @@@Name:  NODE_ADOPTED
        @@@Type:  unsigned-short
        @@@Value:  5
  @Method:
     @@Name:  handle
     @@Param:
        @@@Name:  operation
        @@@Type:  unsigned-short
     @@Param:
        @@@Name:  key
        @@@Type:  DOMString
     @@Param:
        @@@Name:  data
        @@@Type:  DOMUserData
     @@Param:
        @@@Name:  src
        @@@Type:  Node
     @@Param:
        @@@Name:  dst
        @@@Type:  Node

IF:
  @Name:  DOMError
  @Level[list]:  3
  @ConstGroup:
     @@Name:  ErrorSeverity
     @@Const:
        @@@Name:  SEVERITY_WARNING
        @@@Type:  unsigned-short
        @@@Value:  1
     @@Const:
        @@@Name:  SEVERITY_ERROR
        @@@Type:  unsigned-short
        @@@Value:  2
     @@Const:
        @@@Name:  SEVERITY_FATAL_ERROR
        @@@Type:  unsigned-short
        @@@Value:  3
  @Attr:
     @@Name:  severity
     @@Get:
        @@@Type:  unsigned-short
  @Attr:
     @@Name:  message
     @@Get:
        @@@Type:  DOMString
  @Attr:
     @@Name:  type
     @@Get:
        @@@Type:  DOMString
  @Attr:
     @@Name:  relatedException
     @@Get:
        @@@Type:  DOMObject
  @Attr:
     @@Name:  relatedData
     @@Get:
        @@@Type:  DOMObject
  @Attr:
     @@Name:  location
     @@Get:
        @@@Type:  DOMLocator

IF:
  @Name:  DOMErrorHandler
  @Level[list]:  3
  @Method:
     @@Name:  handleError
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  error
        @@@Type:  DOMError

IF:
  @Name:  DOMLocator
  @Level[list]:  3
  @Attr:
     @@Name:  lineNumber
     @@Get:
        @@@Type:  long
  @Attr:
     @@Name:  columnNumber
     @@Get:
        @@@Type:  long
  @Attr:
     @@Name:  byteOffset
     @@Get:
        @@@Type:  long
  @Attr:
     @@Name:  utf16Offset
     @@Get:
        @@@Type:  long
  @Attr:
     @@Name:  relatedNode
     @@Get:
        @@@Type:  Node
  @Attr:
     @@Name:  uri
     @@Get:
        @@@Type:  DOMString

IF:
  @Name:  DOMConfiguration
  @Level[list]:  3
  @Method:
     @@Name:  setParameter
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Param:
        @@@Name:  value
        @@@Type:  DOMUserData
     @@Return:
        @@@Exception[list]:  DOMException
  @Method:
     @@Name:  getParameter
     @@Return:
        @@@Type:  DOMUserData
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  canSetParameter
     @@Return:
        @@@Type:  boolean
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
     @@Param:
        @@@Name:  value
        @@@Type:  DOMUserData
  @Attr:
     @@Name:  parameterNames
     @@Get:
        @@@Type:  DOMStringList

IF:
  @Name:  Document
  @ISA:  Node
  @Attr:
     @@Name:  doctype
     @@Get:
        @@@Type:  DocumentType
     @@ModifiedLevel[list]:  3
  @Attr:
     @@Name:  implementation
     @@Get:
        @@@Type:  DOMImplementation
  @Attr:
     @@Name:  documentElement
     @@Get:
        @@@Type:  Element
  @Method:
     @@Name:  createElement
     @@Return:
        @@@Type:  Element
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  tagName
        @@@Type:  DOMString
  @Method:
     @@Name:  createDocumentFragment
     @@Return:
        @@@Type:  DocumentFragment
  @Method:
     @@Name:  createTextNode
     @@Return:
        @@@Type:  Text
     @@Param:
        @@@Name:  data
        @@@Type:  DOMString
  @Method:
     @@Name:  createComment
     @@Return:
        @@@Type:  Comment
     @@Param:
        @@@Name:  data
        @@@Type:  DOMString
  @Method:
     @@Name:  createCDATASection
     @@Return:
        @@@Type:  CDATASection
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  data
        @@@Type:  DOMString
  @Method:
     @@Name:  createProcessingInstruction
     @@Return:
        @@@Type:  ProcessingInstruction
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  target
        @@@Type:  DOMString
     @@Param:
        @@@Name:  data
        @@@Type:  DOMString
  @Method:
     @@Name:  createAttribute
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  createEntityReference
     @@Return:
        @@@Type:  EntityReference
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  name
        @@@Type:  DOMString
  @Method:
     @@Name:  getElementsByTagName
     @@Return:
        @@@Type:  NodeList
     @@Param:
        @@@Name:  tagname
        @@@Type:  DOMString
  @Method:
     @@Name:  importNode
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  importedNode
        @@@Type:  Node
     @@Param:
        @@@Name:  deep
        @@@Type:  boolean
     @@Level[list]:  2
  @Method:
     @@Name:  createElementNS
     @@Return:
        @@@Type:  Element
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  createAttributeNS
     @@Return:
        @@@Type:  Attr
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  getElementsByTagNameNS
     @@Return:
        @@@Type:  NodeList
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  localName
        @@@Type:  DOMString
     @@Level[list]:  2
  @Method:
     @@Name:  getElementById
     @@Return:
        @@@Type:  Element
     @@Param:
        @@@Name:  elementId
        @@@Type:  DOMString
     @@Level[list]:  2
  @Attr:
     @@Name:  inputEncoding
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  3
  @Attr:
     @@Name:  xmlEncoding
     @@Get:
        @@@Type:  DOMString
     @@Level[list]:  3
  @Attr:
     @@Name:  xmlStandalone
     @@Get:
        @@@Type:  boolean
     @@Set:
        @@@Type:  boolean
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  @Attr:
     @@Name:  xmlVersion
     @@Get:
        @@@Type:  DOMString
     @@Set:
        @@@Type:  DOMString
        @@@Exception[list]:  DOMException
     @@Level[list]:  3
  @Attr:
     @@Name:  strictErrorChecking
     @@Get:
        @@@Type:  boolean
     @@Set:
        @@@Type:  boolean
     @@Level[list]:  3
  @Attr:
     @@Name:  documentURI
     @@Get:
        @@@Type:  DOMString
     @@Set:
        @@@Type:  DOMString
     @@Level[list]:  3
  @Method:
     @@Name:  adoptNode
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  source
        @@@Type:  Node
     @@Level[list]:  3
  @Attr:
     @@Name:  domConfig
     @@Get:
        @@@Type:  DOMConfiguration
     @@Level[list]:  3
  @Method:
     @@Name:  normalizeDocument
     @@Level[list]:  3
  @Method:
     @@Name:  renameNode
     @@Return:
        @@@Type:  Node
        @@@Exception[list]:  DOMException
     @@Param:
        @@@Name:  n
        @@@Type:  Node
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:  DOMString
     @@Param:
        @@@Name:  qualifiedName
        @@@Type:  DOMString
     @@Level[list]:  3
  
  @ReAttr:
    @@Name: attributes
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-84CF096
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: NamedNodeMap
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
  @ReAttr:
    @@Name: nodeName
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-F68D095
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: DOMString
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = q<#document>;
  @ReAttr:
    @@Name: nodeValue
    @@Spec:
      @@@DOM3[list]:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-F68D080
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#ID-1841493061
    @@Get:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
    @@Set:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          __WARNING{ManakaiDOMImplementationException.ATTR_SET_NO_EFFECT}__;
  @ReAttr:
    @@Name: textContent
    @@Spec:
      @@@DOM3:
        http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent
    @@Get:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = null;
    @@Set:
      @@@Type: DOMString
      @@@Exception[list]: DOMException
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          __WARNING{ManakaiDOMImplementationException.ATTR_SET_NO_EFFECT}__;

## DOMCore.dis ends here
