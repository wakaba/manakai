Namespace:
  @DOMCore:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @DOMEvents:
    http://suika.fam.cx/~wakaba/archive/2004/dom/events#
  @DOMViews:
    http://suika.fam.cx/~wakaba/archive/2004/dom/views#
  @ev:
    http://www.w3.org/2001/xml-events
  @lang:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @ManakaiDOMEvents:
    http://suika.fam.cx/~wakaba/archive/2004/mdom-ev#
  @TreeCore:\
Module:
  @Name:  DOMTextEvents
  @Namespace:
     http://suika.fam.cx/~wakaba/archive/2004/dom/events#
  @BindingName:
     @@@:  events
     @@Type:
        lang:IDL-DOM
     @@prefix:  dom.w3c.org
  @FullName:
    @@lang:en
    @@@: DOM Text Events Module

  @Author:
     @@FullName:  Wakaba
     @@Mail:  w@suika.fam.cx
  @License:
     license:Perl+MPL
  @Date.RCS:
     $Date: 2004/10/16 13:34:17 $

  @ConditionDef:
    @@Name:DOM3
  @NormalCondition:DOM3

  @Feature:
    @@Name:TextEvents
    @@Version:3.0
    @@FullName: DOM Level 3 Text Events
    @@ImplNote:
      @@@lang:en
      @@@@:
        The support for <Feature:UIEvents>/<FeatureVer:3.0> is required.
    @@Condition[list]:
      DOM3
    @@Contrib:
      DOMCore:DOMImplementation::

  @Require:
     @@Module:
        @@@Name:  DOMUIEvents
        @@@FileName:
           @@@@@:  events.idl
           @@@@For:
              lang:IDL-DOM
        @@@Namespace:
           http://suika.fam.cx/~wakaba/archive/2004/dom/events#

EventSet:
  @Event:
    @@QName:
      ev:textInput
    @@Description:
      @@@lang:en
      @@@@:
        One or more characters have been entered.
     \
        {eg:
        \
          - A key is pressed or released on a keyboard device.
        \
          - Characters are passed from an input method editor.
        \
          - Characters are passed as the result of a voice command.
        \
          - A <QUOTE:paste> operation generates a simple 
            sequence of characters (a text without any structure or 
            style information).
        \
        }
    @@Type:TextEvent
    @@IsBubbling:1
    @@IsCancelable:1
    @@EventTarget:
      @@@Type:
        DOMCore:Element
    @@SpecLevel:3
    @@ContextInfo:
      @@@Attr:
        @@@@IF:
          DOMUIEvents:UIEvent
        @@@@Name:view
      @@@Attr:
        @@@@IF:TextEvent
        @@@@Name:data
##ErrorSet

IF:
  @Name:  TextEvent
  @Description:
    @@lang:en
    @@@:
      Provide specific contextual information associated with 
      Text Events. 
  @Example:
    @@FullName:
       @@@lang:en
       @@@@:
         Create an instance of the <IF:TextEvent> interface
    @@Code:
      @@@Type:
        lang:Perl
      @@@@:
        my $txtev = $DocumentEvent.createEvent ('TextEvent');

  @ISA:  
    DOMUIEvents:UIEvent
  @Role:
    @@@:
      DOMEvents:Event
    @@compat:
      ManakaiDOMEvents:Events

  @Level[list]:  3
  @SpecLevel[list]:  3
  @Attr:
     @@Name:  data
     @@Description:
       @@@lang:en
       @@@@:
         The value of the characters generated by the 
         character device.
     @@Get:
        @@@Type:  
          DOMMain:DOMString
        @@@Description:
          @@@@lang:en
          @@@@@:
            Characters generated by the device.  This may be 
            a single UCS character or a non-empty sequence of 
            characters.
        @@@ImplNote:
          @@@@lang:en
          @@@@@:
            Characters should be normalized by NFC.
        @@@ImplNote:
          @@@@lang:en
          @@@@@:
            The value cannot be <DOM:null> or an empty string.
        @@@Def:
          @@@@Type:
            lang:dis
          @@@@GetProp:
            DOMTextEvents:data
  @Method:
     @@Name:  initTextEvent
     @@Description:
       @@@lang:en
       @@@@:
         Initialize the value of a <IF:TextEvent> object.  It has 
         the same behavior as <M:UIEvent.initUIEvent>.
     @@NSVersion:initTextEventNS
     @@Param:
        @@@Name:  typeArg
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  canBubbleArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  cancelableArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  viewArg
        @@@Type:
           DOMViews:AbstractView
     @@Param:
        @@@Name:  dataArg
        @@@Type:  
          DOMMain:DOMString
     @@Return:  
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
           __DEEP{
                    ## Conditional
             $self->__SUPER{UIEvent}__::initUIEvent
                       ($typeArg, $canBubbleArg, $cancelableArg,
                        $viewArg, null);
           }__;    ## NOTE: $detailArg not used
           for ($self->{<Q:TreeCore:node>}) {
             $_->{<Q:DOMTextEvents:data>} = $dataArg;
           }
    @@SpecLevel:3
    @@Level[list]:
      3
  @Method:
     @@Name:  initTextEventNS
     @@Description:
       @@@lang:en
       @@@@:
         Initialize the value of a <IF:TextEvent> object.  It has 
         the same behavior as <M:UIEvent.initTextEventNS>.
     @@Param:
        @@@Name:  namespaceURI
        @@@Type:
          ManakaiDOM:ManakaiDOMNamespaceURI
     @@Param:
        @@@Name:  type
        @@@Type:  
          DOMMain:DOMString
     @@Param:
        @@@Name:  canBubbleArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  cancelableArg
        @@@Type:
           DOMMain:boolean
        @@@InCase:
           @@@@Value:  true
        @@@InCase:
           @@@@Value:  false
     @@Param:
        @@@Name:  viewArg
        @@@Type:
           DOMViews:AbstractView
     @@Param:
        @@@Name:  dataArg
        @@@Type:  
          DOMMain:DOMString
     @@Return:  
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
           __DEEP{
                    ## Conditional
             $self->__SUPER{UIEvent}__::initUIEventNS
                       ($namespaceURI, $type, $canBubbleArg, $cancelableArg,
                        $viewArg, null);
           }__;    ## NOTE: $detailArg not used
           for ($self->{<Q:TreeCore:node>}) {
             $_->{<Q:DOMTextEvents:data>} = $dataArg;
           }
    @@SpecLevel:3
    @@Level[list]:
      3
##IF:TextEvent

## DOMTextEvents.dis ends here
