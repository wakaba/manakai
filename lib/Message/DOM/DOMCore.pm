#!/usr/bin/perl 
## This file is automatically generated
## 	at 2005-12-31T07:56:38+00:00,
## 	from file "lib/Message/DOM/DOMCore.dis",
## 	module <http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#ManakaiDOM.DOMCore>,
## 	for <http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#ManakaiDOMLatest>.
## Don't edit by hand!
use strict;
require Message::DOM::DOMFeature;
require Message::DOM::DOMMain;
require Message::DOM::Tree;
require Message::Util::Error;
require Message::Util::Error::DOMException;
package Message::DOM::DOMCore;
our $VERSION = 20051231.0756;
sub DOMSTRING_SIZE_ERR ();
sub HIERARCHY_REQUEST_ERR ();
sub INDEX_SIZE_ERR ();
sub INUSE_ATTRIBUTE_ERR ();
sub INVALID_ACCESS_ERR ();
sub INVALID_CHARACTER_ERR ();
sub INVALID_MODIFICATION_ERR ();
sub INVALID_STATE_ERR ();
sub NAMESPACE_ERR ();
sub NODE_ADOPTED ();
sub NODE_CLONED ();
sub NODE_DELETED ();
sub NODE_IMPORTED ();
sub NODE_RENAMED ();
sub NOT_FOUND_ERR ();
sub NOT_SUPPORTED_ERR ();
sub NO_DATA_ALLOWED_ERR ();
sub NO_MODIFICATION_ALLOWED_ERR ();
sub SEVERITY_ERROR ();
sub SEVERITY_FATAL_ERROR ();
sub SEVERITY_WARNING ();
sub SYNTAX_ERR ();
sub TYPE_MISMATCH_ERR ();
sub VALIDATION_ERR ();
sub WRONG_DOCUMENT_ERR ();
sub AUTOLOAD {


        my $al = our $AUTOLOAD;
        $al =~ s/.+:://;
        if ({'DOMSTRING_SIZE_ERR', 'Message::DOM::IFLatest::DOMException::DOMSTRING_SIZE_ERR', 'HIERARCHY_REQUEST_ERR', 'Message::DOM::IFLatest::DOMException::HIERARCHY_REQUEST_ERR', 'INDEX_SIZE_ERR', 'Message::DOM::IFLatest::DOMException::INDEX_SIZE_ERR', 'INUSE_ATTRIBUTE_ERR', 'Message::DOM::IFLatest::DOMException::INUSE_ATTRIBUTE_ERR', 'INVALID_ACCESS_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_ACCESS_ERR', 'INVALID_CHARACTER_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_CHARACTER_ERR', 'INVALID_MODIFICATION_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_MODIFICATION_ERR', 'INVALID_STATE_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_STATE_ERR', 'NAMESPACE_ERR', 'Message::DOM::IFLatest::DOMException::NAMESPACE_ERR', 'NODE_ADOPTED', 'Message::DOM::IFLatest::UserDataHandler::NODE_ADOPTED', 'NODE_CLONED', 'Message::DOM::IFLatest::UserDataHandler::NODE_CLONED', 'NODE_DELETED', 'Message::DOM::IFLatest::UserDataHandler::NODE_DELETED', 'NODE_IMPORTED', 'Message::DOM::IFLatest::UserDataHandler::NODE_IMPORTED', 'NODE_RENAMED', 'Message::DOM::IFLatest::UserDataHandler::NODE_RENAMED', 'NOT_FOUND_ERR', 'Message::DOM::IFLatest::DOMException::NOT_FOUND_ERR', 'NOT_SUPPORTED_ERR', 'Message::DOM::IFLatest::DOMException::NOT_SUPPORTED_ERR', 'NO_DATA_ALLOWED_ERR', 'Message::DOM::IFLatest::DOMException::NO_DATA_ALLOWED_ERR', 'NO_MODIFICATION_ALLOWED_ERR', 'Message::DOM::IFLatest::DOMException::NO_MODIFICATION_ALLOWED_ERR', 'SEVERITY_ERROR', 'Message::DOM::IFLatest::DOMError::SEVERITY_ERROR', 'SEVERITY_FATAL_ERROR', 'Message::DOM::IFLatest::DOMError::SEVERITY_FATAL_ERROR', 'SEVERITY_WARNING', 'Message::DOM::IFLatest::DOMError::SEVERITY_WARNING', 'SYNTAX_ERR', 'Message::DOM::IFLatest::DOMException::SYNTAX_ERR', 'TYPE_MISMATCH_ERR', 'Message::DOM::IFLatest::DOMException::TYPE_MISMATCH_ERR', 'VALIDATION_ERR', 'Message::DOM::IFLatest::DOMException::VALIDATION_ERR', 'WRONG_DOCUMENT_ERR', 'Message::DOM::IFLatest::DOMException::WRONG_DOCUMENT_ERR'}->{$al}) {
          no strict 'refs';
          *{$AUTOLOAD} = \&{{'DOMSTRING_SIZE_ERR', 'Message::DOM::IFLatest::DOMException::DOMSTRING_SIZE_ERR', 'HIERARCHY_REQUEST_ERR', 'Message::DOM::IFLatest::DOMException::HIERARCHY_REQUEST_ERR', 'INDEX_SIZE_ERR', 'Message::DOM::IFLatest::DOMException::INDEX_SIZE_ERR', 'INUSE_ATTRIBUTE_ERR', 'Message::DOM::IFLatest::DOMException::INUSE_ATTRIBUTE_ERR', 'INVALID_ACCESS_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_ACCESS_ERR', 'INVALID_CHARACTER_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_CHARACTER_ERR', 'INVALID_MODIFICATION_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_MODIFICATION_ERR', 'INVALID_STATE_ERR', 'Message::DOM::IFLatest::DOMException::INVALID_STATE_ERR', 'NAMESPACE_ERR', 'Message::DOM::IFLatest::DOMException::NAMESPACE_ERR', 'NODE_ADOPTED', 'Message::DOM::IFLatest::UserDataHandler::NODE_ADOPTED', 'NODE_CLONED', 'Message::DOM::IFLatest::UserDataHandler::NODE_CLONED', 'NODE_DELETED', 'Message::DOM::IFLatest::UserDataHandler::NODE_DELETED', 'NODE_IMPORTED', 'Message::DOM::IFLatest::UserDataHandler::NODE_IMPORTED', 'NODE_RENAMED', 'Message::DOM::IFLatest::UserDataHandler::NODE_RENAMED', 'NOT_FOUND_ERR', 'Message::DOM::IFLatest::DOMException::NOT_FOUND_ERR', 'NOT_SUPPORTED_ERR', 'Message::DOM::IFLatest::DOMException::NOT_SUPPORTED_ERR', 'NO_DATA_ALLOWED_ERR', 'Message::DOM::IFLatest::DOMException::NO_DATA_ALLOWED_ERR', 'NO_MODIFICATION_ALLOWED_ERR', 'Message::DOM::IFLatest::DOMException::NO_MODIFICATION_ALLOWED_ERR', 'SEVERITY_ERROR', 'Message::DOM::IFLatest::DOMError::SEVERITY_ERROR', 'SEVERITY_FATAL_ERROR', 'Message::DOM::IFLatest::DOMError::SEVERITY_FATAL_ERROR', 'SEVERITY_WARNING', 'Message::DOM::IFLatest::DOMError::SEVERITY_WARNING', 'SYNTAX_ERR', 'Message::DOM::IFLatest::DOMException::SYNTAX_ERR', 'TYPE_MISMATCH_ERR', 'Message::DOM::IFLatest::DOMException::TYPE_MISMATCH_ERR', 'VALIDATION_ERR', 'Message::DOM::IFLatest::DOMException::VALIDATION_ERR', 'WRONG_DOCUMENT_ERR', 'Message::DOM::IFLatest::DOMException::WRONG_DOCUMENT_ERR'}->{$al}};
          goto &{$AUTOLOAD};
        } else {
          require Carp;
          Carp::croak (qq<Can't locate method "$AUTOLOAD">);
        }
      
}
sub import {


        my $self = shift;
        if (@_) {
          local $Exporter::ExportLevel = $Exporter::ExportLevel + 1;
          $self->SUPER::import (@_);
          for (grep {not /\W/} @_) {
            eval qq{$_};
          }
        }
      
}
our %EXPORT_TAG = ('ErrorSeverity', ['SEVERITY_ERROR', 'SEVERITY_FATAL_ERROR', 'SEVERITY_WARNING'], 'ExceptionCode', ['DOMSTRING_SIZE_ERR', 'HIERARCHY_REQUEST_ERR', 'INDEX_SIZE_ERR', 'INUSE_ATTRIBUTE_ERR', 'INVALID_ACCESS_ERR', 'INVALID_CHARACTER_ERR', 'INVALID_MODIFICATION_ERR', 'INVALID_STATE_ERR', 'NAMESPACE_ERR', 'NOT_FOUND_ERR', 'NOT_SUPPORTED_ERR', 'NO_DATA_ALLOWED_ERR', 'NO_MODIFICATION_ALLOWED_ERR', 'SYNTAX_ERR', 'TYPE_MISMATCH_ERR', 'VALIDATION_ERR', 'WRONG_DOCUMENT_ERR'], 'OperationType', ['NODE_ADOPTED', 'NODE_CLONED', 'NODE_DELETED', 'NODE_IMPORTED', 'NODE_RENAMED']);
our @EXPORT_OK = ('SEVERITY_ERROR', 'SEVERITY_FATAL_ERROR', 'SEVERITY_WARNING', 'DOMSTRING_SIZE_ERR', 'HIERARCHY_REQUEST_ERR', 'INDEX_SIZE_ERR', 'INUSE_ATTRIBUTE_ERR', 'INVALID_ACCESS_ERR', 'INVALID_CHARACTER_ERR', 'INVALID_MODIFICATION_ERR', 'INVALID_STATE_ERR', 'NAMESPACE_ERR', 'NOT_FOUND_ERR', 'NOT_SUPPORTED_ERR', 'NO_DATA_ALLOWED_ERR', 'NO_MODIFICATION_ALLOWED_ERR', 'SYNTAX_ERR', 'TYPE_MISMATCH_ERR', 'VALIDATION_ERR', 'WRONG_DOCUMENT_ERR', 'NODE_ADOPTED', 'NODE_CLONED', 'NODE_DELETED', 'NODE_IMPORTED', 'NODE_RENAMED');
use Exporter; push our @ISA, 'Exporter';
package Message::DOM::IFLatest::DOMException;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::Util::Error';
sub INDEX_SIZE_ERR () {
1}
sub DOMSTRING_SIZE_ERR () {
2}
sub HIERARCHY_REQUEST_ERR () {
3}
sub WRONG_DOCUMENT_ERR () {
4}
sub INVALID_CHARACTER_ERR () {
5}
sub NO_DATA_ALLOWED_ERR () {
6}
sub NO_MODIFICATION_ALLOWED_ERR () {
7}
sub NOT_FOUND_ERR () {
8}
sub NOT_SUPPORTED_ERR () {
9}
sub INUSE_ATTRIBUTE_ERR () {
10}
sub INVALID_STATE_ERR () {
11}
sub SYNTAX_ERR () {
12}
sub INVALID_MODIFICATION_ERR () {
13}
sub NAMESPACE_ERR () {
14}
sub INVALID_ACCESS_ERR () {
15}
sub VALIDATION_ERR () {
16}
sub TYPE_MISMATCH_ERR () {
17}
sub ___error_def () {

{'DOMSTRING_SIZE_ERR', {'description', 'The specified range of text does not fit into a <TYPE::DOMMain:DOMString>.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '2', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'HIERARCHY_REQUEST_ERR', {'description', 'An attempt is made to insert a node somewhere it does not belong.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '3', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#HIERARCHY_ANCESTOR_OR_SELF', {'description', 'An attempt is made to insert a node that is one of ancestor of this node or that is this node itself.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#HIERARCHY_BAD_TYPE', {'description', 'An attempt is made to insert a node whose type is not allowed.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_SECOND_DOCTYPE', {'description', 'An attempt is made to insert a second document type node.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_SECOND_DOC_ELEMENT', {'description', 'An attempt is made to insert a second document element node.'}, 'http://suika.fam.cx/~wakaba/archive/2004/mdom/html#MDOM_NOT_CAPTION', {'description', 'The given element is not of type <HE::caption>.'}}}, 'INDEX_SIZE_ERR', {'description', 'The index or size%t ( name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name}, prefix => {, as specified by the parameter "}, suffix => {",}); is negative or greater than the allowed value.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '1', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NEGATIVE_INDEX_ERR', {'description', 'The specified index or size (%p ( name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name}, prefix => {"}, suffix => {" = }, );%p ( name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#index}, );) is negative.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#OUT_OF_UPPER_BOUND_ERR', {'description', 'The specified index or size (%p ( name => {http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name}, prefix => {"}, suffix => {" = }, );%p ( name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#index}, );) is greater than an upper bound.'}}}, 'INUSE_ATTRIBUTE_ERR', {'description', 'The attribure node is already in use elsewhere', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '10', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'INVALID_ACCESS_ERR', {'description', 'A parameter or an operation is not supported by the underlying object.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '15', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'INVALID_CHARACTER_ERR', {'description', 'An invalid or illegal character is specified.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '5', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_BAD_NAME', {'description', 'The name%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#name}, prefix => { "}, suffix => {"}); is illegal%p (name => {http://www.w3.org/2001/04/infoset#version}, prefix => { according to XML });'}}}, 'INVALID_MODIFICATION_ERR', {'description', 'An attempt is made to modify the type of underlying object.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '13', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'INVALID_STATE_ERR', {'description', 'An attempt is made to use an object that is not (or no longer) usable.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '11', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/mdom-ls#MDOMLS_BUSY', {'description', 'The parser is busy.'}}}, 'NAMESPACE_ERR', {'description', 'An attempt is made to create or change an object in a way that is incorrect with regard to namespaces.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '14', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#MDOMX_HTML_NSURI', {'description', 'An attempt is made to set a namespace URI to an HTML node.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_BAD_NCNAME', {'description', 'The NCName%p (name => {http://www.w3.org/2001/04/infoset#name}, prefix => { "}, suffix => {"}); is illegal%p (name => {http://www.w3.org/2001/04/infoset#version}, prefix => { according to the XML });'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_MALFORMED_QNAME', {'description', 'The QName%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#qualifiedName}, prefix => { "}, suffix => {"}); is illegal%p (name => {http://www.w3.org/2001/04/infoset#version}, prefix => { according to XML });'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_NOPREFIX_WITH_NON_NULL_URI', {'description', '%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#qualifiedName}, prefix => {QName "}, suffix => {": }); A non-null namespace prefix is required for a non-null namespace URI%p (name => {http://www.w3.org/2001/04/infoset#namespaceName}, prefix => { <}, suffix => {>});'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_NULL_QNAME_WITH_NON_NULL_URI', {'description', '%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#qualifiedName}, prefix => {QName "}, suffix => {": }); A non-null namespace prefix is required for a non-null namespace URI%p (name => {http://www.w3.org/2001/04/infoset#namespaceName}, prefix => { <}, suffix => {>});'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_OTHER_WITH_XMLNS_URI', {'description', 'The namespace prefix for namespace URI <http://www.w3.org/2000/xmlns/> must be a "xmlns"%p (name => {http://www.w3.org/2001/04/infoset#prefix}, prefix => {, not "}, suffix => {"});'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_OTHER_WITH_XML_URI', {'description', 'The namespace prefix for namespace URI <http://www.w3.org/XML/1998/namespace> must be a "xml"%p (name => {http://www.w3.org/2001/04/infoset#prefix}, prefix => {, not "}, suffix => {"});'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_PREFIX_WITH_NULL_URI', {'description', 'The namespace prefix is specified but the namespace URI is <DOM::null>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_QNAME_IS_XMLNS', {'description', 'The qualified name specified equals to <XA::xmlns>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_XMLNSQ_WITH_OTHER_URI', {'description', 'The qualified name is <XML::xmlns> and the namespace URI is other than <URI::http://www.w3.org/2000/xmlns>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_XMLNS_WITH_OTHER_URI', {'description', 'The namespace prefix specified is <XML::xmlns> and the namespace URI is other than <URI::http://www.w3.org/2000/xmlns>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_XMLNS_XMLNS', {'description', 'The qualified name is <XA::xmlns:xmlns>. It is prohibited by the XML Namespace Specifications.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NS_XML_WITH_OTHER_URI', {'description', 'The namespace prefix specified is <XML::xml> and the namespace URI is other than <URI::http://www.w3.org/XML/1998/namespace>.'}}}, 'NOT_FOUND_ERR', {'description', 'An attempt is made to refer a node in a context where it does not exist.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '8', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_ATTR_ERR', {'description', 'The specified node is not an attribute of this node'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_CHILD_ERR', {'description', 'The specified node is not a direct child of this node'}}}, 'NOT_SUPPORTED_ERR', {'description', 'The DOM implementation does not support the type of object requested.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '9', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#ADOPT_NODE_TYPE_NOT_SUPPORTED_ERR', {'description', 'The implementation does not support adopting of nodes of the type.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#CLONE_NODE_TYPE_NOT_SUPPORTED_ERR', {'description', 'The implementation does not support cloning of nodes of the type.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#FEATURE_NOT_SUPPORTED_ERR', {'description', '%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#features}, prefix => {"}, suffix => {": });Unsupported features requested'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_RECOGNIZED_CONFIG_PARAM_ERR', {'description', 'Parameter "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName});" is not supported'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_SUPPORTED_CONFIG_VALUE_ERR', {'description', 'Parameter "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName} );": Value "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterValue} );" is not supported'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#RENAME_DOCUMENT_ELEMENT_NOT_SUPPORTED_ERR', {'description', 'The implementation does not support renaming of the document element.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#RENAME_NODE_TYPE_NOT_SUPPORTED_ERR', {'description', 'The implementation does not support renaming of nodes of the type.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_DOC_NOSUPPORT_XML', {'description', 'The document is not an XML document while the operation is for XML documents'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_DOC_NOSUPPORT_XMLNS', {'description', 'The document is not a namespaced XML document while the operation is for XML Namespace documents'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_BY_APP', {'description', 'A method or attribute is not implemented; it is expected that a DOM application implements it.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_NOSUPPORT_SCHEMA', {'description', 'The schema language specified %p (prefix => {<}, suffix => {>}, name => {http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#schemaType}); is not supported'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_NOSUPPORT_XML', {'description', 'This operation requires the support for the XML documents'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_NOSUPPORT_XMLNS', {'description', 'This operation requires the support for the XML Namespaces'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_NOSUPPORT_XMLVER', {'description', 'XML version%p (name => {http://www.w3.org/2001/04/infoset#version}, prefix => { "}, suffix => {"}); is not supported'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_NODE_NOSUPPORT_XMLNS', {'description', 'The node does not support XML Namespaces while the operation requires the node to support namespaces; the node is not of an XML document or the node has been created by DOM Level 1 method'}, 'http://suika.fam.cx/~wakaba/archive/2004/mdom-ev#FOREIGN_EVENT_ERR', {'description', 'This is not a supported event object; use createEvent method or implement the CustomEvent interface'}, 'http://suika.fam.cx/~wakaba/archive/2004/mdom-ev#MDOM_IMPL_NOSUPPORT_EVENT', {'description', 'The DOM implementation is unable to create an event of the requested type.'}, 'http://suika.fam.cx/~wakaba/archive/2004/mdom-ls#MDOMLS_IMPL_NOSUPPORT_MODE', {'description', 'The requested mode "%p (name => {http://suika.fam.cx/~wakaba/archive/2004/dom/ls#mode});" is not supported'}, 'http://suika.fam.cx/~wakaba/archive/2004/mdom/html#MDOMHTML_IMPL_NOSUPPORT_SET_SELECT_LENGTH', {'description', 'The DOM implementation does not support setting <A::DOMHTML:HTMLSelectElement.length>.'}}}, 'NO_DATA_ALLOWED_ERR', {'description', 'Data is specified for a node that does not support data.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '6', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'NO_MODIFICATION_ALLOWED_ERR', {'description', 'An attempt is made to modify an object where modifications are not allowed.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '7', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOMOD_DESCENDANT_ERR', {'description', 'One of descendant nodes (including attribute nodes or its descendants) is read-only.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOMOD_NAMEDNODEMAP_ERR', {'description', 'An attempt is made to modify an uneditable <IF::NamedNodeMap>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOMOD_NODELIST_ERR', {'description', 'An attempt is made to modify an uneditable <IF::NodeList>.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#NOMOD_ATTR', {'description', 'One of attribute nodes is read-only.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#NOMOD_CHILD', {'description', 'One of child nodes is read-only.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#NOMOD_PARENT', {'description', 'The parent node of this node is read-only.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#NOMOD_SRC_PARENT', {'description', 'The parent node of the source node is read-only.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#NOMOD_THIS', {'description', 'This node is read-only'}}}, 'SYNTAX_ERR', {'description', 'An invalid or illegal string is specified.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '12', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/mdom/html#MDOMHTML_BAD_COOKIE', {'description', 'The specifieid value does not adhere to RFC 2965 cookie value syntax.'}}}, 'TYPE_MISMATCH_ERR', {'description', 'The type of an object is incompatible with the expected type of the parameter associated to the object.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '17', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#INCOMPATIBLE_CONFIG_VALUE_ERR', {'description', 'The type of the specified value is incompatible with the type of the configuration parameter.'}}}, 'VALIDATION_ERR', {'description', 'An attempt is made to modify an object where the modification would make the Node invalid with respect to partial validity.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '16', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {}}, 'WRONG_DOCUMENT_ERR', {'description', 'A node is used in a different document than the one that created it.', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#code', '4', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype', {'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#MDOMX_DOCTYPE_ALREADY_USED', {'description', 'A specified document type node has already been used as part of a different document tree.'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#MDOMX_EXTERNAL_NODE', {'description', 'A specified node was created from a different DOM implementation.'}}}}
}
package Message::DOM::DOMCore::ManakaiDOMException;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::Util::Error::DOMException::Exception', 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMException', 'Message::DOM::IFLatest::DOMException', 'Message::DOM::IFLevel1::DOMException', 'Message::DOM::IFLevel2::DOMException', 'Message::DOM::IFLevel3::DOMException';
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMException>} = {'core', {'', '1', '1.0', '1', '2.0', '1', '3.0', '1'}, 'xml', {'', '1', '1.0', '1', '2.0', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMException>} = 14.1;
package Message::DOM::IFLatest::DOMImplementationList;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMImplementationList;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::DOMFeature::ManakaiImplementationList', 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMImplementationList', 'Message::DOM::IFLatest::DOMImplementationList', 'Message::DOM::IFLevel3::DOMImplementationList';
sub new ($) {
my ($self) = @_;
my $r;

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = bless $self->SUPER::new,
             
'Message::DOM::DOMCore::ManakaiDOMImplementationList'
;



;}


;}

;


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementationList>} = {'core', {'', '1', '3.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#minimum', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMImplementationList>} = 11.1;
package Message::DOM::IFLatest::DOMImplementationSource;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMImplementationSource;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::DOMFeature::ManakaiImplementationSource', 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMImplementationSource', 'Message::DOM::IFLatest::DOMImplementationSource', 'Message::DOM::IFLevel3::DOMImplementationSource';
sub get_dom_implementation_list ($$) {
my ($self, $features) = @_;

{

if 
(CORE::defined $features) {
  if (CORE::ref ($features) eq 'HASH') {
    my $new = {};
    for my $fname (keys %{$features}) {
      if (CORE::ref ($features->{$fname}) eq 'HASH') {
        my $lfname = lc $fname;
        for my $fver (keys %{$features->{$fname}}) {
          $new->{$lfname}->{$fver} = $features->{$fname}->{$fver};
        }
      } else {
        $new->{lc $fname} = {(CORE::defined $features->{$fname}
                                ? $features->{$fname} : '') => 1};
      }
    }
    $features = $new;
  } else {
    my @f = split /\s+/, $features;
    $features = {};
    while (@f) {
      my $name = lc shift @f;
      if (@f and $f[0] =~ /^[\d\.]+$/) {
        $features->{$name}->{shift @f} = 1;
      } else {
        $features->{$name}->{''} = 1;
      }
    }
  }
} else {
  $features = {};
}


;}
my $r;

{


{

local $Error::Depth = $Error::Depth + 1;

{


      ## NOTE: Method name is directly written.
  $r = bless $self->SUPER::get_dom_implementation_list ($features),
             
'Message::DOM::DOMCore::ManakaiDOMImplementationList'
;



;}


;}

;


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementationSource>} = {'core', {'', '1', '3.0', '1'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#minimum', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMImplementationSource>} = 11.1;
$Message::DOM::ManakaiDOMImplementationRegistry::SourceClass{q<Message::DOM::DOMCore::ManakaiDOMImplementationSource>} = 1;
package Message::DOM::IFLatest::DOMStringList;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMStringList;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMStringList', 'Message::DOM::IFLatest::DOMStringList', 'Message::DOM::IFLevel3::DOMStringList';
sub item ($$) {
my ($self, $index) = @_;
my $r = '';

{

if 
(not defined $index or
    $index < 0 or
    $index > $#$self) {
  $r = 
undef
;
} else {
  $r = $self->[$index];
}


;}
$r}
sub length ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = @$self;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMStringList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
}
}
sub contains ($$) {
my ($self, $str) = @_;
my $r = 0;

{

CHK: 
{
  

{

local $Error::Depth = $Error::Depth + 1;

{


    for 
(@$self) {
      if ($str eq $_) {
        $r = 
1
;
        last CHK;
      }
    }
  


;}


;}

;
}


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMStringList>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMStringList>} = 8.1;
package Message::DOM::IFLatest::NameList;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMNameList;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::NameList', 'Message::DOM::IFLatest::NameList', 'Message::DOM::IFLevel3::NameList';
sub get_name ($$) {
my ($self, $index) = @_;
my $r = '';

{

if 
(not defined $index or
    $index < 0 or
    $index > $#$self) {
  $r = 
undef
;
} else {
  $r = $self->[$index]->[1];
}          


;}
$r}
sub get_namespace_uri ($$) {
my ($self, $index) = @_;
my $r = '';

{

if 
(not defined $index or
    $index < 0 or
    $index > $#$self) {
  $r = 
undef
;
} else {
  $r = $self->[$index]->[0];
}          


;}
$r}
sub length ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = @$self;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMNameList', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'length';
}
}
sub contains ($$) {
my ($self, $str) = @_;
my $r = 0;

{

CHK: 
{
  if (defined $str) {
    for my $item (@$self) {
      if (defined $item->[1] and $str eq $item->[1]) {
        $r = 
1
;
        last CHK;
      }
    }
  } else { # not defined $str
    for my $item (@$self) {
      if (not defined $item->[1]) {
        $r = 
1
;
        last CHK;
      }
    }
  } # $str defined?
} # CHK


;}
$r}
sub contains_ns ($$$) {
my ($self, $namespaceURI, $name) = @_;

{

if 
(CORE::defined $namespaceURI and CORE::length $namespaceURI == 0) {
  
report Message::DOM::DOMCore::ManakaiDOMError -object => $self, '-type' => 'http://suika.fam.cx/~wakaba/archive/2004/dom/main#empty-namespace-uri', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#resourceURI' => 'tag:suika.fam.cx,2005-09:tag:suika.fam.cx,2005-09:1136015516:4723:8yuNf17530+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest';

;

  

{


$namespaceURI = undef;
  


;}

;
}


;}
my $r = 0;

{

CHKLN: 
{
  CHKNS: {
    if (defined $namespaceURI) {
      for my $item (@$self) {
        if (defined $item->[0] and $namespaceURI eq $item->[0]) {
          last CHKNS;
        }
      }
    } else { # not defined namespaceURI
      for my $item (@$self) {
        if (not defined $item->[0]) {
          last CHKNS;
        }
      }
    } # namespaceURI defined?

    ## namespaceURI does not match
    last CHKLN;
  } # CHKNS

  if (defined $name) {
    for my $item (@$self) {
      if (defined $item->[1] and $name eq $item->[1]) {
        $r = 
1
;
        last CHKLN;
      }
    }
  } else { # not defined namespaceURI
    for my $item (@$self) {
      if (not defined $item->[1]) {
        $r = 
1
;
        last CHKLN;
      }
    }
  } # name defined?
} # CHKLN


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMNameList>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMNameList>} = 8.1;
package Message::DOM::IFLatest::DOMImplementation;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMImplementation;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::Tree::ManakaiDOMImplementationDocument', 'Message::DOM::DOMFeature::ManakaiMinimumImplementation', 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMImplementation', 'Message::DOM::IFLatest::DOMImplementation', 'Message::DOM::IFLevel1::DOMImplementation', 'Message::DOM::IFLevel2::DOMImplementation', 'Message::DOM::IFLevel3::DOMImplementation';
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<1.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xmlversion>}->{q<1.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xmlversion>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<3.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xmlversion>}->{q<1.1>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xmlversion>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<2.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<xml>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<3.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<2.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<>} = 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<1.0>} ||= 1;
$Message::DOM::ImplFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>}->{q<core>}->{q<>} = 1;
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = {'', {'', '1'}, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#minimum', {'', '1', '3.0', '1'}, 'xml', {'', '1', '1.0', '1', '2.0', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = 11.1;
$Message::DOM::ManakaiDOMImplementationSource::SourceClass{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = 1;
$Message::DOM::ManakaiDOMImplementation::CompatClass{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = 1;
$Message::DOM::ManakaiDOMImplementationSource::SourceClass{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = 1;
$Message::DOM::ManakaiDOMImplementation::CompatClass{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = 1;
$Message::Util::ManakaiNode::ManakaiNodeRef::Prop{q<Message::DOM::DOMCore::ManakaiDOMImplementation>} = {};
package Message::DOM::IFLatest::TypeInfo;
our $VERSION = 20051231.0756;
package Message::DOM::IFLatest::UserDataHandler;
our $VERSION = 20051231.0756;
sub NODE_CLONED () {
1}
sub NODE_IMPORTED () {
2}
sub NODE_DELETED () {
3}
sub NODE_RENAMED () {
4}
sub NODE_ADOPTED () {
5}
package Message::DOM::DOMCore::ManakaiDOMUserDataHandler;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::IF::UserDataHandler', 'Message::DOM::IFLatest::UserDataHandler', 'Message::DOM::IFLevel3::UserDataHandler';
sub handle ($$$$;$$) {
my ($self, $operation, $key, $data, $src, $dst) = @_;

{

goto 
&$self;


;}
}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMUserDataHandler>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMUserDataHandler>} = 8.1;
package Message::DOM::IFLatest::DOMError;
our $VERSION = 20051231.0756;
sub SEVERITY_WARNING () {
1}
sub SEVERITY_ERROR () {
2}
sub SEVERITY_FATAL_ERROR () {
3}
package Message::DOM::DOMCore::ManakaiDOMError;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::Util::Error', 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMError', 'Message::DOM::IFLatest::DOMError', 'Message::DOM::IFLevel3::DOMError';
sub severity ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = $self->{-def}->{
'sev'
};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'severity';
}
}
sub message ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{

goto 
&{$self->can ('text')};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'message';
}
}
sub stringify ($) {
my ($self) = @_;
my $r = '';

{


{

local $Error::Depth = $Error::Depth + 1;

{


  my 
$loc = $self->
location
;
  my $uri = $loc->
uri
;
  my $l = $loc->
line_number
;
  my $c = $loc->
column_number
;
  $r .= '<' . $uri . '> ' if defined $uri;
  $r .= 'Line ' . $l . ' ' if $l >= 0;
  $r .= 'Column ' . $c . ' ' if $c >= 0;
  $r .= ': ' if length $r;
  $r .= $self->SUPER::stringify;



;}


;}

;


;}
$r}
sub type ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $self->{-def}->{
't'
};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'type';
}
}
sub related_exception ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $self->{
'relx'
};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'related_exception';
}
}
sub related_data ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $self->{
'rdata'
};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'related_data';
}
}
sub location ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $self->{
'loc'
} || {};


;}

{


$r = bless $r, 
'Message::DOM::DOMCore::ManakaiDOMLocator'
  if 
ref $r eq 'HASH';


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'location';
}
}
sub ___error_def ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = \%Message::DOM::DOMCore::ManakaiDOMError::Def;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => '___error_def';
}
}
sub _FORMATTER_PACKAGE_ ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $self->{
'-def'
}->{
'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/textFormatter'
};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMError', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => '_FORMATTER_PACKAGE_';
}
}
use overload 
bool => sub () {1}, 
'""' => 'stringify', 
fallback => 1;
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMError>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMError>} = 8.1;
$Message::DOM::DOMCore::ManakaiDOMError::Def{'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#check-character-normalization-failure'} = {'description', 'If the <cfg::check-character-normalization> configuration parameter is set to <DOM::true> and a sequence of characters is encountered that fails normalization checking. <SRC::DOM Level 3 Core> <SRC::DOM Level 3 LS>', 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/textFormatter', 'Message::Util::Error::formatter', 'sev', '2', 't', 'check-character-normalization-failure'};
$Message::DOM::DOMCore::ManakaiDOMError::Def{'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#cdata-sections-splitted'} = {'description', 'If the <cfg::split-cdata-sections> configuration parameter is set to <DOM::true> and a <XML::CDATA> section is split.', 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/textFormatter', 'Message::Util::Error::formatter', 'sev', '1', 't', 'cdata-sections-splitted'};
$Message::DOM::DOMCore::ManakaiDOMError::Def{'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#wf-invalid-character-in-node-name'} = {'description', 'If the <cfg::well-formed> configuration parameter is set to <DOM::true> and a <A::Node.nodeName> contains invalid character according to its node type. Or, in <IF::DOMLS|LSSerializer>, if a character that cannot be represented in the output character encoding is occurred within markup.', 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/textFormatter', 'Message::Util::Error::formatter', 'sev', '2', 't', 'wf-invalid-character-in-node-name'};
$Message::DOM::DOMCore::ManakaiDOMError::Def{'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#wf-invalid-character'} = {'description', 'If the <cfg::well-formed> configuration parameter is set to <DOM::true> and the text content inside <IF::Attr>, <IF::Element>, <IF::Comment>, <IF::Text>, or <IF::DOMXML:CDATASection> node or the data inside <IF::DOMXML:ProcessingInstruction> node contains invalid characters. Or, in <IF::DOMLS:LSSerializer>, if the <cfg::split-cdata-sections> parameter is set to <DOM::false> and a <IF::DOMXML:CDATASection> node contains characters that cannot be represented in the specified output encoding. This error is not recoverable.', 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/Core/textFormatter', 'Message::Util::Error::formatter', 'sev', '2', 't', 'wf-invalid-character'};
package Message::DOM::IFLatest::DOMErrorHandler;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMErrorHandler;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::IF::DOMErrorHandler', 'Message::DOM::IFLatest::DOMErrorHandler', 'Message::DOM::IFLevel3::DOMErrorHandler';
sub handle_error ($$) {
my ($self, $error) = @_;
my $r = 0;

{

goto 
&$self;


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMErrorHandler>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMErrorHandler>} = 8.1;
package Message::DOM::IFLatest::DOMLocator;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMLocator;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::IF::DOMLocator', 'Message::DOM::IFLatest::DOMLocator', 'Message::DOM::IFLevel3::DOMLocator';
sub line_number ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = defined $self->{line_number} ? $self->{line_number} : -1;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'line_number';
}
}
sub column_number ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = defined $self->{column_number} ? $self->{column_number} : -1;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'column_number';
}
}
sub byte_offset ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = defined $self->{byte_offset} ? $self->{byte_offset} : -1;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'byte_offset';
}
}
sub utf16_offset ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = defined $self->{utf16_offset} ? $self->{utf16_offset} : -1;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'utf16_offset';
}
}
sub utf32_offset ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = 0;

{


$r = defined $self->{utf32_offset} ? $self->{utf32_offset} : -1;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'utf32_offset';
}
}
sub related_node ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = $self->{related_node};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'related_node';
}
}
sub uri ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r = '';

{


$r = $self->{uri};


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMLocator', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'uri';
}
}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMLocator>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMLocator>} = 8.1;
package Message::DOM::IFLatest::DOMConfiguration;
our $VERSION = 20051231.0756;
package Message::DOM::DOMCore::ManakaiDOMConfiguration;
our $VERSION = 20051231.0756;
push our @ISA, 'Message::DOM::DOMMain::ManakaiDOMObject', 'Message::DOM::IF::DOMConfiguration', 'Message::DOM::IFLatest::DOMConfiguration', 'Message::DOM::IFLevel3::DOMConfiguration';
sub TIEHASH ($$) {
my ($self, $domConfig) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'TIEHASH', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#MDOM_IMPL_METHOD_NOT_IMPLEMENTED', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration';
}
sub set_parameter ($$;$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{$name};
unless (defined $p) {
  
report Message::DOM::DOMCore::ManakaiDOMException -object => $self, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'set_parameter', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName' => $name, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_RECOGNIZED_CONFIG_PARAM_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name' => 'name';

;
}
if (defined $value) {
  if (defined $p->{setter}) {
    

{

local $Error::Depth = $Error::Depth + 1;

{



      $p->{setter}->($self, $name => $value);
    


;}


;}

;
  } elsif ($p->{type} eq 'object') {
    unless (UNIVERSAL::isa ($value, $p->{otype})) {
      
report Message::DOM::DOMCore::ManakaiDOMException -object => $self, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterValue' => $value, '-type' => 'TYPE_MISMATCH_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'set_parameter', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName' => $name, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#INCOMPATIBLE_CONFIG_VALUE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name' => 'value';

;
    }
    $self->[1]->{$p->{iname}} = $value;
  } elsif ($p->{type} eq 'string') {
    $self->[1]->{$p->{iname}} = '' . $value;
  } else {  ## boolean
    my $v = $value ? 
1 : 

0
;
    unless ($p->{vsupport}->[$v]) {
      
report Message::DOM::DOMCore::ManakaiDOMException -object => $self, 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterValue' => $value, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'set_parameter', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName' => $name, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_SUPPORTED_CONFIG_VALUE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name' => 'value';

;
    }
    $self->[1]->{$p->{iname}} = $v;
  }
  for (keys %{$p->{setparam}}) {
    $self->[1]->{$_} = $p->{setparam}->{$_};
    ## NOTE: Setting setter-defined parameters are not supported.
    ##       In addition, parameter value set here might not be
    ##       supported by the implementation.
  }
} else { # unset
  if (defined $p->{unsetter}) {
    

{

local $Error::Depth = $Error::Depth + 1;

{



      $p->{unsetter}->($self, $name);
    


;}


;}

;
  } elsif (defined $p->{setter}) {
    

{

local $Error::Depth = $Error::Depth + 1;

{



      $p->{setter}->($self, $name => 
undef
);
    


;}


;}

;
  } else {
    CORE::delete $self->[1]->{$p->{iname}};
    for (keys %{$p->{setparam}}) {
      $self->[1]->{$_} = $p->{setparam}->{$_};
    }
  }
}


;}
}
sub STORE ($$;$) {
my ($self, $key, $value) = @_;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{lc $key};


{

local $Error::Depth = $Error::Depth + 1;

{


  if 
(defined $p) {
    $self->
set_parameter
 ($key => $value);
  } else {
    $key =~ s/([A-Z])/'-'.lc $1/ge;
    $self->
set_parameter
 ($key => $value);
  }



;}


;}

;


;}
}
sub DELETE ($$) {
my ($self, $key) = @_;
my $r;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{lc $key};


{

local $Error::Depth = $Error::Depth + 1;

{


  unless 
(defined $p) {
    $key =~ s/([A-Z])/'-'.lc $1/ge;
  }
  if (defined wantarray) {
    $r = $self->
get_parameter
 ($key);
  }
  $self->
set_parameter
 ($key => 
undef
);



;}


;}

;


;}
$r}
sub CLEAR ($) {
my ($self) = @_;

{


{

local $Error::Depth = $Error::Depth + 1;

{


  for 
(keys %{
    $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
  }) {
    $self->
set_parameter
 ($_ => 
undef
);
  }



;}


;}

;


;}
}
sub get_parameter ($$) {
my ($self, $name) = @_;

{


$name = lc $name;


;}
my $r;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{$name};
unless (defined $p) {
  
report Message::DOM::DOMCore::ManakaiDOMException -object => $self, '-type' => 'NOT_SUPPORTED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#method' => 'get_parameter', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#domConfigurationParameterName' => $name, 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#NOT_RECOGNIZED_CONFIG_PARAM_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#param-name' => 'name';

;
}


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = defined $p->{getter} ? $p->{getter}->($self, $name) :
       exists $self->[1]->{$p->{iname}} ? $self->[1]->{$p->{iname}} :
       defined $p->{get_default} ? $p->{get_default}->($self, $name) :
       $p->{default};



;}


;}

;


;}
$r}
sub FETCH ($$) {
my ($self, $key) = @_;
my $r;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{lc $key};


{

local $Error::Depth = $Error::Depth + 1;

{


  if 
(defined $p) {
    $r = $self->
get_parameter
 ($key);
  } else {
    $key =~ s/([A-Z])/'-'.lc $1/ge;
    $r = $self->
get_parameter
 ($key);
  }



;}


;}

;


;}
$r}
sub can_set_parameter ($$;$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}
my $r = 0;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{$name};
if (defined $p) {  ## Recognized
  if (defined $value) {
    if (defined $p->{checker}) {
      

{

local $Error::Depth = $Error::Depth + 1;

{



        $r = $p->{checker}->($self, $name => $value);
      


;}


;}

;
    } elsif ($p->{type} eq 'object') {
      $r = 
1 if 
UNIVERSAL::isa ($value, $p->{otype});
    } elsif ($p->{type} eq 'boolean') {
      $r = $p->{vsupport}->[$value ? 
1 : 

0
];
    } else { ## string
      $r = 
1
;
    }
  } else {
    $r = 
1
;
  }
}


;}
$r}
sub EXISTS ($$) {
my ($self, $key) = @_;
my $r = 0;

{

my 
$p = $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
        ->{lc $key};
if (defined $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
            ->{lc $key}) {
  $r = 
1
;
} else {
  $key =~ s/([A-Z])/'-'.lc $1/ge;
  $r = 
1
    if 
$Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
            ->{$key};
}


;}
$r}
sub parameter_names ($;$) {
if (@_ == 1) {my ($self) = @_;
my $r;

{


$r = bless [
  keys %{$Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}}
], 
'Message::DOM::DOMCore::ManakaiDOMStringList'
;


;}
$r;
} else {my ($self) = @_;
report Message::Util::Error::DOMException::CoreException -object => $self, '-type' => 'NO_MODIFICATION_ALLOWED_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#on' => 'get', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#subtype' => 'http://suika.fam.cx/~wakaba/archive/2005/manakai/Util/Error/DOMException#READ_ONLY_ATTRIBUTE_ERR', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#class' => 'Message::DOM::DOMCore::ManakaiDOMConfiguration', 'http://suika.fam.cx/~wakaba/archive/2004/8/4/manakai-dom-exception#attr' => 'parameter_names';
}
}
sub FIRSTKEY ($) {
my ($self) = @_;
my $r;

{

my 
$a = keys %{
  $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
};  # reset
$r = each %{
  $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
};


;}
$r}
sub NEXTKEY ($$) {
my ($self, $lastKey) = @_;
my $r;

{


$r = each %{
  $Message::DOM::DOMCore::ManakaiDOMConfiguration{$self->[2]}
};


;}
$r}
$Message::DOM::ClassFeature{q<Message::DOM::DOMCore::ManakaiDOMConfiguration>} = {'core', {'', '1', '3.0', '1'}, 'xml', {'', '1', '3.0', '1'}, 'xmlversion', {'', '1', '1.0', '1', '1.1', '1'}};
$Message::DOM::ClassPoint{q<Message::DOM::DOMCore::ManakaiDOMConfiguration>} = 8.1;
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'canonical-form'} = {'iname', 'canon', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23cdata-sections+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23element-content-whitespace+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23entities+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespace-declarations+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespaces+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23normalize-characters+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23well-formed+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'canonical-form'} = {'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#canonical-form.parser', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23cdata-sections+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23element-content-whitespace+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23entities+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespace-declarations+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespaces+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23normalize-characters+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23well-formed+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'canonical-form'} = {'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#canonical-form', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23cdata-sections+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23element-content-whitespace+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23entities+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespace-declarations+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespaces+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23normalize-characters+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23well-formed+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/dom/ls%23discard-default-content+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/dom/ls%23format-pretty-print+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/dom/ls%23xml-declaration+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'cdata-sections'} = {'default', '1', 'iname', 'pcdsect', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'cdata-sections'} = {'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#cdata-sections.parser', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'check-character-normalization'} = {'iname', 'charnormc', 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'check-character-normalization'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'check-character-normalization'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'check-character-normalization'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'check-character-normalization'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'comments'} = {'default', '1', 'iname', 'pcom', 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'comments'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'comments'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'comments'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'comments'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'datatype-normalization'} = {'iname', 'tnorm', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23validate+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'datatype-normalization'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'datatype-normalization'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'datatype-normalization'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'datatype-normalization'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'element-content-whitespace'} = {'default', '1', 'iname', 'pecws', 'setparam', [{'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'element-content-whitespace'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'element-content-whitespace'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'element-content-whitespace'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'element-content-whitespace'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'entities'} = {'default', '1', 'iname', 'pent', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'entities'} = {'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#entities.parser', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'error-handler'} = {'checker', sub ($$$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{


$value = bless $value, 
'Message::DOM::DOMCore::ManakaiDOMErrorHandler'
  if 
ref $value eq 'CODE';


;}
my $r = 0;

{


$r = UNIVERSAL::isa ($value, 
'Message::DOM::IFLatest::DOMErrorHandler'
);


;}
$r}
, 'get_default', sub ($$) {
my ($self, $name) = @_;

{


$name = lc $name;


;}
my $r;

{


$r = sub {
  my (undef, $err) = @_;
  CORE::warn $err;
  return ($err->
severity
 !=
          
3
);
};


;}

{


$r = bless $r, 
'Message::DOM::DOMCore::ManakaiDOMErrorHandler'
  if 
ref $r eq 'CODE';


;}
$r}
, 'iname', 'onerr', 'otype', 'Message::DOM::IFLatest::DOMErrorHandler', 'setter', sub ($$$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{


$value = bless $value, 
'Message::DOM::DOMCore::ManakaiDOMErrorHandler'
  if 
ref $value eq 'CODE';


;}

{


$self->[1]->{
'onerr'
} = $value;


;}
}
, 'type', 'object'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'error-handler'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'error-handler'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'infoset'} = {'getter', sub ($$) {
my ($self, $name) = @_;

{


$name = lc $name;


;}
my $r = 0;

{


{

local $Error::Depth = $Error::Depth + 1;

{



  $r = !$self->
get_parameter

                                       ('validate-if-schema') &&
       !$self->
get_parameter

                                       ('entities') &&
       !$self->
get_parameter

                                       ('datatype-normalization') &&
       !$self->
get_parameter

                                       ('cdata-sections') && 
        $self->
get_parameter

                                       ('namespace-declarations') &&
        $self->
get_parameter

                                       ('well-formed') &&
        $self->
get_parameter

                                       ('element-content-whitespace') &&
        $self->
get_parameter

                                       ('comment') && 
        $self->
get_parameter

                                       ('namespaces');



;}


;}

;


;}
$r}
, 'iname', 'http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#infoset', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23cdata-sections+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23comments+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23datatype-normalization+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23element-content-whitespace+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23entities+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespace-declarations+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23namespaces+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23validate-if-schema+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0', 'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23well-formed+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '1'}], 'setter', sub ($$$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{


## TODO: Warning


;}
}
, 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'infoset'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'infoset'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'infoset'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'infoset'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespaces'} = {'default', '1', 'iname', 'nsaware', 'setparam', [{'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'namespaces'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespaces'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'namespaces'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespaces'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespace-declarations'} = {'default', '1', 'iname', 'pnsattr', 'setparam', [{'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'namespace-declarations'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespace-declarations'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'namespace-declarations'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'namespace-declarations'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'normalize-characters'} = {'iname', 'charnorm', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'normalize-characters'} = {'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#normalize-characters.parser', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'normalize-characters'} = {'default', '1', 'iname', 'http://suika.fam.cx/~wakaba/archive/2004/dom/ls#normalize-characters', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'schema-location'} = {'getter', sub ($$) {
my ($self, $name) = @_;

{


$name = lc $name;


;}
my $r = '';

{

my 
$v = $self->[1]->{
'scloc'
};
if (defined $v and @$v) {
  $r = join ' ', @$v;
} else {
  $r = 
undef
;
}


;}
$r}
, 'iname', 'scloc', 'setter', sub ($$$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{


$self->[1]->{
'scloc'
} = $value;


;}
}
, 'type', 'string'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'schema-location'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'schema-location'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'schema-type'} = {'iname', 'sctype', 'type', 'string'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'schema-type'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'schema-type'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'split-cdata-sections'} = {'default', '1', 'iname', 'splitcdsect', 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'split-cdata-sections'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'split-cdata-sections'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'split-cdata-sections'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'split-cdata-sections'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate'} = {'iname', 'val', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23validate-if-schema+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'validate'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'validate'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate-if-schema'} = {'iname', 'vals', 'setparam', [undef, {'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23validate+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'validate-if-schema'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate-if-schema'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'validate-if-schema'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'validate-if-schema'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'well-formed'} = {'default', '1', 'iname', 'wf', 'setparam', [{'tag:suika.fam.cx,2005-09:http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core%23canonical-form+http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom%23ManakaiDOMLatest', '0'}], 'setter', sub ($$$) {
my ($self, $name, $value) = @_;

{


$name = lc $name;


;}

{


$self->[1]->{
'wf'
} = $value
  unless $self->[2] eq 
'Message::DOM::IFLatest::LSParser'
;


;}
}
, 'type', 'boolean'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSParser'}->{'well-formed'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'well-formed'};
$Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::LSSerializer'}->{'well-formed'} = $Message::DOM::DOMCore::ManakaiDOMConfiguration{'Message::DOM::IFLatest::Document'}->{'well-formed'};
push @Message::DOM::IF::DOMException::ISA, 'Message::Util::Error' unless @Message::DOM::IF::DOMException::ISA;
push @Message::DOM::IFLevel1::DOMException::ISA, 'Message::Util::Error' unless @Message::DOM::IFLevel1::DOMException::ISA;
push @Message::DOM::IFLevel2::DOMException::ISA, 'Message::Util::Error' unless @Message::DOM::IFLevel2::DOMException::ISA;
push @Message::DOM::IFLevel3::DOMException::ISA, 'Message::Util::Error' unless @Message::DOM::IFLevel3::DOMException::ISA;
for ($Message::DOM::IF::DOMConfiguration::, $Message::DOM::IF::DOMError::, $Message::DOM::IF::DOMErrorHandler::, $Message::DOM::IF::DOMImplementation::, $Message::DOM::IF::DOMImplementationList::, $Message::DOM::IF::DOMImplementationSource::, $Message::DOM::IF::DOMLocator::, $Message::DOM::IF::DOMStringList::, $Message::DOM::IF::NameList::, $Message::DOM::IF::UserDataHandler::, $Message::DOM::IFLevel1::DOMImplementation::, $Message::DOM::IFLevel2::DOMImplementation::, $Message::DOM::IFLevel3::DOMConfiguration::, $Message::DOM::IFLevel3::DOMError::, $Message::DOM::IFLevel3::DOMErrorHandler::, $Message::DOM::IFLevel3::DOMImplementation::, $Message::DOM::IFLevel3::DOMImplementationList::, $Message::DOM::IFLevel3::DOMImplementationSource::, $Message::DOM::IFLevel3::DOMLocator::, $Message::DOM::IFLevel3::DOMStringList::, $Message::DOM::IFLevel3::NameList::, $Message::DOM::IFLevel3::UserDataHandler::){}
## License: <http://suika.fam.cx/~wakaba/archive/2004/8/18/license#Perl+MPL>
1;
