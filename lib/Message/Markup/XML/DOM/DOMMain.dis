Namespace:
  @lang:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @DOM3Core:
     http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/
Module:
  @Name:  dom
    @@Prefix:  w3c.org
  @FullName:
    @@lang: en
    @@@: DOM Core DataTypes and Objects
  @Namespace:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
  @Package:
    @@Type:
      lang:Perl
    @@@: DOMMain
  
  @Description:
    @@lang:en
    @@@:
      This module implements IDL/DOM core datatypes (such as
      DOMString) and objects (such as DOMImplementationRegistry).
  
  @License:
     license:Perl
  @Date.RCS:
     $Date: 2004/08/21 00:48:19 $
  @Require:
    @@Module:
      @@@Def:
        @@@@require: overload
        @@@@Type:
          lang:Perl
      @@@Description:
        @@@@lang:en
        @@@@@: Perl operator overloading pragma.
    @@Module:
      @@@Name: ManakaiDOM
      @@@Namespace:
        http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#
    @@Module:
      @@@Name: DOMCore
      @@@Namespace:
        http://suika.fam.cx/~wakaba/archive/2004/8/18/dom-core#
      @@@Description:
        @@@@lang:en
        @@@@@:
          DOM Core module.  Note that DOMCore module in turn
          requires this (DOMMain) module.

## Definition for built-in IDL types

Type:
  @Name: any

Type: 
  @Name: object

Type:
  @Name: unsigned-long-long
  @Def:
    @@Type: 
      lang:IDL-DOM
    @@@: unsigned long long

Type:
  @Name: unsigned-long
  @Def:
    @@Type: 
      lang:IDL-DOM
    @@@: unsigned long

Type:
  @Name: long

Type:
  @Name: unsigned-short
  @Def:
    @@Type: 
      lang:IDL-DOM
    @@@: unsigned short

Type:
  @Name: float

ConstGroup:
  @Name: boolean
  @Const:
    @@Name: true
    @@Value: 1
  @Const:
    @@Name: false
    @@Value: 0

## Null value

Const:
  @Name: null
  @Type: any
  @Value:
    @@Type: 
      lang:Perl
    @@@: undef

## Definition from DOM Core IDL

Type:
  @Name:  DOMString
  @Def:
    @@Type:
      lang:IDL-DOM
    @@@: sequence<unsigned short>
  @Spec:
    @@DOM3[list]:
      DOM3Core:core.html#ID-C74D1578
      DOM3Core:core.html#ID-5DFED1F0-h3
  @IntMethod:
    @@Name: fullyNormalized
    @@Description:
      @@lang:en
      @@@:
        In DOM 3, characters are fully normalized as defined in appendix B of XML
        1.1 if (a) the param "normalize-characters" was set to "true" while
        loading the document or the document was certified as defined in XML 1.1 or
        (b) the param "normalize-characters" was set to "true" while using the
        method "Document.normalizeDocument ()" or while using the method
        "Node.normalize ()".
  @IntMethod:
    @@Name: comparison
    @@Operator:
      @@@@: eq
      @@@Type: 
        lang:Perl
    @@Param:
      @@@Name: str
      @@@Type: DOMString
    @@Param:
      @@@Name: caseInsensitive
      @@@Type: boolean
    @@Return:
      @@@Type: boolean
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = $str eq $self;

Type:
  @Name:  DOMTimeStamp
  @Def:
    @@@:
      unsigned-long-long
    @@Description:
      @@@lang:en
      @@@@:
        An alias to DOMMain:unsigned-long-long.
  @Def:
    @@Type:
      lang:Perl
    @@Description:
      @@@lang:en
      @@@@:
        Defined as a reference in Perl binding.
  @Spec:
    @@DOM3[list]:
      DOM3Core:core.html#Core-DOMTimeStamp
  @Description:
    @@lang:en
    @@@: An absolute or relative time.  A number of milliseconds.
  @IntAttr:
    @@Name: unixTime
    @@Description:
      @@@lang:en
      @@@@: A number of seconds from the Epoch (i.e. 1970-01-01T00:00:00Z).
    @@Get:
      @@@Type: unsigned-long
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          use integer;
          $r = ($$self / 1000) - $EPOCH;
## TODO: Define $EPOCH
    @@Set:
      @@@Type: unsigned-long
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $$self = $given * 1000 + $EPOCH;
  @IntAttr:
    @@Name: millisecond
    @@Description:
      @@@lang:en
      @@@@: A number of milliseconds.  Value is between 0 and 999 (inclusive).
    @@Get:
      @@@Type: unsigned-long
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          $r = $$self % 1000;
    @@Set:
      @@@Type: unsigned-long
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          use integer;
          $$self = ($$self / 1000) * 1000 + $given;

TypeAlias:
  @Name:  DOMUserData
  @Type:  any
  @Spec:
    @@DOM3[list]:
      DOM3Core:core.html#Core-DOMUserData
  @Description:
    @@lang:en
    @@@: A reference to application data.

TypeAlias:
  @Name:  DOMObject
  @Type:  Object
  @Spec:
    @@DOM3[list]:
      DOM3Core:core.html#Core-DOMObject
  @Description:
    @@lang:en
    @@@: An object reference.

IF:
  @Name:  DOMImplementationRegistry
  @Level[list]:    3
  @Spec:
    @@DOM3[list]:
      DOM3Core:core.html#Bootstrap
      DOM3Core:java-binding.html#Level-3-Java-Binding-Extension
      DOM3Core:ecma-script-binding.html#Level-3-ECMAScript-Binding-Extension
  @Method:
    @@Name: newInstance
    @@Description:
      @@@lang:en
      @@@@:
        Construct a new instance of DOMImplementationRegistry
        (Taken from DOM Java Binding).
        \
        The DOMImplementationRegistry
        is initialized by application or implementation, depenging on
        the context, by first checking the value of the 
        array @org::w3c::dom::DOMImplementationSourceList,
        names of classes implementing the DOMImplementationSource
        interface.
        \
        DOMImplementationSource classes are not
        instantiated at this stage, while in Java Binding they are.
    @@Return:
      @@@Type: DOMImplementationRegistry
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@preprocess: none
        @@@@@:
          bless [@org::w3c::dom::DOMImplementationSourceList], shift;
  @Method:
     @@Name:  getDOMImplementation
     @@Param:
        @@@Name:  features
        @@@Type:  DOMString
     @@Return:
       @@@Type:  DOMImplementation
       @@@Description:
         @@@@lang:en
         @@@@@:
           The first implementation that has the derired features,
           or null if none is found.
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
           for (@$self) {
             $r = __DEEP{ $_->getDOMImplementation ($features) }__;
             last if defined $r;
           }
  @Method:
     @@Name:  getDOMImplementationList
     @@Param:
        @@@Name:  features
        @@@Type:  DOMString
     @@Return:
       @@@Type:  DOMImplementationList
       @@@Description:
         @@@@lang:en
         @@@@@: A list of implementations that support the desired features.
       @@@Def:
         @@@@Type:
           lang:Perl
         @@@@@:
           $r = __DEEP{ __CLASS{DOMImplementationList}__->__INT{new}__ }__;
           for (@$self) {
             __DEEP{
               $r->__INT{append}__ ($_->getDOMImplementationList ($features));
             }__;
           }
  @Method:
    @@Name: addSource
    @@Description:
      @@@lang:en
      @@@@:
        Add a DOMImplementationSource object to the list.
        (Taken from DOM Java Binding.)
    @@Param:
      @@@Name: s
      @@@Type: DOMImplementationSource
      @@@Description:
        @@@@lang:en
        @@@@@: The DOMImplementationSource to be registered.
    @@Return:
      @@@Def:
        @@@@Type:
          lang:Perl
        @@@@@:
          unless (defined $s) {
            __EXCEPTION{ManakaiDOMImplementationException}{
              -class => 'exception',
              -type => 'PARAM_NULL_POINTER',
              <Q:ManakaiDOMImplementationException:param-name> => 's',
            }__;
          }
          PUSH: {
            for (@$self) {
              last PUSH if overload::StrVal ($_) eq overload::StrVal ($s);
            }
            push @$self, $s;
          }

## DOMMain.dis ends here
