Module:
  @QName: 
    DIS:DISPerl
  @FullName:
    @@lang:en
    @@@: 
      <QUOTE::dis> Perl Support Module
  @Namespace:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Perl#
  
  @DISCore:author: DISCore|Wakaba
  @License:
     license:Perl+MPL
  @Date:
    @@@:
      $Date: 2005/09/30 13:06:21 $
    @@ContentType:
      dis:Date.RCS
  
  @DefaultFor:
    ManakaiDOM:all

  @Require:
    @@Module:
      @@@Name: DISCore
    @@Module:
      @@@Name: DISLang

Namespace:
  @DIS:
    http://suika.fam.cx/~wakaba/archive/2004/dis/
  @dis:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis--
  @dis2pm:
    http://suika.fam.cx/~wakaba/archive/2004/11/8/dis2pm#
  @DISCore:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Core#
  @DISLang:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Lang#
  @DISPerl:
    http://suika.fam.cx/~wakaba/archive/2004/dis/Perl#
  @disPerl:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#dis--Perl--
  @html5:
    http://www.w3.org/1999/xhtml
  @lang:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#
  @license:
     http://suika.fam.cx/~wakaba/archive/2004/8/18/license#
  @ManakaiDOM:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/manakai-dom#
  @pl:
    http://suika.fam.cx/~wakaba/archive/2004/8/18/lang#Perl--
  @rdf:
    http://www.w3.org/1999/02/22-rdf-syntax-ns#
  @rdfs:
    http://www.w3.org/2000/01/rdf-schema#

ElementTypeBinding:
  @Name: DataTypeDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISLang|DataType

ElementTypeBinding:
  @Name: LexTypeDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: DISCore|LexicalType

ElementTypeBinding:
  @Name: PropDef
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      rdf:Property

## -- For Perl

ForDef:
  @QName:
    ManakaiDOM:Perl
  @FullName:
    @@lang:en
    @@@: For Perl 5 binding

ElementTypeBinding:
  @Name: enDesc
  @ElementType:
    dis:Description
  @ShadowContent:
    @@lang:en

ElementTypeBinding:
  @Name: enFN
  @ElementType:
    dis:FullName
  @ShadowContent:
    @@lang:en

## -- Perl lexical types

LexTypeDef:
  @QName: DISPerl|Perl
  @enFN: Perl 5 code
  @rdfs:subClassOf: DISCore|String
  @subsetOf: DISCore|String

LexTypeDef:
  @QName: DISPerl|PackageName
  @enFN: Perl package name
  @Description:
    @@lang:en
    @@@:
      A fully qualified Perl package name. 
  @rdfs:subClassOf: DISPerl|Perl
  @subsetOf: DISPerl|Perl

ResourceDef:
  @QName: pl|package-name
  @AliasFor: DISPerl|PackageName

LexTypeDef:
  @QName: DISPerl|SubName
  @FullName:
    @@lang:en
    @@@: Perl subroutine name
  @rdfs:subClassOf: DISPerl|Perl
  @subsetOf: DISPerl|Perl

LexTypeDef:
  @QName: DISPerl|MethodName
  @FullName:
    @@lang:en
    @@@:
      Perl method name
  @Description:
    @@lang:en
    @@@:
      Perl (unqualified) method names. 
  @rdfs:subClassOf: DISPerl|SubName
  @subsetOf: DISPerl|SubName

LexTypeDef:
  @QName: DISPerl|SubPrototype
  @FullName:
    @@lang:en
    @@@:
      Perl subroutine prototype 
  @rdfs:subClassOf: DISPerl|Perl
  @subsetOf: DISPerl|Perl

## -- Perl datatypes

DataTypeDef:
  @QName: DISPerl|Any
  @enFN: Any
  @rdfs:subClassOf: DISLang|Any

DataTypeDef:
  @QName: DISPerl|Scalar
  @FullName:
    @@lang:en
    @@@: Perl Scalar Value
  @rdfs:subClassOf: DISPerl|Any

ResourceDef:
  @QName: pl|Scalar
  @AliasFor: DISPerl|Scalar

DataTypeDef:
  @QName: DISPerl|String
  @FullName:
    @@lang:en
    @@@: Perl string value
  @rdfs:subClassOf: DISLang|String
  @rdfs:subClassOf: DISPerl|Scalar
  @subsetOf: DISLang|String
  @subsetOf: DISPerl|Scalar

DataTypeDef:
  @QName: DISPerl|Number
  @enFN: Perl number value
  @rdfs:subClassOf: DISPerl|Scalar
  @subsetOf: DISPerl|Scalar

DataTypeDef:
  @QName: DISPerl|Boolean
  @FullName:
    @@lang:en
    @@@: Perl Boolean Value
  @rdfs:subClassOf: DISPerl|Scalar
  @subsetOf: DISPerl|Scalar

DataTypeDef:
  @QName: DISPerl|Ref
  @FullName:
    @@lang:en
    @@@: Perl reference
  @rdfs:subClassOf: DISPerl|Scalar
  @subsetOf: DISPerl|Scalar

ResourceDef:
  @QName: DISPerl|Reference
  @AliasFor: DISPerl|Ref

DataTypeDef:
  @QName: DISPerl|BlessedRef
  @enFN:
    Perl <Perl::bless>ed reference
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

DataTypeDef:
  @QName: DISPerl|REF
  @enFN: Perl reference to reference
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

DataTypeDef:
  @QName: DISPerl|SCALAR
  @FullName:
    @@lang:en
    @@@: Perl reference to scalar
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

ResourceDef:
  @QName: pl|SCALAR
  @AliasFor: DISPerl|SCALAR

DataTypeDef:
  @QName: DISPerl|Regexp
  @enFN: Perl regular expression
  @rdfs:subClassOf: DISPerl|SCALAR
  @subsetOf: DISPerl|Scalar
  @rdf:type: DISLang|Class
  @DISPerl:packageName: Regexp

DataTypeDef:
  @QName: DISPerl|Array
  @FullName:
    @@lang:en
    @@@: Perl Array
  @rdfs:subClassOf: DISPerl|Any
  @subsetOf: DISPerl|Any

ResourceDef:
  @QName: pl|Array
  @AliasFor: DISPerl|Array

DataTypeDef:
  @QName: DISPerl|ARRAY
  @FullName:
    @@lang:en
    @@@: Perl array reference
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

ResourceDef:
  @QName: pl|ARRAY
  @AliasFor: DISPerl|ARRAY

DataTypeDef:
  @QName: DISPerl|Hash
  @FullName:
    @@lang:en
    @@@: Perl Hash
  @rdfs:subClassOf: DISPerl|Any
  @subsetOf: DISPerl|Any

ResourceDef:
  @QName: pl|Hash
  @AliasFor: DISPerl|Hash

DataTypeDef:
  @QName: DISPerl|HASH
  @FullName:
    @@lang:en
    @@@: Perl hash reference
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

ResourceDef:
  @QName: pl|HASH
  @AliasFor: DISPerl|HASH

ResourceDef:
  @QName: pl|hash
  @AliasFor: DISPerl|HASH
  @ImplNote:
    @@lang:en
    @@@:
      <Q::Perl:hash> is obsolete; use <Q::Perl:HASH> instead.

DataTypeDef:
  @QName: DISPerl|CODE
  @FullName:
    @@lang:en
    @@@: Perl code reference
  @rdfs:subClassOf: DISPerl|Ref
  @subsetOf: DISPerl|Ref

ResourceDef:
  @QName: pl|CODE
  @AliasFor: DISPerl|CODE

## -- Perl constructs

ResourceTypeDef:
  @QName: DISPerl|Variable
  @enFN: Perl variable

ResourceTypeDef:
  @QName: DISPerl|ScalarVariable
  @enFN: Perl scalar variable
  @rdfs:subClassOf: DISPerl|Variable
  @subsetOf: DISPerl|Variable

ResourceTypeDef:
  @QName: DISPerl|ArrayVariable
  @enFN: Perl array variable
  @rdfs:subClassOf: DISPerl|Variable
  @subsetOf: DISPerl|Variable

ResourceTypeDef:
  @QName: DISPerl|HashVariable
  @enFN: Perl hash variable
  @rdfs:subClassOf: DISPerl|Variable
  @subsetOf: DISPerl|Variable

ResourceTypeDef:
  @QName: DISPerl|List
  @enFN: Perl list
  @rdf:type: DISLang|AnyDataType

ResourceDef:
  @QName: AsStringMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      Methods to searialize an object as a string. 

ResourceDef:
  @QName: NewMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      Methods to construct an instance of a class. 

ResourceDef:
  @QName:CloneMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:Methods to make a clone of an object. 

ResourceDef:
  @QName: ImportMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      The <Perl::import> method.

ResourceDef:
  @QName: UnimportMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      The <Perl::unimport> method.

ResourceDef:
  @QName: ISAMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      The <Perl::isa> method.

ResourceDef:
  @QName: CanMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      The <Perl::can> method.

ResourceDef:
  @QName: VERSIONMethod
  @rdf:type: DISLang|Operator
  @FullName:
    @@lang:en
    @@@:
      The <Perl::VERSION> method.

## -- Perl construct properties

PropDef:
  @QName: isExportOK
  @Description:
    @@lang:en
    @@@:
      Whether a subject resource should be listed in <Perl::@EXPORT_OK> 
      or not.
  @dataType: DISCore|Boolean
  @multipleProperties: DISCore|Single

PropDef:
  @QName: isNamedParameter
  @Description:
    @@lang:en
    @@@:
      Whether the method parameter should be passed by named parameter 
      (hash) style or not. 
  @dataType: DISCore|Boolean
  @rdfs:domain:
    DISLang:MethodParameter
  @multipleProperties: DISCore|Single

PropDef:
  @QName: defaultValueHasSelfReference
  @Description:
    @@lang:en
    @@@:
      Whether the <Q::dis:DefaultValue> has a reference to itself or not.
  @dataType: DISCore|Boolean
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|name
  @enFN: Perl name (or any identifying string)
  @rdfs:subPropertyOf: dis|AppName
  @subsetOf: dis|AppName
  @dataType: DISPerl|Perl
  @multipleProperties: DISCore|UnorderedList

PropDef:
  @QName: DISPerl|packageName
  @FullName:
    @@lang:en
    @@@:
      Perl package name
  @rdfs:subPropertyOf: DISPerl|name
  @subsetOf: DISPerl|name
  @dataType: DISPerl|PackageName
  @multipleProperties: DISCore|UnorderedList

PropDef:
  @QName: DISPerl|interfacePackageName
  @FullName:
    @@lang:en
    @@@:
      Perl interface package name
  @rdfs:subPropertyOf: DISPerl|packageName
  @subsetOf: DISPerl|packageName
  @dataType: DISPerl|PackageName
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|classPackageName
  @FullName:
    @@lang:en
    @@@:
      Perl class package name
  @rdfs:subPropertyOf: DISPerl|packageName
  @subsetOf: DISPerl|packageName
  @dataType: DISPerl|PackageName
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|subName
  @enFN: Perl subroutine name
  @rdfs:subPropertyOf: dis|AppName
  @subsetOf: dis|AppName
  @dataType: DISPerl|SubName
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|methodName
  @enFN: Perl method name
  @rdfs:subPropertyOf: DISPerl|subName
  @subsetOf: DISPerl|subName
  @dataType: DISPerl|SubName
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|constName
  @enFN: Perl constant function name
  @rdfs:subPropertyOf: DISPerl|subName
  @subsetOf: DISPerl|subName
  @dataType: DISPerl|SubName
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|exportTagName
  @enFN: Perl export tag name
  @rdfs:subPropertyOf: DISPerl|name
  @subsetOf: DISPerl|name
  @dataType: DISCore|String
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|variableName
  @enFN: Perl variable name without type prefix
  @rdfs:subPropertyOf: DISPerl|name
  @subsetOf: DISPerl|name
  @dataType: DISCore|String
  @multipleProperties: DISCore|Single

PropDef:
  @QName: DISPerl|paramName
  @enFN: Perl parameter name without type prefix
  @rdfs:subPropertyOf: DISPerl|variableName
  @subsetOf: DISPerl|variableName
  @dataType: DISCore|String
  @multipleProperties: DISCore|Single

## -- Perl binding specific properties and datatypes

LexTypeDef:
  @QName:
    lang:Perl
  @enFN:
    Perl 5 code with <QUOTE::dis> preprocessing instructions
  @rdfs:subClassOf: DISCore|NSString

PropDef:
  @QName: DISPerl|moduleSuffix
  @Description:
    @@lang:en
    @@@:
      A string suffixing module names.
  @dataType: DISCore|String
  @multipleProperties: DISCore|Single

ResourceDef:
  @QName:
    ManakaiDOM:moduleSuffix
  @AliasFor: DISPerl|moduleSuffix

PropDef:
  @QName: DISPerl|propHashKey
  @enFN: Internal hash key name
  @enDesc:
    An abbreviated name of the property used when it
    is being a hash key.
  @dataType: DISCore|String
  @multipleProperties: DISCore|Single

## -- Code fragment

ResourceDef:
  @QName: StringRef
  @Def:
    @@ContentType: lang|Perl
    @@@:
      if (defined $given) {
        if (ref $given eq 'SCALAR') {
          $result = $given;
        } else {
          require Scalar::Util;
          $result = ($Message::Util::ManakaiStringRef::Value{$given}
                     ||= \($given));
          Scalar::Util::weaken ($Message::Util::ManakaiStringRef::Value{$given});
        }
      } else {
        $result = null;
      }
  @rdf:type: DISPerl|BlockCode

ResourceDef:
  @QName: HashStringRef
  @Def:
    @@ContentType: lang|Perl
    @@@:
      if (defined $given) {
        if (ref $given eq 'SCALAR') {
          $result = $given;
        } else {
          require Scalar::Util;
          $result = ($Message::Util::ManakaiStringRef::Value{$given}
                     ||= \($given));
          Scalar::Util::weaken ($Message::Util::ManakaiStringRef::Value{$given});
        }
      } else {
        CORE::delete $result;
      }
  @rdf:type: DISPerl|BlockCode

## -- The dis:Perl tree language vocabulary

ResourceDef:
  @QName:
    dis:Perl
  @FullName:
    @@lang:en
    @@@: 
     <QUOTE::dis> tree fragment generating Perl code
  @rdf:type: DISCore|AnyType
  @rdfs:subClassOf: 
    lang:dis
  @subsetOf: lang|dis

ResourceDef:
  @QName: TreeElementType
  @rdf:type:
    rdfs:Class
  @rdfs:subClassOf:
    DISLang:TreeElementType
  @subsetOf: DISLang|TreeElementType
  @Description:
    @@lang:en
    @@@:
      A <Q::dis:Perl> tree vocabulary element type.

ElementTypeBinding:
  @Name: TreeElementType
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: TreeElementType

TreeElementType:
  @QName: cloneCode
  @Description:
    @@lang:en
    @@@:
      Copies definition from other resource.
  @dataType: MemRef

## -- The dis:Perl block preprocessing vocabulary

ResourceTypeDef:
  @QName: BlockElementType
  @enDesc: Block-level element type
  @Description:
    @@lang:en
    @@@:
      A <Q::dis:Perl> block preprocessing vocabulary element type.

ElementTypeBinding:
  @Name: BlockElementType
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: BlockElementType

BlockElementType:
  @QName:
    disPerl:ASSERT
  @Description:
    @@lang:en
    @@@:
      An assertion. 

BlockElementType:
  @QName:
    disPerl:CODE
  @Description:
    @@lang:en
    @@@:
      A block code fragment. 
  @dataType: DISCore|QName

BlockElementType:
  @QName:
    disPerl:DEEP
  @Description:
    @@lang:en
    @@@:
      Sets the method call stack level deeper.  Currently it is 
      used to set the depth for reporting the position where
      an exception has thrown.
  @dataType: DISPerl|Perl

BlockElementType:
  @QName:
    disPerl:UNDEEP
  @Description:
    @@lang:en
    @@@:
      Sets the method call stack level shallwer. 
  @dataType: DISPerl|Perl

BlockElementType:
  @QName:
    disPerl:FOR
  @Description:
    @@lang:en
    @@@:
      <QUOTE::For> selection.

BlockElementType:
  @QName: 
    disPerl:WHEN
  @Description:
    @@lang:en
    @@@:
      Conditional section.  This element type is 
      deprecated in favor of <Q::disPerl::FOR>.  <Q::Util:DIS>
      module no longer support <Q::disPerl:WHEN> while
      <FILE::cdis2pm.pl> implements it. 

BlockElementType:
  @QName: 
    disPerl:FILE
  @Description:
    @@lang:en
    @@@:
       The name of source file. 

BlockElementType:
  @QName:
    disPerl:LINE
  @Description:
    @@lang:en
    @@@:
      The line number in source code.

BlockElementType:
  @QName:
    disPerl:PACKAGE
  @Description:
    @@lang:en
    @@@:
      The current Perl package name. 

## -- The dis:Perl inline preprocessing vocabulary

ResourceTypeDef:
  @QName: InlineElementType
  @enFN: Inline element type
  @Description:
    @@lang:en
    @@@:
      A <Q::dis:Perl> inline preprocessing vocabulary element type.

ElementTypeBinding:
  @Name: InlineElementType
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: InlineElementType

InlineElementType:
  @QName:
    disPerl:Q
  @Description:
    @@lang:en
    @@@:
      A qualified name (QName).  It is replaced by a string literal 
      it value is a URI reference expanded from the QName.
  @dataType: DISCore|QName

InlineElementType:
  @QName:
    disPerl:M
  @dataType: DISLang|MemberRef
  @Description:
    @@lang:en
    @@@:
      A method (object method) call. 

InlineElementType:
  @QName:
    disPerl:ClassM
  @dataType: DISLang|MemberRef
  @Description:
    @@lang:en
    @@@:
      A class method call. 

InlineElementType:
  @QName:
    disPerl:AG
  @Description:
    @@lang:en
    @@@:
      An attribute getting.
  @dataType: DISLang|MemberRef

InlineElementType:
  @QName:
    disPerl:AS
  @Description:
    @@lang:en
    @@@:
      An attribute setting.
  @dataType: DISLang|MemberRef

InlineElementType:
  @QName:
    disPerl:Class
  @dataType: DISCore|TFQNames
  @Description:
    @@lang:en
    @@@:
      A class package specification. 

InlineElementType:
  @QName:
    disPerl:ClassName
  @dataType: DISCore|TFQNames
  @Description:
    @@lang:en
    @@@:
      A class package name string. 

InlineElementType:
  @QName:
    disPerl:IF
  @dataType: DISCore|TFQNames
  @Description:
    @@lang:en
    @@@:
      An interface package specification. 

InlineElementType:
  @QName:
    disPerl:IFName
  @dataType: DISCore|TFQNames
  @Description:
    @@lang:en
    @@@:
      An interface package name. 

InlineElementType:
  @QName:
    disPerl:C
  @dataType: DISLang|MemberRef
  @Description:
    @@lang:en
    @@@: 
      A constant value (not a constant itself - replaced by its value).

InlineElementType:
  @QName:
    disPerl:Code
  @Description:
    @@lang:en
    @@@:
      An inline code fragment (<Q::dis2pm:InlineCode>).

## -- Predefined code templates

ResourceTypeDef:
  @QName: DISPerl|InlineCode
  @enFN: Inline code fragment
  @Description:
    @@lang:en
    @@@:
      An inline code fragment referred by <CODE::<lt>CODE::<VAR::qname><gt>> 
      preprocessed token.
      \
      {NOTE:: If a code fragment is written in Perl (i.e. typed as 
              <Q::dis:Perl> or its subtypes), line breaks are 
              replaced by a <CHAR::SPACE>.  Use escape (<Perl::\n>) if 
              it is significant.
      \
      }
  @rdfs:subClassOf:
    DISCore:AnyDefContainer
  @subsetOf: DISCore|AnyDefContainer

ResourceDef:
  @QName: dis2pm|InlineCode
  @AliasFor: DISPerl|InlineCode

ResourceTypeDef:
  @QName: DISPerl|BlockCode
  @enFN: Block-level code fragment
  @Description:
    @@lang:en
    @@@:
      A block code fragment referred by <CODE::__CODE{<VAR::qname>}__> 
      preprocessed block.
  @rdfs:subClassOf:
    DISCore:AnyDefContainer
  @subsetOf: DISCore|AnyDefContainer

ResourceDef:
  @QName: dis2pm|BlockCode
  @AliasFor: DISPerl|BlockCode

ResourceTypeDef:
  @QName: CodeParameter
  @Description:
    @@lang:en
    @@@:
      Paramaters for <Q::dis2pm:BlockCode> or <Q::dis2pm:InlineCode>.
      \
      {P:: A <Q::CodeParameter> resource should have properties:
          
          \
          - <Q::dis:Name> or <Q::dis:QName>::: Parameter name.
                             Namespaces are ignored.
          \
          - <Q::dis:Type>::: Parameter value datatype. 
          \
          - <Q::dis:In>::: Whether the caller sets a value or not. 
                           The default is <CODE::1> (true).
          \
          - <Q::dis:Out>::: Whether the callee sets a value or not. 
                            The default is <CODE::0> (false).
          \
          - <Q::paramStyle>::: Value type of parameter. 
                            The default is <CODE::any>.
          \
      }
  @rdfs:subClassOf: DISLang|AnyParameter
  @subsetOf: DISLang|AnyParameter

PropDef:
  @QName: paramStyle
  @Description:
    @@lang:en
    @@@:
      How parameter value should be specified.
  @dataType: ParamStyleValue

ResourceTypeDef:
  @QName: ParamStyleValue
  @Description:
    @@lang:en
    @@@:
      Possible values for <Q::paramStyle> property.
      \
      - <CODE::any>::: Any type of value.
      \
      - <CODE::var>::: Variable. 

## -- Assertion types for disPerl:ASSERT

ResourceTypeDef:
  @QName: AssertionType
  @Description:
    @@lang:en
    @@@:
      Assertion types.

ElementTypeBinding:
  @Name: AType
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type: AssertionType

AType:
  @QName:isPositive
  @Description:
    @@lang:en
    @@@:
      Ensures the value is a positive. 
      \
      {NOTE:: Whether the value is a valid number or not is not a matter; 
              this type ensures that the value is assumed as a positive 
              value by Perl. 
      \
      }

AType:
  @QName:invariant
  @Description:
    @@lang:en
    @@@:
      The assertion is always fails.  It is intended to be used 
      for flow invariant, e.g.: 
      \
      if ($mode) {
        # ...
      } else {
        __ASSERT{DISPerl:invariant::
          msg => {qq{Mode "$mode" should be a true value}},
        }__;
      } 

ElementTypeBinding:
  @Name: ResourceTypeDef
  @ElementType: 
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      rdfs:Class
    @@rdfs:subClassOf:
      rdfs:Class
    @@subsetOf:
      rdfs:Class

ElementTypeBinding:
  @Name: Param
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:MethodParameter

## -- Interface for standard Perl modules

ICDef:
  @IFQName: UNIVERSALInterface
  @ClsQName: UNIVERSAL

  @IFPackName: UNIVERSAL
  @ClsPackName: UNIVERSAL

  @IFFileName: UNIVERSAL-interface
  @ClsFileName: UNIVERSAL

  @enDesc:
    The <Class::UNIVERSAL> class is a base class for <EM::all>
    classes (blessed references).

  @Method:
    @@Operator:
      @@@@: ISAMethod
      @@@ContentType: DISCore|QName
    @@enDesc:
      Returns whether the class or object is an instance of a class or interface.
    @@Param:
      @@@Name: typeArg
      @@@Type: DISPerl|String
      @@@enDesc:
        The name of the package.
    @@Return:
      @@@Type: DISPerl|Boolean
      @@@trueCase:
        @@@@enDesc:
          The class or object is an instance of <P::typeArg>.
      @@@falseCase:
        @@@@enDesc:
          The class or object is <EM::not> an instance of <P::typeArg>.
  @Method:
    @@Operator:
      @@@@: CanMethod
      @@@ContentType: DISCore|QName
    @@enDesc:
      Checks if the object or class has a method.
      
      {NOTE:: This method does not function for manakai interfaces,
              since they does not have method definitions in source code.
      }

      {NOTE:: This method cannot check whether an object will be
              able to provide a method through <Perl::AUTOLOAD>.
      }
    @@Param:
      @@@Name: methodArg
      @@@Type: DISPerl|String
      @@@enDesc: The name of the method.
    @@Return:
      @@@Type: DISPerl|CODE
      @@@enDesc:
        A reference to the <Perl::sub>.
      @@@nullCase:
        @@@@enDesc:
          There is no method called <P::methodArg>.
  @Method:
    @@Operator:
      @@@@: VERSIONMethod
      @@@ContentType: DISCore|QName
    @@enDesc:
      Returns the package version, i.e. the value of the variable
      <Perl::$VERSION> in the package the object is blessed into.
    @@Param:
      @@@Name: requireArg
      @@@Type: DISPerl|Scalar
      @@@enDesc:
        The required version.  It will be compared to the package version
        and if the package version is not greater than or equal
        to <P::requireArg>, then <Perl::die>s.
      @@@nullCase:
        @@@@enDesc:
          No comparison and <Perl::die>ing is done.
    @@Return:
      @@@Type: DISPerl|Scalar
      @@@enDesc:
        The value of the <Perl::$VERSION>.
      @@@nullCase:
        @@@@enDesc: 
          No package version information.
##UNIVERSAL

CDef:
  @ClsQName: Exporter

  @ClsPackName: Exporter

  @enDesc:
    The <Class::Exporter> module implements default <Perl::import>
    method for modules.

  @Method:
    @@Operator:
      @@@@: ImportMethod
      @@@ContentType: DISCore|QName
    @@Param:
      @@@Name: names
      @@@Type: DISPerl|List
      @@@enDesc:
        A list of names of functions, variables and / or tags to export.
    @@Return:
##Exporter

CDef:
  @ClsQName: TieArray

  @IFPackName: 
    Tie::Array
  @ClsPackName:
    Tie::Array

  @enDesc:
    The <Perl::Tie::Array> module is a base class for tied arrays.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: TIEARRAY
      @@@ContentType: DISPerl|Perl
    @@ManakaiDOM:isStatic:1
    @@enDesc:
      Associates an array instance with the class.
    @@Param:
      @@@Name: list
      @@@Type: DISPerl|List
      @@@enDesc:
        Additional arguments needed to complete the association.
    @@Return:
      @@@Type: DISPerl|BlessedRef
      @@@enDesc:
        An object of a class which provides the other methods.
  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: STORE
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Stores datum <P::value> into <P::index> for the tied array
      associated with the object.  If this makes the array larger
      then class's mapping of <DOM::null> should be returned
      for new positions.
    @@Param:
      @@@Name: index
      @@@Type: DISPerl|Number
      @@@enDesc:
        The position to store <P::value>.
    @@Param:
      @@@Name: value
      @@@Type: DISPerl|Scalar
      @@@enDesc:
        The data to store.
     @@Return:
  
  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: FETCH
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Retrieves the datum in <P::index> for the tied array
      associated with the object.
    @@Param:
      @@@Name: index
      @@@Type: DISPerl|Number
      @@@enDesc:
        The index in the array.
    @@Return:
      @@Type: DISPerl|Scalar
      @@enDesc:
        The data at <P::index>.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: FETCHSIZE
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Returns the total number of items in the tied array
      associated with the object, i.e. <Perl::scalar <html5:var::@array>>.
    @@Return:
      @@@Type: DISPerl|Number
      @@@enDesc:
        The number of items.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: STORESIZE
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Sets the total number of items in the tied array
      associated with the object.  If this makes the array
      larger then class's mapping of <DOM::null> should
      be returned for new positions.  If the array becomes
      smaller then entries beyond <P::count> should be removed.
    @@Param:
      @@@Name: count
      @@@Type: DISPerl|Number
      @@@enDesc:
        The new total number of items.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: EXTEND
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Tells that the array is likely to grow to have <P::count>
      entries.  This information can be used to optimize allocation.
      
      This method need do nothing.
    @@Param:
      @@@Name: count
      @@@Type: DISPerl|Number
      @@@enDesc: New size.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: EXISTS
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Verifies that the <P::key>th item exists in the tied
      array associated with the object.
    @@Param:
      @@@Name: key
      @@@Type: DISPerl|Number
      @@@enDesc: The index of the item.
    @@Return:
      @@@Type: DISPerl|Boolean
      @@@trueCase:
        @@@@enDesc:
          There is <P::key>th item.
      @@@falseCase:
        @@@@enDesc:
          There is <EM::no> <P::key>th item.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: DELETE
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Removes the <P::key>th item from the tied array associated
      with the object.
    @@Param:
      @@@Name: key
      @@@Type: DISPerl|Number
      @@@enDesc:
        The index of the item.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: CLEAR
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Clears all values from the tied array assocaited with the object.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: DESTROY
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Normal object destructor method.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: PUSH
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Appends items to the tied array associated with the object.
    @@Param:
      @@@Name: list
      @@@Type: DISPerl|List
      @@@enDesc: 
        Items to add.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: POP
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Removes the last item of the tied array associated with the object
      and returns the item.
    @@Return:
      @@@Type: DISPerl|Scalar
      @@@enDesc: The removed item.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: SHIFT
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Removes the first item of the tied array associated with the object
      and returns the item.
    @@Return:
      @@@Type: DISPerl|Scalar
      @@@enDesc: The removed item.

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: UNSHIFT
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Inserts items at the beginning of the tied array associated with
      the object.
    @@Param:
      @@@Name: list
      @@@Type: DISPerl|List
      @@@enDesc: Items to add.
    @@Return:

  @Method:
    @@ManakaiDOM:isForInternal:1
    @@Operator:
      @@@@: SPLICE
      @@@ContentType: DISPerl|Perl
    @@enDesc:
      Performes the equivalent operation of <Perl::splice> on the
      tied array associated with the object.
    @@Param:
      @@@Name: offset
      @@@Type: DISPerl|Number
      @@@enDesc:
        The offset.  The default is <Perl::0>.
    @@Param:
      @@@Name: length
      @@@Type: DISPerl|Number
      @@@enDesc:
       The length.  The default is the rest of the array.
    @@Param:
      @@@Name: list
      @@@Type: DISPerl|List
      @@@enDesc:
        The item to replace by.
    @@Return:
      @@@Type: DISPerl|List
      @@@enDesc:
        A list of the original <P::length> items at <P::offset>.
##TieArray

ElementTypeBinding:
  @Name: IFQName
  @ElementType:
    dis:QName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF

ElementTypeBinding:
  @Name: ClsQName
  @ElementType:
    dis:QName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: IFISA
  @ElementType:
    dis:ISA
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF

ElementTypeBinding:
  @Name: ClsISA
  @ElementType:
    dis:ISA
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: IFPackName
  @ElementType:
    DISPerl:packageName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF
    @@ContentType: DISPerl|PackageName

ElementTypeBinding:
  @Name: ClsPackName
  @ElementType:
    DISPerl:packageName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass
    @@ContentType: DISPerl|PackageName

ElementTypeBinding:
  @Name: IFFileName
  @ElementType:
    dis:FileName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForIF

ElementTypeBinding:
  @Name: ClsFileName
  @ElementType:
    dis:FileName
  @ShadowContent:
    @@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: ICDef
  @ElementType: 
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      @@@@: dis|MultipleResource
      @@@ForCheck: !ManakaiDOM|ForIF !ManakaiDOM|ForClass
    @@resourceFor: ManakaiDOM|ForIF
    @@resourceFor: ManakaiDOM|ForClass

    @@rdf:type:
      @@@@: DISLang|Interface
      @@@ForCheck: ManakaiDOM|ForIF

    @@rdf:type:
      @@@@: DISLang|Class
      @@@ForCheck: ManakaiDOM|ForClass

    @@Implement:
      @@@@: ||+||ManakaiDOM|ForIF
      @@@ContentType: DISCore|TFPQNames
      @@@ForCheck: ManakaiDOM|ForClass

ElementTypeBinding:
  @Name: CDef
  @ElementType: 
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      @@@@: dis|MultipleResource
      @@@ForCheck: !ManakaiDOM|ForIF !ManakaiDOM|ForClass

    @@resourceFor: ManakaiDOM|ForClass

    @@rdf:type:
      @@@@: DISLang|Class
      @@@ForCheck: ManakaiDOM|ForClass


ElementTypeBinding:
  @Name: Method
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:Method


ElementTypeBinding:
  @Name: Return
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      DISLang:MethodReturn

ElementTypeBinding:
  @Name: nullCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:
      @@@is-null:1

ElementTypeBinding:
  @Name: trueCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:true
    @@Type: DISPerl|Boolean

ElementTypeBinding:
  @Name: falseCase
  @ElementType:
    dis:ResourceDef
  @ShadowContent:
    @@rdf:type:
      ManakaiDOM:InCase
    @@Value:false
    @@Type: DISPerl|Boolean

ElementTypeBinding:
  @Name: enDesc
  @ElementType:
    dis:Description
  @ShadowContent:
    @@lang:en
