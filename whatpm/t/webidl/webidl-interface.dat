#data
interface abc;
#errors
1;non-module definition;s
#document
| interface abc;

#data
interface abc : def;
#errors
1.20;before interface block;m
#document

#data
interface abc : def;
interface xyz;
#errors
1.20;before interface block;m
2;non-module definition;s
#document
| interface xyz;

#data
module m {
interface x {
  attribute long a;
  attribute long b;
};};
#errors
#document
| module m {
| 
| interface x {
|   attribute long a;
|   attribute long b;
| };
| 
| };

#data
module m {
interface x {
  attribute long a;
  attribute long a;
};};
#errors
4;duplicate interface member;m
#document
| module m {
| 
| interface x {
|   attribute long a;
|   attribute long a;
| };
| 
| };

#data
module m {
interface x {
  attribute long a;
};
interface x {
  attribute long a;
};};
#errors
5;duplicate qname;m

#data
module m {
interface x {
  attribute long a;
  attribute long _a;
};};
#errors
4;duplicate interface member;m

#data
module m {
interface x {
  attribute long a;
  attribute long __a;
};};
#errors

#data
module m {
interface x {
  attribute long a;
  const long a = 1;
};};
#errors
4;duplicate interface member;m

#data
module m {
interface x {
  long a ();
  long a ();
};};
#errors

#data
interface x {};
interface y : x {};
#errors
1;non-module definition;s
2;non-module definition;s

#data
interface x;
interface y : x {};
#errors
1;non-module definition;s
2;non-module definition;s

#data
interface x : y {};
#errors
1;non-module definition;s
1;interface not defined;m;y

#data
module m {
  interface x {};
  interface y : x {};
};
#errors

#data
module m {
  interface x {};
};
module n {
  interface y : x {};
};
#errors
5;interface not defined;m;x

#data
module m {
  interface x : y::DOMString {};
};
#errors
2;interface not defined;m;y::DOMString

#data
module m {
  interface _DOMString {};
  interface x : _DOMString {};
};
#errors

#data
module m {
  interface _DOMString {};
  interface x : m::_DOMString {};
};
#errors
3;interface not defined;m;m::DOMString

#data
module m {
  interface _DOMString {};
  interface x : m::DOMString {};
};
#errors
3;interface not defined;m;m::DOMString

#data
module m {
  interface _DOMString {};
  interface x : ::m::_DOMString {};
};
#errors
3;interface not defined;m;::m::DOMString

#data
interface x {}; // defines x1
module m {
  interface y : x {}; // inherits x1
  interface x : x {}; // defines x2, which inherits x1
  interface z : x {}; // inherits x2
};
#errors
1;non-module definition;s

#data
module m {
  interface x : x {};
};
#errors
2;interface not defined;m;x

#data
module m {
  interface y : x {};
  interface x {};
};
#errors
2;interface not defined;m;x

#data
module m {
  interface x {};
  interface y {};
  interface z : x, y {};
};
#errors

#data
module m {
  interface x : ::x {};
};
#errors
2;interface not defined;m;::x

#data
module m {
  interface x {};
};
module n {
  interface y : m::x {};
};
#errors

#data
module m {
  interface x {};
  module n {
    interface y : x {};
  };
};
#errors
4;interface not defined;m;x

#data
module m {
  module n {
    interface x {};
  };
};
module l {
  interface y : m::n::x {};
};
#errors

#data
module m {
  module n {};
  interface x : n {};
};
#errors
3;interface not defined;m;n

#data
module m {
  exception x {};
  interface y : x {};
};
#errors
3;interface not defined;m;x

#data
module m {
  interface x;
  interface y : x {};
};
#errors

#data
module m {
  interface i {
    const long t = 234;
  };
};
#errors

#data
module m {
  interface i {
    const boolean t = 234;
  };
};
#errors
3:234;const type mismatch;m;boolean

#data
module m {
  interface i {
    const unsigned long t = -02;
  };
};
#errors
3:-2;const value out of range;m

#data
module m {
  interface i {
    const any t = 234;
  };
};
#errors

#data
module m {
  interface i {
    const long t = 234.4;
  };
};
#errors
3:234.4;const type mismatch;m;long

#data
module m {
  interface i {
    const long t =TRUE;
  };
};
#errors
3:TRUE;const type mismatch;m;long

#data
module m {
  interface i {
    const DOMString t = 234;
  };
};
#errors
3:234;const type mismatch;m;DOMString

#data
module m {
  const octet LF = 0x0A;
};
#errors
#document
| module m {
| 
| const octet LF = 10;
| 
| };

#data
module m {
  const octet LF = 0X0a;
};
#errors
#document
| module m {
| 
| const octet LF = 10;
| 
| };

#data
module m {
  const octet LF = 012;
};
#errors
#document
| module m {
| 
| const octet LF = 10;
| 
| };

#data
module m {
  const octet LF = 10;
};
#errors
#document
| module m {
| 
| const octet LF = 10;
| 
| };

#data
module m {
  const octet LF = 10.00;
};
#errors
2:10;const type mismatch;m;octet
#document
| module m {
| 
| const octet LF = 10;
| 
| };

#data
module m {
  const octet CR = -0x0D;
};
#errors
2:-13;const value out of range;m
#document
| module m {
| 
| const octet CR = -13;
| 
| };
