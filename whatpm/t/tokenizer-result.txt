1..1129
# Running under perl version 5.010000 for linux
# Current time local: Sat Sep  5 19:14:35 2009
# Current time GMT:   Sat Sep  5 10:14:35 2009
# Using Test.pm version 1.25
# t/tokenizer/test1.test
ok 1
not ok 2
# Test 2 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            undef,\n            undef,\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #2)
#   Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'HTML',\n            undef,\n            undef,\n            1\n          ]\n        ];\n" (Correct Doctype uppercase: qq'<!DOCTYPE HTML>')
#   Line 4 is changed:
#    - "            qq'HTML',\n"
#    + "            qq'html',\n"
#  t/HTML-tokenizer.t line 205 is:       ok $parser_dump, $expected_dump,
not ok 3
# Test 3 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            undef,\n            undef,\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #3)
#   Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'HtMl',\n            undef,\n            undef,\n            1\n          ]\n        ];\n" (Correct Doctype mixed case: qq'<!DOCTYPE HtMl>')
#   Line 4 is changed:
#    - "            qq'HtMl',\n"
#    + "            qq'html',\n"
ok 4
ok 5
ok 6
ok 7
ok 8
ok 9
ok 10
ok 11
ok 12
ok 13
ok 14
ok 15
ok 16
ok 17
ok 18
not ok 19
# Test 19 got: "$VAR1 = [\n          [\n            qq'Comment',\n            qq' --comment '\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #19)
#    Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq' --comment '\n          ]\n        ];\n" (Comment, two central dashes: qq'<!-- --comment -->')
#    Line 2 is missing:
#     - "          qq'ParseError',\n"
ok 20
ok 21
ok 22
ok 23
ok 24
ok 25
ok 26
ok 27
ok 28
ok 29
ok 30
ok 31
ok 32
ok 33
ok 34
ok 35
ok 36
ok 37
ok 38
ok 39
ok 40
ok 41
ok 42
ok 43
# t/tokenizer/test2.test
not ok 44
# Test 44 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            undef,\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #44)
#    Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            qq'',\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (DOCTYPE without name: qq'<!DOCTYPE>')
#    Line 6 is changed:
#     - "            qq'',\n"
#     + "            undef,\n"
ok 45
ok 46
ok 47
ok 48
ok 49
ok 50
ok 51
ok 52
ok 53
ok 54
ok 55
ok 56
ok 57
ok 58
ok 59
ok 60
ok 61
ok 62
ok 63
ok 64
ok 65
ok 66
ok 67
ok 68
ok 69
ok 70
ok 71
ok 72
ok 73
ok 74
ok 75
ok 76
ok 77
ok 78
ok 79
ok 80
ok 81
# t/tokenizer/test3.test
ok 82
ok 83
ok 84
ok 85
ok 86
ok 87
ok 88
ok 89
ok 90
ok 91
not ok 92
# Test 92 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq'--.'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #92)
#    Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq'--.'\n          ]\n        ];\n" (<!----.: qq'<!----.')
#    Line 3 is missing:
#     - "          qq'ParseError',\n"
ok 93
ok 94
ok 95
ok 96
ok 97
ok 98
ok 99
ok 100
ok 101
ok 102
ok 103
ok 104
ok 105
ok 106
ok 107
ok 108
not ok 109
# Test 109 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            undef,\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #109)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            qq'',\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (<!doctype >: qq'<!doctype >')
#     Line 5 is changed:
#      - "            qq'',\n"
#      + "            undef,\n"
not ok 110
# Test 110 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            undef,\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #110)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'DOCTYPE',\n            qq'',\n            undef,\n            undef,\n            0\n          ]\n        ];\n" (<!doctype  : qq'<!doctype  ')
#     Line 5 is changed:
#      - "            qq'',\n"
#      + "            undef,\n"
ok 111
ok 112
ok 113
ok 114
ok 115
ok 116
ok 117
ok 118
ok 119
ok 120
ok 121
ok 122
ok 123
ok 124
ok 125
ok 126
ok 127
ok 128
ok 129
ok 130
ok 131
ok 132
ok 133
ok 134
ok 135
ok 136
not ok 137
# Test 137 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #137)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'z'\n          ]\n        ];\n" (</z: qq'</z')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'EndTag',\n"
#      - "            qq'z'\n"
#      - "          ]\n"
ok 138
not ok 139
# Test 139 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #139)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {}\n          ]\n        ];\n" (<z : qq'<z ')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {}\n"
#      - "          ]\n"
ok 140
not ok 141
# Test 141 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #141)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {}\n          ]\n        ];\n" (<z/ : qq'<z/ ')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {}\n"
#      - "          ]\n"
ok 142
not ok 143
# Test 143 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #143)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {}\n          ]\n        ];\n" (<z: qq'<z')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {}\n"
#      - "          ]\n"
not ok 144
# Test 144 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #144)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'z'\n          ]\n        ];\n" (</z: qq'</z')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'EndTag',\n"
#      - "            qq'z'\n"
#      - "          ]\n"
not ok 145
# Test 145 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #145)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z0',\n            {}\n          ]\n        ];\n" (<z0: qq'<z0')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z0',\n"
#      - "            {}\n"
#      - "          ]\n"
not ok 146
# Test 146 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #146)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (<z/0=>: qq'<z/0=>')
#     Got 1 extra line at line 3:
#      + "          qq'ParseError',\n"
not ok 147
# Test 147 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #147)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (<z/0= : qq'<z/0= ')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq''\n"
#      - "            }\n"
#      - "          ]\n"
ok 148
not ok 149
# Test 149 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #149)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq'?'\n            }\n          ]\n        ];\n" (<z/0=? : qq'<z/0=? ')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq'?'\n"
#      - "            }\n"
#      - "          ]\n"
ok 150
ok 151
ok 152
ok 153
ok 154
ok 155
ok 156
ok 157
ok 158
not ok 159
# Test 159 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #159)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (<z/0 =: qq'<z/0 =')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq''\n"
#      - "            }\n"
#      - "          ]\n"
ok 160
not ok 161
# Test 161 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #161)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (<z/0  : qq'<z/0  ')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq''\n"
#      - "            }\n"
#      - "          ]\n"
ok 162
ok 163
not ok 164
# Test 164 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #164)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'00' => qq''\n            }\n          ]\n        ];\n" (<z/00: qq'<z/00')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              qq'00' => qq''\n"
#      - "            }\n"
#      - "          ]\n"
not ok 165
# Test 165 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #165)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq''\n            }\n          ]\n        ];\n" (<z/0 0: qq'<z/0 0')
#     Line 4 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 5-5 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq''\n"
#      - "            }\n"
#      - "          ]\n"
ok 166
ok 167
ok 168
not ok 169
# Test 169 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #169)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'0z' => qq''\n            }\n          ]\n        ];\n" (<z/0z: qq'<z/0z')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              qq'0z' => qq''\n"
#      - "            }\n"
#      - "          ]\n"
not ok 170
# Test 170 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #170)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq'',\n              qq'z' => qq''\n            }\n          ]\n        ];\n" (<z/0 z: qq'<z/0 z')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq'',\n"
#      - "              qq'z' => qq''\n"
#      - "            }\n"
#      - "          ]\n"
not ok 171
# Test 171 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #171)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'zz',\n            {}\n          ]\n        ];\n" (<zz: qq'<zz')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'zz',\n"
#      - "            {}\n"
#      - "          ]\n"
not ok 172
# Test 172 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #172)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'z' => qq''\n            }\n          ]\n        ];\n" (<z/z: qq'<z/z')
#     Line 3 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 4-4 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              qq'z' => qq''\n"
#      - "            }\n"
#      - "          ]\n"
# t/tokenizer/test4.test
not ok 173
# Test 173 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #173)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              0 => qq'',\n              qq'<' => qq''\n            }\n          ]\n        ];\n" (< in attribute name: qq'<z/0  <')
#     Line 4 is changed:
#      - "          [\n"
#      + "          qq'ParseError'\n"
#     Lines 5-5 are missing:
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {\n"
#      - "              0 => qq'',\n"
#      - "              qq'<' => qq''\n"
#      - "            }\n"
#      - "          ]\n"
not ok 174
# Test 174 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'x' => qq'<'\n            }\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #174)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'x' => qq'<'\n            }\n          ]\n        ];\n" (< in attribute value: qq'<z x=<')
#     Got 1 extra line at line 3:
#      + "          qq'ParseError',\n"
ok 175
ok 176
not ok 177
# Test 177 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'=' => qq''\n            }\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #177)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {\n              qq'=' => qq''\n            }\n          ]\n        ];\n" (== attribute: qq'<z ==>')
#     Got 1 extra line at line 3:
#      + "          qq'ParseError',\n"
ok 178
ok 179
ok 180
ok 181
ok 182
ok 183
ok 184
ok 185
ok 186
ok 187
ok 188
ok 189
ok 190
ok 191
ok 192
ok 193
ok 194
ok 195
ok 196
not ok 197
# Test 197 got: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #197)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'z',\n            {}\n          ]\n        ];\n" (CR EOF in tag name: qq'<z\x{0D}')
#     Line 2 is changed:
#      - "          qq'ParseError',\n"
#      + "          qq'ParseError'\n"
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'StartTag',\n"
#      - "            qq'z',\n"
#      - "            {}\n"
#      - "          ]\n"
ok 198
ok 199
ok 200
ok 201
ok 202
ok 203
ok 204
ok 205
ok 206
ok 207
ok 208
ok 209
ok 210
ok 211
ok 212
ok 213
ok 214
ok 215
ok 216
ok 217
ok 218
ok 219
ok 220
ok 221
ok 222
not ok 223
# Test 223 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            qq'AbC',\n            qq'XyZ',\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #223)
#     Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'HtMl',\n            qq'AbC',\n            qq'XyZ',\n            1\n          ]\n        ];\n" (Doctype public case-sensitivity (1): qq'<!DoCtYpE HtMl PuBlIc "AbC" "XyZ">')
#     Line 4 is changed:
#      - "            qq'HtMl',\n"
#      + "            qq'html',\n"
not ok 224
# Test 224 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            qq'aBc',\n            qq'xYz',\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #224)
#     Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'hTmL',\n            qq'aBc',\n            qq'xYz',\n            1\n          ]\n        ];\n" (Doctype public case-sensitivity (2): qq'<!dOcTyPe hTmL pUbLiC "aBc" "xYz">')
#     Line 4 is changed:
#      - "            qq'hTmL',\n"
#      + "            qq'html',\n"
not ok 225
# Test 225 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            undef,\n            qq'XyZ',\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #225)
#     Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'HtMl',\n            undef,\n            qq'XyZ',\n            1\n          ]\n        ];\n" (Doctype system case-sensitivity (1): qq'<!DoCtYpE HtMl SyStEm "XyZ">')
#     Line 4 is changed:
#      - "            qq'HtMl',\n"
#      + "            qq'html',\n"
not ok 226
# Test 226 got: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'html',\n            undef,\n            qq'xYz',\n            1\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #226)
#     Expected: "$VAR1 = [\n          [\n            qq'DOCTYPE',\n            qq'hTmL',\n            undef,\n            qq'xYz',\n            1\n          ]\n        ];\n" (Doctype system case-sensitivity (2): qq'<!dOcTyPe hTmL sYsTeM "xYz">')
#     Line 4 is changed:
#      - "            qq'hTmL',\n"
#      + "            qq'html',\n"
not ok 227
# Test 227 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq'doc'\n          ],\n          [\n            qq'Character',\n            qq'\\x{FFFD}'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #227)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq'doc'\n          ],\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'\\x{FFFD}'\n          ]\n        ];\n" (U+0000 in lookahead region after non-matching character: qq'<!doc>\x{00}')
#     Got 1 extra line at line 3:
#      + "          qq'ParseError',\n"
#     Line 8 is missing:
#      - "          qq'ParseError',\n"
ok 228
ok 229
ok 230
ok 231
ok 232
ok 233
ok 234
ok 235
ok 236
ok 237
ok 238
ok 239
ok 240
ok 241
ok 242
ok 243
ok 244
# t/tokenizer/contentModelFlags.test
ok 245
ok 246
ok 247
ok 248
ok 249
ok 250
ok 251
ok 252
ok 253
ok 254
ok 255
ok 256
ok 257
# t/tokenizer/escapeFlag.test
ok 258
ok 259
ok 260
ok 261
ok 262
ok 263
ok 264
ok 265
ok 266
# t/tokenizer/entities.test
ok 267
ok 268
ok 269
ok 270
ok 271
ok 272
ok 273
ok 274
ok 275
ok 276
ok 277
ok 278
ok 279
ok 280
ok 281
ok 282
ok 283
ok 284
ok 285
ok 286
ok 287
ok 288
ok 289
ok 290
ok 291
ok 292
ok 293
ok 294
ok 295
ok 296
ok 297
ok 298
ok 299
ok 300
ok 301
ok 302
ok 303
ok 304
ok 305
ok 306
ok 307
ok 308
ok 309
ok 310
ok 311
ok 312
ok 313
ok 314
ok 315
ok 316
ok 317
ok 318
ok 319
ok 320
ok 321
ok 322
ok 323
ok 324
ok 325
ok 326
ok 327
ok 328
ok 329
ok 330
ok 331
ok 332
ok 333
ok 334
ok 335
ok 336
ok 337
ok 338
ok 339
ok 340
ok 341
ok 342
ok 343
ok 344
ok 345
ok 346
ok 347
ok 348
ok 349
ok 350
ok 351
ok 352
ok 353
ok 354
ok 355
ok 356
ok 357
ok 358
ok 359
ok 360
ok 361
ok 362
ok 363
ok 364
ok 365
ok 366
ok 367
ok 368
ok 369
ok 370
ok 371
ok 372
ok 373
ok 374
ok 375
ok 376
ok 377
ok 378
ok 379
ok 380
ok 381
ok 382
ok 383
ok 384
ok 385
ok 386
ok 387
ok 388
ok 389
ok 390
ok 391
ok 392
ok 393
ok 394
ok 395
ok 396
ok 397
ok 398
ok 399
ok 400
ok 401
ok 402
ok 403
ok 404
ok 405
ok 406
ok 407
ok 408
ok 409
ok 410
ok 411
ok 412
ok 413
ok 414
ok 415
ok 416
ok 417
ok 418
ok 419
ok 420
ok 421
ok 422
ok 423
ok 424
ok 425
ok 426
ok 427
ok 428
ok 429
ok 430
ok 431
ok 432
ok 433
ok 434
ok 435
ok 436
ok 437
ok 438
ok 439
ok 440
ok 441
ok 442
ok 443
ok 444
ok 445
ok 446
ok 447
ok 448
ok 449
ok 450
ok 451
ok 452
ok 453
ok 454
ok 455
ok 456
ok 457
ok 458
ok 459
ok 460
ok 461
ok 462
ok 463
ok 464
ok 465
ok 466
ok 467
ok 468
ok 469
ok 470
ok 471
ok 472
ok 473
ok 474
ok 475
ok 476
ok 477
ok 478
ok 479
ok 480
ok 481
ok 482
ok 483
ok 484
ok 485
ok 486
ok 487
ok 488
ok 489
ok 490
ok 491
ok 492
ok 493
ok 494
ok 495
ok 496
ok 497
ok 498
ok 499
ok 500
ok 501
ok 502
ok 503
ok 504
ok 505
ok 506
ok 507
ok 508
ok 509
ok 510
ok 511
ok 512
ok 513
ok 514
ok 515
ok 516
ok 517
ok 518
ok 519
ok 520
ok 521
ok 522
ok 523
ok 524
ok 525
ok 526
ok 527
ok 528
ok 529
ok 530
ok 531
ok 532
ok 533
ok 534
ok 535
ok 536
ok 537
ok 538
ok 539
ok 540
ok 541
ok 542
ok 543
ok 544
ok 545
ok 546
ok 547
ok 548
ok 549
ok 550
ok 551
ok 552
ok 553
ok 554
ok 555
ok 556
ok 557
ok 558
ok 559
ok 560
ok 561
ok 562
ok 563
ok 564
ok 565
ok 566
ok 567
ok 568
ok 569
ok 570
ok 571
ok 572
ok 573
ok 574
ok 575
ok 576
ok 577
ok 578
ok 579
ok 580
ok 581
ok 582
ok 583
ok 584
ok 585
ok 586
ok 587
ok 588
ok 589
ok 590
ok 591
ok 592
ok 593
ok 594
ok 595
ok 596
ok 597
ok 598
ok 599
ok 600
ok 601
ok 602
ok 603
ok 604
ok 605
ok 606
ok 607
ok 608
ok 609
ok 610
ok 611
ok 612
ok 613
ok 614
ok 615
ok 616
ok 617
ok 618
ok 619
ok 620
ok 621
ok 622
ok 623
ok 624
ok 625
ok 626
ok 627
ok 628
ok 629
ok 630
ok 631
ok 632
ok 633
ok 634
ok 635
ok 636
ok 637
ok 638
ok 639
ok 640
ok 641
ok 642
ok 643
ok 644
ok 645
ok 646
ok 647
ok 648
ok 649
ok 650
ok 651
ok 652
ok 653
ok 654
ok 655
ok 656
ok 657
ok 658
ok 659
ok 660
ok 661
ok 662
ok 663
ok 664
ok 665
ok 666
ok 667
ok 668
ok 669
ok 670
ok 671
ok 672
ok 673
ok 674
ok 675
ok 676
ok 677
ok 678
ok 679
ok 680
ok 681
ok 682
ok 683
ok 684
ok 685
ok 686
ok 687
ok 688
ok 689
ok 690
ok 691
ok 692
ok 693
ok 694
ok 695
ok 696
ok 697
ok 698
ok 699
ok 700
ok 701
ok 702
ok 703
ok 704
ok 705
ok 706
ok 707
ok 708
ok 709
ok 710
ok 711
ok 712
ok 713
ok 714
ok 715
ok 716
ok 717
ok 718
ok 719
ok 720
ok 721
ok 722
ok 723
ok 724
ok 725
ok 726
ok 727
ok 728
ok 729
ok 730
ok 731
ok 732
ok 733
ok 734
ok 735
ok 736
ok 737
ok 738
ok 739
ok 740
ok 741
ok 742
ok 743
ok 744
ok 745
ok 746
ok 747
ok 748
ok 749
ok 750
ok 751
ok 752
ok 753
ok 754
ok 755
ok 756
ok 757
ok 758
ok 759
ok 760
ok 761
ok 762
ok 763
ok 764
ok 765
ok 766
ok 767
ok 768
ok 769
ok 770
ok 771
ok 772
ok 773
ok 774
ok 775
ok 776
ok 777
ok 778
ok 779
ok 780
ok 781
ok 782
ok 783
ok 784
ok 785
ok 786
ok 787
ok 788
ok 789
ok 790
ok 791
ok 792
ok 793
ok 794
ok 795
ok 796
ok 797
ok 798
ok 799
ok 800
ok 801
ok 802
ok 803
ok 804
ok 805
ok 806
ok 807
ok 808
ok 809
ok 810
ok 811
ok 812
ok 813
ok 814
ok 815
ok 816
ok 817
ok 818
ok 819
ok 820
ok 821
ok 822
ok 823
ok 824
ok 825
ok 826
ok 827
ok 828
ok 829
ok 830
ok 831
ok 832
ok 833
ok 834
ok 835
ok 836
ok 837
ok 838
ok 839
ok 840
ok 841
ok 842
ok 843
ok 844
ok 845
ok 846
ok 847
ok 848
ok 849
ok 850
# t/tokenizer/xmlViolation.test
not ok 851
# Test 851 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'a\\x{FFFF}b'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #851)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'a\\x{FFFD}b'\n          ]\n        ];\n" (Non-XML character: qq'a\x{FFFF}b')
#     Line 5 is changed:
#      - "            qq'a\\x{FFFD}b'\n"
#      + "            qq'a\\x{FFFF}b'\n"
not ok 852
# Test 852 got: "$VAR1 = [\n          [\n            qq'Character',\n            qq'a\\x{0C}b'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #852)
#     Expected: "$VAR1 = [\n          [\n            qq'Character',\n            qq'a b'\n          ]\n        ];\n" (Non-XML space: qq'a\x{0C}b')
#     Line 4 is changed:
#      - "            qq'a b'\n"
#      + "            qq'a\\x{0C}b'\n"
not ok 853
# Test 853 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq' foo -- bar '\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #853)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq' foo - - bar '\n          ]\n        ];\n" (Double hyphen in comment: qq'<!-- foo -- bar -->')
#     Line 5 is changed:
#      - "            qq' foo - - bar '\n"
#      + "            qq' foo -- bar '\n"
ok 854
# t/tokenizer-test-1.test
ok 855
ok 856
ok 857
ok 858
ok 859
ok 860
ok 861
ok 862
ok 863
ok 864
ok 865
ok 866
ok 867
ok 868
ok 869
ok 870
ok 871
ok 872
ok 873
ok 874
ok 875
ok 876
ok 877
ok 878
ok 879
ok 880
ok 881
ok 882
ok 883
ok 884
ok 885
ok 886
ok 887
ok 888
ok 889
ok 890
ok 891
ok 892
ok 893
ok 894
ok 895
ok 896
ok 897
ok 898
ok 899
ok 900
ok 901
ok 902
ok 903
ok 904
ok 905
ok 906
ok 907
ok 908
ok 909
ok 910
ok 911
ok 912
ok 913
ok 914
ok 915
ok 916
ok 917
ok 918
ok 919
ok 920
ok 921
ok 922
ok 923
ok 924
ok 925
ok 926
ok 927
not ok 928
# Test 928 got: "$VAR1 = [\n          [\n            qq'Comment',\n            qq'--x'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #928)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Comment',\n            qq'--x'\n          ]\n        ];\n" (<!----x-->: qq'<!----x-->')
#     Line 2 is missing:
#      - "          qq'ParseError',\n"
ok 929
ok 930
ok 931
ok 932
ok 933
ok 934
ok 935
ok 936
ok 937
ok 938
ok 939
ok 940
ok 941
ok 942
ok 943
ok 944
ok 945
ok 946
ok 947
ok 948
ok 949
ok 950
ok 951
ok 952
ok 953
ok 954
ok 955
ok 956
ok 957
ok 958
ok 959
ok 960
ok 961
ok 962
ok 963
ok 964
ok 965
ok 966
ok 967
ok 968
ok 969
not ok 970
# Test 970 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'\\x{FFFD}\\x{DFFF}'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #970)
#     Expected: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'\\x{FFFD}'\n          ],\n          qq'ParseError',\n          [\n            qq'Character',\n            qq'\\x{DFFF}'\n          ]\n        ];\n" (surrogate character reference: qq'&#xD800;\x{DFFF}')
#     Lines 3-3 are missing:
#      - "          [\n"
#      - "            qq'Character',\n"
#      - "            qq'\\x{FFFD}'\n"
#      - "          ],\n"
#     Line 6 is changed:
#      - "            qq'\\x{DFFF}'\n"
#      + "            qq'\\x{FFFD}\\x{DFFF}'\n"
ok 971
ok 972
ok 973
ok 974
ok 975
ok 976
ok 977
ok 978
ok 979
ok 980
ok 981
ok 982
ok 983
ok 984
ok 985
ok 986
ok 987
ok 988
ok 989
ok 990
ok 991
ok 992
ok 993
ok 994
ok 995
ok 996
ok 997
ok 998
ok 999
ok 1000
ok 1001
ok 1002
ok 1003
ok 1004
ok 1005
ok 1006
ok 1007
ok 1008
ok 1009
ok 1010
ok 1011
ok 1012
ok 1013
ok 1014
ok 1015
ok 1016
ok 1017
ok 1018
ok 1019
ok 1020
ok 1021
ok 1022
ok 1023
ok 1024
ok 1025
ok 1026
ok 1027
ok 1028
ok 1029
ok 1030
ok 1031
ok 1032
ok 1033
ok 1034
ok 1035
ok 1036
ok 1037
ok 1038
ok 1039
ok 1040
ok 1041
ok 1042
ok 1043
ok 1044
ok 1045
ok 1046
ok 1047
ok 1048
ok 1049
ok 1050
ok 1051
ok 1052
ok 1053
ok 1054
ok 1055
ok 1056
ok 1057
ok 1058
ok 1059
ok 1060
ok 1061
ok 1062
ok 1063
ok 1064
ok 1065
ok 1066
ok 1067
ok 1068
ok 1069
ok 1070
ok 1071
ok 1072
ok 1073
ok 1074
ok 1075
ok 1076
ok 1077
ok 1078
ok 1079
ok 1080
ok 1081
ok 1082
ok 1083
ok 1084
ok 1085
ok 1086
ok 1087
ok 1088
ok 1089
ok 1090
ok 1091
ok 1092
ok 1093
ok 1094
ok 1095
ok 1096
ok 1097
ok 1098
ok 1099
ok 1100
ok 1101
ok 1102
ok 1103
ok 1104
ok 1105
ok 1106
ok 1107
ok 1108
ok 1109
ok 1110
ok 1111
ok 1112
ok 1113
ok 1114
ok 1115
ok 1116
ok 1117
ok 1118
ok 1119
ok 1120
ok 1121
ok 1122
ok 1123
ok 1124
ok 1125
ok 1126
ok 1127
ok 1128
ok 1129
ok 1130
ok 1131
ok 1132
ok 1133
ok 1134
ok 1135
ok 1136
ok 1137
ok 1138
not ok 1139
# Test 1139 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'p'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1139)
#      Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (end tag not closed (attribute value single quote): qq'</p class=\x{27}')
#      Line 3 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 4 extra lines at line 4:
#       + "          [\n"
#       + "            qq'EndTag',\n"
#       + "            qq'p'\n"
#       + "          ]\n"
ok 1140
not ok 1141
# Test 1141 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'p'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1141)
#      Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (end tag not closed (attribute value unquoted): qq'</p class=a')
#      Line 3 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 4 extra lines at line 4:
#       + "          [\n"
#       + "            qq'EndTag',\n"
#       + "            qq'p'\n"
#       + "          ]\n"
ok 1142
ok 1143
ok 1144
ok 1145
not ok 1146
# Test 1146 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'p',\n            {\n              qq'class' => qq'a'\n            }\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1146)
#      Expected: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (start tag not closed (after attribute value (quoted)): qq'<p class=\x{27}a\x{27}')
#      Line 2 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 7 extra lines at line 3:
#       + "          [\n"
#       + "            qq'StartTag',\n"
#       + "            qq'p',\n"
#       + "            {\n"
#       + "              qq'class' => qq'a'\n"
#       + "            }\n"
#       + "          ]\n"
not ok 1147
# Test 1147 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'p'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1147)
#      Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (end tag not closed (after attribute value (quoted)): qq'</p class=\x{27}a\x{27}')
#      Line 3 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 4 extra lines at line 4:
#       + "          [\n"
#       + "            qq'EndTag',\n"
#       + "            qq'p'\n"
#       + "          ]\n"
not ok 1148
# Test 1148 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'StartTag',\n            qq'p',\n            {\n              qq'class' => qq'a'\n            }\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1148)
#      Expected: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (start tag not closed (self-closing start tag): qq'<p class=\x{27}a\x{27}/')
#      Line 2 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 7 extra lines at line 3:
#       + "          [\n"
#       + "            qq'StartTag',\n"
#       + "            qq'p',\n"
#       + "            {\n"
#       + "              qq'class' => qq'a'\n"
#       + "            }\n"
#       + "          ]\n"
not ok 1149
# Test 1149 got: "$VAR1 = [\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'p'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1149)
#      Expected: "$VAR1 = [\n          qq'ParseError'\n        ];\n" (end tag not closed (self-closing start tag): qq'</p/')
#      Line 2 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 4 extra lines at line 3:
#       + "          [\n"
#       + "            qq'EndTag',\n"
#       + "            qq'p'\n"
#       + "          ]\n"
not ok 1150
# Test 1150 got: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError',\n          [\n            qq'EndTag',\n            qq'p'\n          ]\n        ];\n" (t/HTML-tokenizer.t at line 205 fail #1150)
#      Expected: "$VAR1 = [\n          qq'ParseError',\n          qq'ParseError'\n        ];\n" (end tag not closed (self-closing start tag): qq'</p class=\x{27}a\x{27}/')
#      Line 3 is changed:
#       - "          qq'ParseError'\n"
#       + "          qq'ParseError',\n"
#      Got 4 extra lines at line 4:
#       + "          [\n"
#       + "            qq'EndTag',\n"
#       + "            qq'p'\n"
#       + "          ]\n"
